{"version":3,"sources":["../static/js/6.chunk.js","../node_modules/devextreme/ui/color_box.js","../node_modules/devextreme/ui/color_box/color_box.js","../node_modules/devextreme/ui/color_box/color_view.js","../node_modules/devextreme/ui/draggable.js","../node_modules/devextreme-react/ui/color-box.js","../node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js","../node_modules/devextreme/ui/number_box.js","../node_modules/devextreme/ui/shared/async_template_mixin.js","../node_modules/devextreme/ui/number_box/number_box.js","../node_modules/devextreme/ui/number_box/number_box.mask.js","../node_modules/devextreme/ui/number_box/number_box.caret.js","../node_modules/devextreme/ui/number_box/number_box.base.js","../node_modules/devextreme/ui/number_box/number_box.spin.js","../node_modules/devextreme/color.js","../node_modules/devextreme-react/color-box.js"],"names":["webpackJsonp","1134","module","exports","__webpack_require__","default","1135","$","eventsEngine","Color","ColorView","extend","isFunction","registerComponent","DropDownEditor","colorEditorPrototype","prototype","colorUtils","makeTransparentBackground","_makeTransparentBackground","bind","makeRgba","_makeRgba","ColorBox","inherit","_supportedKeys","arrowHandler","e","stopPropagation","this","option","preventDefault","upArrowHandler","altKey","close","downArrowHandler","_validatedOpening","callBase","tab","_colorView","_rgbInputs","focus","enter","_enterKeyHandler","leftArrow","rightArrow","upArrow","downArrow","_getDefaultOptions","editAlphaChannel","applyValueMode","keyStep","fieldTemplate","onApplyButtonClick","onCancelButtonClick","buttonsLocation","_popupConfig","height","width","_contentReadyHandler","_createColorView","_addPopupBottomClasses","$popupBottom","_popup","bottomToolbar","addClass","find","overlayContent","COLOR_BOX_CLASS","$colorView","appendTo","$content","_createComponent","_colorViewConfig","on","_applyNewColor","value","_$colorResultPreview","_colorViewEnterKeyPressed","that","matchValue","focusStateEnabled","stylingMode","onEnterKeyPressed","onValueChanged","args","previousValue","_keyboardProcessor","_colorViewProcessor","newValue","_input","val","oldValue","colorIsInvalid","_applyColorFromInput","colorViewValue","_applyButtonHandler","_cancelButtonHandler","_resetInputValue","_attachChildKeyboardEvents","attachChildProcessor","_init","_initMarkup","$element","_renderInput","_renderColorPreview","wrapInner","COLOR_BOX_INPUT_CLASS","_$colorBoxInputContainer","children","eq","_renderValue","$input","_updateColorViewValue","_valueChangeEventHandler","_optionChanged","name","toggleClass","removeAttr","1136","translator","messageLocalization","devices","Editor","NumberBox","TextBox","Draggable","clickEvent","isRTL","getHorizontalPaletteStep","step","_paletteWidth","shiftKey","Math","round","updateHorizontalPaletteValue","_currentColor","hsv","s","updatePaletteValue","getVerticalPaletteStep","_paletteHeight","updateVerticalPaletteValue","v","_placePaletteHandle","_updateColorFromHsv","h","getHueScaleStep","_hueScaleWrapperHeight","_hueScaleHandleHeight","updateHueScaleValue","_placeHueScaleHandle","handleLocation","locate","_$hueScaleHandle","_updateColorHue","top","getAlphaScaleStep","_alphaChannelScaleWorkWidth","updateAlphaScaleValue","a","_placeAlphaChannelHandle","_$alphaChannelHandle","_calculateColorTransparencyByScaleWidth","left","_alphaChannelHandleWidth","ctrlKey","_isTopColorHue","_fireEnterKeyPressed","_defaultOptionsRules","concat","device","real","deviceType","isSimulator","options","_initColorAndOpacity","_initEnterKeyPressedAction","_onEnterKeyPressedAction","_createActionByOption","event","_setCurrentColor","newColor","baseColor","_$currentColor","_setBaseColor","color","_$baseColor","_renderColorPickerContainer","_render","_renderPalette","_renderHueScale","_renderControlsContainer","_renderControls","_renderAlphaChannelElements","$el","css","r","g","b","join","$parent","_$colorPickerContainer","_renderHtmlRows","updatedOption","$renderedRows","renderedRowsCount","length","rowCount","delta","remove","abs","i","rows","push","after","append","_renderHtmlCellInsideRow","index","$rowParent","additionalClass","$paletteCell","$paletteGradientWhite","$paletteGradientBlack","_$palette","getPureColor","toHex","_renderPaletteHandle","_$paletteHandle","area","allowMoveByClick","boundOffset","_paletteHandleHeight","onDrag","paletteHandlePosition","_updateByDrag","_calculateColorSaturation","_calculateColorValue","_paletteHandleWidth","move","floor","saturation","hue","_updateColorParamsAndColorPreview","applyColor","$hueScaleCell","_$hueScaleWrapper","_$hueScale","_hueScaleHeight","outerHeight","_renderHueScaleHandle","direction","hueScaleHeight","handleHeight","handlePosition","$controlsContainerCell","_$controlsContainer","_renderColorsPreview","_renderRgbInputs","_renderHexInput","$colorsPreviewContainer","$colorsPreviewContainerInner","_renderAlphaChannelScale","_renderAlphaChannelInput","_rgbInputsWithLabels","_renderEditorWithLabel","editorType","_updateColor","labelText","labelAriaText","format","labelClass","dxNumberBox","$editor","$label","text","off","editorOptions","min","max","registerKeyHandler","setAria","hexInputOptions","replace","_hexInput","getInstance","$alphaChannelScaleCell","$alphaChannelBorder","$alphaChannelScaleWrapper","_$alphaChannelScale","_makeCSSLinearGradient","_renderAlphaChannelHandle","colorAsRgb","colorAsHex","combineGradientString","rtlEnabled","startColor","finishColor","attr","call","$alphaChannelInputCell","_alphaChannelInput","isValidAlpha","_updateColorTransparency","transparency","$alphaChannelHandle","alphaChannelHandlePosition","toFixed","colorValue","cancelColor","_refreshMarkup","isHex","rgba","_validateHex","_validateRgb","_suppressEditorsValueUpdating","hex","isValidHex","isValidRGB","1137","window","getWindow","stringUtils","dasherize","DOMComponent","eventUtils","pointerEvents","dragEvents","positionUtils","noop","DRAGGABLE","DRAGSTART_EVENT_NAME","addNamespace","start","DRAG_EVENT_NAME","DRAGEND_EVENT_NAME","end","POINTERDOWN_EVENT_NAME","down","DRAGGABLE_CLASS","DRAGGABLE_DRAGGING_CLASS","onDragStart","onDragEnd","immediate","_attachEventHandlers","eventHandlers","_dragStartHandler","_dragHandler","_dragEndHandler","_pointerDownHandler","_getArea","_detachEventHandlers","_move","position","needSkipEvent","areaOffset","_getAreaOffset","currentTarget","pageX","pageY","_getAction","is","cancel","$area","_getBoundOffset","areaWidth","outerWidth","areaHeight","elementWidth","elementHeight","_toggleDraggingClass","startOffset","offset","_startPosition","maxLeftOffset","maxRightOffset","right","maxTopOffset","maxBottomOffset","bottom","quadToObject","startPosition","x","y","_dispose","623","Object","defineProperty","m","p","hasOwnProperty","color_box_1","642","AsyncTemplateMixin","Guid","commonUtils","domUtils","focused","each","isDefined","getPublicElement","errors","getDefaultAlignment","Button","FunctionTemplate","Popup","homeEndHandler","$focusableElement","_getLastPopupElement","_getFirstPopupElement","trigger","escape","home","onOpened","onClosed","opened","acceptCustomValue","deferRendering","activeStateEnabled","dropDownButtonTemplate","contentTemplate","openOnFieldClick","showDropDownButton","popupPosition","_getDefaultPopupPosition","onPopupInitialized","applyButtonText","cancelButtonText","showPopupTitle","my","at","collision","_device","isGeneric","platform","isWin10","version","_inputWrapper","_initVisibilityActions","_initPopupInitializedAction","_openAction","excludeValidators","_closeAction","_popupInitializedAction","_renderOpenHandler","_renderOpenedState","_renderContentImpl","_createPopup","_$container","haspopup","autocomplete","_readOnlyPropValue","_cleanFocusState","_renderField","_getTemplateByOption","_renderTemplatedField","_fieldRenderData","data","_this","isFocused","$container","_disposeKeyboardProcessor","empty","_$dropDownButton","_$clearButton","render","model","container","onRendered","Error","_refreshEvents","_refreshValueChangeEvent","_renderFocusState","_renderInputAddons","_renderDropDownButton","_createDropDownButton","_attachDropDownButtonClickHandler","dxButton","_openHandler","_initTemplates","_defaultTemplates","dropDownButton","$icon","$button","prependTo","_buttonsContainer","hoverStateEnabled","disabled","useInkRipple","template","removeClass","$inputWrapper","eventName","NAME","_getInputClickHandler","_openOnFieldClickAction","_createAction","_executeOpenAction","_focusInput","_toggleOpenState","_keyboardEventBindingTarget","isVisible","arguments","_setPopupOption","expanded","owns","_popupContentId","_$popup","_renderPopup","_renderPopupContent","showing","_popupShowingHandler","shown","_popupShownHandler","hiding","_popupHidingHandler","hidden","_popupHiddenHandler","onInitialized","_popupInitializedHandler","of","showTitle","shading","closeOnTargetScroll","closeOnOutsideClick","_closeOutsideDropDownHandler","animation","show","type","duration","from","to","hide","showCloseButton","toolbarItems","_getPopupToolbarItems","onPositioned","_popupPositionedHandler","fullScreen","popup","component","flip","_$validationMessage","dxOverlay","_getValidationMessagePosition","positionRequest","myTop","setup","popupTop","$popupContent","templateData","$target","target","isInputClicked","closest","isDropDownButtonClicked","_clean","optionName","_setWidgetOption","_popupToolbarItemsConfig","_wrapper","_popupElementTabHandler","_popupElementEscHandler","_popupButtonInitializedHandler","buttonsConfig","shortcut","onClick","_applyButtonsLocation","resultConfig","splitPair","_","element","toolbar","location","_toggleReadOnlyState","_invalidate","open","field","content","include","645","650","_waitAsyncTemplates","callback","_options","templatesRenderAsynchronously","_asyncTemplatesTimers","timer","setTimeout","clearTimeout","_cleanAsyncTemplatesTimer","timers","655","NumberBoxMask","656","isNumeric","browser","fitIntoRange","inRange","escapeRegExp","number","maskCaret","getLDMLFormat","getFormat","NumberBoxBase","typeUtils","ensureDefined","defaultValue","useMaskBehavior","_isDeleteKey","key","_useMaskBehavior","minus","_revertSign","del","_removeHandler","backspace","_arrowHandler","_moveCaretToBoundary","_updateFormattedValue","_focusInHandler","caret","_caret","msie","_ieCaretTimeout","_focusOutHandler","_focusOutOccurs","_hasValueBeenChanged","inputValue","_getFormatPattern","_format","_getInputVal","_parsedValue","_tryParse","_adjustParsedValue","_setTextByParsedValue","nextCaret","getCaretWithOffset","isCaretInBoundaries","getCaretInBoundaries","boundaries","getCaretBoundaries","newCaret","_shouldMoveCaret","decimalSeparator","getDecimalSeparator","isDecimalSeparatorNext","charAt","isZeroNext","moveToFloat","_lastKey","zeroToZeroReplace","convertDigits","_keyboardHandler","originalEvent","_shouldHandleKey","enteredChar","_moveCaret","_keyPressHandler","char","slice","_isStub","decimalSeparatorIndex","indexOf","_isNonStubAfter","_replaceSelectedText","search","_isValueInRange","valueAfterRemoving","_isPercentFormat","_parse","formatOption","formatter","parser","parse","_getFormatForSign","signParts","split","sign","getSign","_removeStubs","excludeComma","thousandsSeparator","getThousandsSeparator","stubs","regExp","RegExp","_truncateToPrecision","maxPrecision","strValue","toString","parsedValue","parseFloat","substr","isNaN","selection","editedText","isTextSelected","parsed","_getPrecisionLimits","isValueChanged","isDecimalPointRestricted","isUselessCharRestricted","_isValueIncomplete","point","pointIndex","isCaretOnFloat","textParts","floatLength","precision","isPrecisionInRange","endsWithZero","_setInputText","getCaretAfterFormat","_toggleEmptinessEventHandler","_formattedValue","_renderInputType","isNumberType","isMobileDevice","_setInputType","_isChar","str","adjustedCaret","isSpecialChar","isMinusKey","_renderFormatter","_clearCache","_detachFormatterEvents","_attachFormatterEvents","_formatValue","_forceRefreshInputValue","isString","escapedDecimalSeparator","regExpString","test","_parseValue","currentFormat","floatPart","_applyRevertedSign","preserveSelectedText","previousText","currentText","getCaretOffset","caretInBoundaries","_removeMinusFromText","formatted","textWithoutMinus","wasMinusRemoved","_renderDisplayText","apply","clearedText","_saveValueChangeEvent","_optionValuesEqual","657","map","prefixStubLength","exec","postfixStubLength","_getDigitCountBeforeIndex","_reverseText","reverse","_getDigitPositionByIndex","digitIndex","counter","result","pointPosition","newPointPosition","formattedParts","relativeIndex","digitsBefore","newPosition","positionFromEnd","digitsFromEnd","newPositionFromEnd","newPositionFromBegin","newText","previousBoundaries","658","domAdapter","mathUtils","inArray","TextEditor","SpinButton","math","FIREFOX_CONTROL_KEYS","_spinUpChangeHandler","_spinDownChangeHandler","showSpinButtons","useLargeSpinButtons","mode","invalidValueMessage","generic","_renderSubmitElement","_validateValue","_$submitElement","_setSubmitValue","applyServerDecimalSeparator","_getSubmitElement","String","fromCharCode","which","metaKey","_keyPressed","_onMouseWheel","dxEvent","_spinValueChange","Number","_forceValueRender","_renderValueEventName","_toggleDisabledState","_$spinUp","_$spinDown","formattedValue","_applyValueFormat","_renderProps","prop","valuemin","valuemax","_renderSpinButtons","spinButtonsVisible","_toggleTouchFriendlyClass","_$spinContainer","_createSpinButtons","pointerDownAction","_spinButtonsPointerDownHandler","$spinContainer","onChange","getActiveElement","_normalizeInputValue","_correctRounding","regex","isFloatValue","isFloatStep","valueAccuracy","stepAccuracy","accuracy","_round","multiplier","pow","_renderValueChangeEvent","_normalizeText","valueHasDigits","_isValueValid","_applyValueBoundaries","validationRequest","fire","editor","isValueIncomplete","isValueCorrect","_replaceCommaWithPoint","_inputIsInvalid","isNumberMode","validityState","get","validity","badInput","_isNumber","isValueValid","isValid","isNumber","validationError","editorSpecific","message","trim","reset","_resumeValueChangeAction","659","Widget","feedbackEvents","holdEvent","Deferred","POINTERUP_EVENT_NAME","up","POINTERCANCEL_EVENT_NAME","SPIN_CLASS","_spinIcon","_spinDownHandler","_spinChangeHandler","_clearTimer","_feedBackDeferred","lock","_holdTimer","setInterval","document","getDocument","resolve","clearInterval","741","toLowerCase","standardColorNames","parseColor","normalize","toHsvFromRgb","hsl","l","toHslFromRgb","ii","standardColorTypes","re","process","colorComponent","def","toHexFromRgb","H","S","V","hsvToRgb","vDec","vInc","vMin","calculateHue","convertTo01Bounds","maxMinSum","makeColorTint","colorPart","colorTint","modifyColorTint","hueToRgb","q","hslToRgb","n","isIntegerBetweenMinAndMax","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","colorString","parseInt","rgb","constructor","highlight","alter","darken","blend","blendColor","opacity","other","fromHSL","864","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","__","create","prop_types_1","component_1","_super","_WidgetClass","_defaults","defaultOpened","_templateProps","tmplOption","keyFn","_instance","enumerable","configurable","Component","propTypes","PropTypes","bool","accessKey","string","oneOf","elementAttr","object","oneOfType","func","hint","inputAttr","onCopy","onCut","onDisposing","onEnterKey","onFocusIn","onFocusOut","onInput","onKeyDown","onKeyPress","onKeyUp","onOptionChanged","onPaste","placeholder","readOnly","tabIndex","validationMessageMode","visible"],"mappings":"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","file":"static/js/6.chunk.js","sourcesContent":["webpackJsonp([6],{\n\n/***/ 1134:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(1135);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 1135:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    Color = __webpack_require__(741),\r\n    ColorView = __webpack_require__(1136),\r\n    extend = __webpack_require__(3).extend,\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    registerComponent = __webpack_require__(17),\r\n    DropDownEditor = __webpack_require__(642);\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\",\r\n    COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\",\r\n    COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\",\r\n    COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\",\r\n    COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\",\r\n    COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\",\r\n    COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\",\r\n    COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\",\r\n    COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\",\r\n    COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype,\r\n    colorUtils = {\r\n        makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n        makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n    };\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        var upArrowHandler = function(e) {\r\n            if (!this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (e.altKey) {\r\n                this.close();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        var downArrowHandler = function(e) {\r\n            if (!this.option(\"opened\") && !e.altKey) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (!this.option(\"opened\") && e.altKey) {\r\n                this._validatedOpening();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: upArrowHandler,\r\n            downArrow: downArrowHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            onApplyButtonClick: null,\r\n            onCancelButtonClick: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            height: \"auto\",\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            matchValue: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function() {\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(args) {\r\n                if (colorUtils.makeRgba(args.value) === args.previousValue) {\r\n                    return\r\n                }\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                if (!instantlyMode && !that._colorViewEnterKeyPressed) {\r\n                    return\r\n                }\r\n                that._applyNewColor(args.value)\r\n            },\r\n            _keyboardProcessor: that._colorViewProcessor\r\n        }\r\n    },\r\n    _enterKeyHandler: function() {\r\n        var newValue = this._input().val(),\r\n            value = this.option(\"value\"),\r\n            oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        if (isFunction(this.option(\"onApplyButtonClick\"))) {\r\n            this.option(\"onApplyButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        if (isFunction(this.option(\"onCancelButtonClick\"))) {\r\n            this.option(\"onCancelButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        if (this._colorView) {\r\n            this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\r\n            return\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$colorBoxInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\r\n        this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input(),\r\n            value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._updateColorViewValue(value)\r\n    },\r\n    _updateColorViewValue: function(value) {\r\n        if (this._colorView) {\r\n            this._colorView.option({\r\n                value: value,\r\n                matchValue: value\r\n            })\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._updateColorViewValue(value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value,\r\n            name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                this._updateColorViewValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"onCancelButtonClick\":\r\n            case \"onApplyButtonClick\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nmodule.exports = ColorBox;\r\n\n\n/***/ }),\n\n/***/ 1136:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/color_box/color_view.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    translator = __webpack_require__(21),\r\n    extend = __webpack_require__(3).extend,\r\n    Color = __webpack_require__(741),\r\n    messageLocalization = __webpack_require__(26),\r\n    devices = __webpack_require__(14),\r\n    registerComponent = __webpack_require__(17),\r\n    Editor = __webpack_require__(122),\r\n    NumberBox = __webpack_require__(645),\r\n    TextBox = __webpack_require__(301),\r\n    Draggable = __webpack_require__(1137),\r\n    clickEvent = __webpack_require__(28);\r\nvar COLOR_VIEW_CLASS = \"dx-colorview\",\r\n    COLOR_VIEW_CONTAINER_CLASS = \"dx-colorview-container\",\r\n    COLOR_VIEW_ROW_CLASS = \"dx-colorview-container-row\",\r\n    COLOR_VIEW_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_VIEW_PALETTE_CLASS = \"dx-colorview-palette\",\r\n    COLOR_VIEW_PALETTE_CELL_CLASS = \"dx-colorview-palette-cell\",\r\n    COLOR_VIEW_PALETTE_HANDLE_CLASS = \"dx-colorview-palette-handle\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_CLASS = \"dx-colorview-palette-gradient\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS = \"dx-colorview-palette-gradient-white\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS = \"dx-colorview-palette-gradient-black\",\r\n    COLOR_VIEW_HUE_SCALE_CLASS = \"dx-colorview-hue-scale\",\r\n    COLOR_VIEW_HUE_SCALE_CELL_CLASS = \"dx-colorview-hue-scale-cell\",\r\n    COLOR_VIEW_HUE_SCALE_HANDLE_CLASS = \"dx-colorview-hue-scale-handle\",\r\n    COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS = \"dx-colorview-hue-scale-wrapper\",\r\n    COLOR_VIEW_CONTROLS_CONTAINER_CLASS = \"dx-colorview-controls-container\",\r\n    COLOR_VIEW_RED_LABEL_CLASS = \"dx-colorview-label-red\",\r\n    COLOR_VIEW_GREEN_LABEL_CLASS = \"dx-colorview-label-green\",\r\n    COLOR_VIEW_BLUE_LABEL_CLASS = \"dx-colorview-label-blue\",\r\n    COLOR_VIEW_HEX_LABEL_CLASS = \"dx-colorview-label-hex\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS = \"dx-colorview-alpha-channel-scale\",\r\n    COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS = \"dx-colorview-alpha-channel-row\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS = \"dx-colorview-alpha-channel-wrapper\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS = \"dx-colorview-alpha-channel-label\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS = \"dx-colorview-alpha-channel-handle\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS = \"dx-colorview-alpha-channel-cell\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS = \"dx-colorview-alpha-channel-border\",\r\n    COLOR_VIEW_COLOR_PREVIEW = \"dx-colorview-color-preview\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS = \"dx-colorview-color-preview-container\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS = \"dx-colorview-color-preview-container-inner\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT = \"dx-colorview-color-preview-color-current\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW = \"dx-colorview-color-preview-color-new\";\r\nvar ColorView = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var that = this,\r\n            getHorizontalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateHorizontalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.s + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.s = value;\r\n                updatePaletteValue()\r\n            },\r\n            getVerticalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteHeight;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateVerticalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.v + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.v = value;\r\n                updatePaletteValue()\r\n            },\r\n            updatePaletteValue = function() {\r\n                that._placePaletteHandle();\r\n                that._updateColorFromHsv(that._currentColor.hsv.h, that._currentColor.hsv.s, that._currentColor.hsv.v)\r\n            },\r\n            getHueScaleStep = function(e) {\r\n                var step = 360 / (that._hueScaleWrapperHeight - that._hueScaleHandleHeight);\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return step\r\n            },\r\n            updateHueScaleValue = function(step) {\r\n                that._currentColor.hsv.h += step;\r\n                that._placeHueScaleHandle();\r\n                var handleLocation = translator.locate(that._$hueScaleHandle);\r\n                that._updateColorHue(handleLocation.top + that._hueScaleHandleHeight / 2)\r\n            },\r\n            getAlphaScaleStep = function(e) {\r\n                var step = 1 / that._alphaChannelScaleWorkWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > .01 ? step : .01;\r\n                step = isRTL ? -step : step;\r\n                return step\r\n            },\r\n            updateAlphaScaleValue = function(step) {\r\n                that._currentColor.a += step;\r\n                that._placeAlphaChannelHandle();\r\n                var handleLocation = translator.locate(that._$alphaChannelHandle);\r\n                that._calculateColorTransparencyByScaleWidth(handleLocation.left + that._alphaChannelHandleWidth / 2)\r\n            };\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h <= 360 && !this._isTopColorHue) {\r\n                        updateHueScaleValue(getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v < 100) {\r\n                        updateVerticalPaletteValue(getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h >= 0) {\r\n                        if (this._isTopColorHue) {\r\n                            this._currentColor.hsv.h = 360\r\n                        }\r\n                        updateHueScaleValue(-getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v > 0) {\r\n                        updateVerticalPaletteValue(-getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a < 1 : this._currentColor.a > 0 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(-getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s < 100) {\r\n                        updateHorizontalPaletteValue(getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a > 0 : this._currentColor.a < 1 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s > 0) {\r\n                        updateHorizontalPaletteValue(-getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                this._fireEnterKeyPressed(e)\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            matchValue: null,\r\n            onEnterKeyPressed: void 0,\r\n            editAlphaChannel: false,\r\n            keyStep: 1,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initColorAndOpacity();\r\n        this._initEnterKeyPressedAction()\r\n    },\r\n    _initEnterKeyPressedAction: function() {\r\n        this._onEnterKeyPressedAction = this._createActionByOption(\"onEnterKeyPressed\")\r\n    },\r\n    _fireEnterKeyPressed: function(e) {\r\n        if (!this._onEnterKeyPressedAction) {\r\n            return\r\n        }\r\n        this._onEnterKeyPressedAction({\r\n            event: e\r\n        })\r\n    },\r\n    _initColorAndOpacity: function() {\r\n        this._setCurrentColor(this.option(\"value\"))\r\n    },\r\n    _setCurrentColor: function(value) {\r\n        value = value || \"#000000\";\r\n        var newColor = new Color(value);\r\n        if (!newColor.colorIsInvalid) {\r\n            if (!this._currentColor || this._makeRgba(this._currentColor) !== this._makeRgba(newColor)) {\r\n                this._currentColor = newColor;\r\n                if (this._$currentColor) {\r\n                    this._makeTransparentBackground(this._$currentColor, newColor)\r\n                }\r\n            }\r\n        } else {\r\n            this.option(\"value\", this._currentColor.baseColor)\r\n        }\r\n    },\r\n    _setBaseColor: function(value) {\r\n        var color = value || \"#000000\";\r\n        var newColor = new Color(color);\r\n        if (!newColor.colorIsInvalid) {\r\n            var isBaseColorChanged = this._makeRgba(this.option(\"matchValue\") !== this._makeRgba(newColor));\r\n            if (isBaseColorChanged) {\r\n                if (this._$baseColor) {\r\n                    this._makeTransparentBackground(this._$baseColor, newColor)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(COLOR_VIEW_CLASS);\r\n        this._renderColorPickerContainer()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderPalette();\r\n        this._renderHueScale();\r\n        this._renderControlsContainer();\r\n        this._renderControls();\r\n        this._renderAlphaChannelElements()\r\n    },\r\n    _makeTransparentBackground: function($el, color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        $el.css(\"backgroundColor\", this._makeRgba(color))\r\n    },\r\n    _makeRgba: function(color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        return \"rgba(\" + [color.r, color.g, color.b, color.a].join(\", \") + \")\"\r\n    },\r\n    _renderValue: function() {\r\n        this.callBase(this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this.option(\"value\"))\r\n    },\r\n    _renderColorPickerContainer: function() {\r\n        var $parent = this.$element();\r\n        this._$colorPickerContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTAINER_CLASS).appendTo($parent);\r\n        this._renderHtmlRows()\r\n    },\r\n    _renderHtmlRows: function(updatedOption) {\r\n        var $renderedRows = this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS),\r\n            renderedRowsCount = $renderedRows.length,\r\n            rowCount = this.option(\"editAlphaChannel\") ? 2 : 1,\r\n            delta = renderedRowsCount - rowCount;\r\n        if (delta > 0) {\r\n            $renderedRows.eq(-1).remove()\r\n        }\r\n        if (delta < 0) {\r\n            delta = Math.abs(delta);\r\n            var i, rows = [];\r\n            for (i = 0; i < delta; i++) {\r\n                rows.push($(\"<div>\").addClass(COLOR_VIEW_ROW_CLASS))\r\n            }\r\n            if (renderedRowsCount) {\r\n                for (i = 0; i < rows.length; i++) {\r\n                    $renderedRows.eq(0).after(rows[i])\r\n                }\r\n            } else {\r\n                this._$colorPickerContainer.append(rows)\r\n            }\r\n        }\r\n    },\r\n    _renderHtmlCellInsideRow: function(index, $rowParent, additionalClass) {\r\n        return $(\"<div>\").addClass(COLOR_VIEW_CELL_CLASS).addClass(additionalClass).appendTo($rowParent.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(index))\r\n    },\r\n    _renderPalette: function() {\r\n        var $paletteCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_PALETTE_CELL_CLASS),\r\n            $paletteGradientWhite = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS].join(\" \")),\r\n            $paletteGradientBlack = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS].join(\" \"));\r\n        this._$palette = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_CLASS).css(\"backgroundColor\", this._currentColor.getPureColor().toHex()).appendTo($paletteCell);\r\n        this._paletteHeight = this._$palette.height();\r\n        this._paletteWidth = this._$palette.width();\r\n        this._renderPaletteHandle();\r\n        this._$palette.append([$paletteGradientWhite, $paletteGradientBlack])\r\n    },\r\n    _renderPaletteHandle: function() {\r\n        this._$paletteHandle = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_HANDLE_CLASS).appendTo(this._$palette);\r\n        this._createComponent(this._$paletteHandle, Draggable, {\r\n            area: this._$palette,\r\n            allowMoveByClick: true,\r\n            boundOffset: function() {\r\n                return -this._paletteHandleHeight / 2\r\n            }.bind(this),\r\n            onDrag: function() {\r\n                var paletteHandlePosition = translator.locate(this._$paletteHandle);\r\n                this._updateByDrag = true;\r\n                this._updateColorFromHsv(this._currentColor.hsv.h, this._calculateColorSaturation(paletteHandlePosition), this._calculateColorValue(paletteHandlePosition))\r\n            }.bind(this)\r\n        });\r\n        this._paletteHandleWidth = this._$paletteHandle.width();\r\n        this._paletteHandleHeight = this._$paletteHandle.height();\r\n        this._placePaletteHandle()\r\n    },\r\n    _placePaletteHandle: function() {\r\n        translator.move(this._$paletteHandle, {\r\n            left: Math.round(this._paletteWidth * this._currentColor.hsv.s / 100 - this._paletteHandleWidth / 2),\r\n            top: Math.round(this._paletteHeight - this._paletteHeight * this._currentColor.hsv.v / 100 - this._paletteHandleHeight / 2)\r\n        })\r\n    },\r\n    _calculateColorValue: function(paletteHandlePosition) {\r\n        var value = Math.floor(paletteHandlePosition.top + this._paletteHandleHeight / 2);\r\n        return 100 - Math.round(100 * value / this._paletteHeight)\r\n    },\r\n    _calculateColorSaturation: function(paletteHandlePosition) {\r\n        var saturation = Math.floor(paletteHandlePosition.left + this._paletteHandleWidth / 2);\r\n        return Math.round(100 * saturation / this._paletteWidth)\r\n    },\r\n    _updateColorFromHsv: function(hue, saturation, value) {\r\n        var a = this._currentColor.a;\r\n        this._currentColor = new Color(\"hsv(\" + [hue, saturation, value].join(\",\") + \")\");\r\n        this._currentColor.a = a;\r\n        this._updateColorParamsAndColorPreview();\r\n        this.applyColor()\r\n    },\r\n    _renderHueScale: function() {\r\n        var $hueScaleCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_HUE_SCALE_CELL_CLASS);\r\n        this._$hueScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS).appendTo($hueScaleCell);\r\n        this._$hueScale = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._hueScaleHeight = this._$hueScale.height();\r\n        this._hueScaleWrapperHeight = this._$hueScaleWrapper.outerHeight();\r\n        this._renderHueScaleHandle()\r\n    },\r\n    _renderHueScaleHandle: function() {\r\n        this._$hueScaleHandle = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_HANDLE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._createComponent(this._$hueScaleHandle, Draggable, {\r\n            area: this._$hueScaleWrapper,\r\n            allowMoveByClick: true,\r\n            direction: \"vertical\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                this._updateColorHue(translator.locate(this._$hueScaleHandle).top + this._hueScaleHandleHeight / 2)\r\n            }.bind(this)\r\n        });\r\n        this._hueScaleHandleHeight = this._$hueScaleHandle.height();\r\n        this._placeHueScaleHandle()\r\n    },\r\n    _placeHueScaleHandle: function() {\r\n        var hueScaleHeight = this._hueScaleWrapperHeight,\r\n            handleHeight = this._hueScaleHandleHeight,\r\n            top = (hueScaleHeight - handleHeight) * (360 - this._currentColor.hsv.h) / 360;\r\n        if (hueScaleHeight < top + handleHeight) {\r\n            top = hueScaleHeight - handleHeight\r\n        }\r\n        if (top < 0) {\r\n            top = 0\r\n        }\r\n        translator.move(this._$hueScaleHandle, {\r\n            top: Math.round(top)\r\n        })\r\n    },\r\n    _updateColorHue: function(handlePosition) {\r\n        var hue = 360 - Math.round(360 * (handlePosition - this._hueScaleHandleHeight / 2) / (this._hueScaleWrapperHeight - this._hueScaleHandleHeight)),\r\n            saturation = this._currentColor.hsv.s,\r\n            value = this._currentColor.hsv.v;\r\n        this._isTopColorHue = false;\r\n        hue = hue < 0 ? 0 : hue;\r\n        if (hue >= 360) {\r\n            this._isTopColorHue = true;\r\n            hue = 0\r\n        }\r\n        this._updateColorFromHsv(hue, saturation, value);\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex())\r\n    },\r\n    _renderControlsContainer: function() {\r\n        var $controlsContainerCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer);\r\n        this._$controlsContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTROLS_CONTAINER_CLASS).appendTo($controlsContainerCell)\r\n    },\r\n    _renderControls: function() {\r\n        this._renderColorsPreview();\r\n        this._renderRgbInputs();\r\n        this._renderHexInput()\r\n    },\r\n    _renderColorsPreview: function() {\r\n        var $colorsPreviewContainer = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS).appendTo(this._$controlsContainer);\r\n        var $colorsPreviewContainerInner = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS).appendTo($colorsPreviewContainer);\r\n        this._$currentColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW].join(\" \"));\r\n        this._$baseColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT].join(\" \"));\r\n        this._makeTransparentBackground(this._$baseColor, this.option(\"matchValue\"));\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        $colorsPreviewContainerInner.append([this._$baseColor, this._$currentColor])\r\n    },\r\n    _renderAlphaChannelElements: function() {\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(1).addClass(COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS);\r\n            this._renderAlphaChannelScale();\r\n            this._renderAlphaChannelInput()\r\n        }\r\n    },\r\n    _renderRgbInputs: function() {\r\n        this._rgbInputsWithLabels = [this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.r,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"R\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaRed\"),\r\n            labelClass: COLOR_VIEW_RED_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.g,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"G\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaGreen\"),\r\n            labelClass: COLOR_VIEW_GREEN_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.b,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"B\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaBlue\"),\r\n            labelClass: COLOR_VIEW_BLUE_LABEL_CLASS\r\n        })];\r\n        this._$controlsContainer.append(this._rgbInputsWithLabels);\r\n        this._rgbInputs = [this._rgbInputsWithLabels[0].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[1].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[2].find(\".dx-numberbox\").dxNumberBox(\"instance\")]\r\n    },\r\n    _renderEditorWithLabel: function(options) {\r\n        var $editor = $(\"<div>\");\r\n        var $label = $(\"<label>\").addClass(options.labelClass).text(options.labelText + \":\").append($editor);\r\n        eventsEngine.off($label, clickEvent.name);\r\n        eventsEngine.on($label, clickEvent.name, function(e) {\r\n            e.preventDefault()\r\n        });\r\n        var editorType = options.editorType;\r\n        var editorOptions = extend({\r\n            value: options.value,\r\n            onValueChanged: options.onValueChanged\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        if (editorType === NumberBox) {\r\n            editorOptions.min = options.min || 0;\r\n            editorOptions.max = options.max || 255;\r\n            editorOptions.step = options.step || 1\r\n        }\r\n        var editor = new editorType($editor, editorOptions);\r\n        editor.registerKeyHandler(\"enter\", function(e) {\r\n            this._fireEnterKeyPressed(e)\r\n        }.bind(this));\r\n        this.setAria(\"label\", options.labelAriaText, $editor);\r\n        return $label\r\n    },\r\n    hexInputOptions: function() {\r\n        return {\r\n            editorType: TextBox,\r\n            value: this._currentColor.toHex().replace(\"#\", \"\"),\r\n            onValueChanged: this._updateColor.bind(this, true),\r\n            labelClass: COLOR_VIEW_HEX_LABEL_CLASS,\r\n            labelText: \"#\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaHex\")\r\n        }\r\n    },\r\n    _renderHexInput: function() {\r\n        this._hexInput = TextBox.getInstance(this._renderEditorWithLabel(this.hexInputOptions()).appendTo(this._$controlsContainer).find(\".dx-textbox\"))\r\n    },\r\n    _renderAlphaChannelScale: function() {\r\n        var $alphaChannelScaleCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer, COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS),\r\n            $alphaChannelBorder = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS).appendTo($alphaChannelScaleCell),\r\n            $alphaChannelScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS).appendTo($alphaChannelBorder);\r\n        this._$alphaChannelScale = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS).appendTo($alphaChannelScaleWrapper);\r\n        this._makeCSSLinearGradient(this._$alphaChannelScale);\r\n        this._renderAlphaChannelHandle($alphaChannelScaleCell)\r\n    },\r\n    _makeCSSLinearGradient: function($el) {\r\n        var color = this._currentColor,\r\n            colorAsRgb = [color.r, color.g, color.b].join(\",\"),\r\n            colorAsHex = color.toHex().replace(\"#\", \"\");\r\n        var combineGradientString = function(colorAsRgb, colorAsHex) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\"),\r\n                startColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"1\" : \"0\") + \")\",\r\n                finishColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"0\" : \"1\") + \")\",\r\n                startColorIE = \"'#\" + (rtlEnabled ? \"00\" : \"\") + colorAsHex + \"'\",\r\n                finishColorIE = \"'#\" + (rtlEnabled ? \"\" : \"00\") + colorAsHex + \"'\";\r\n            return [\"background-image: -webkit-linear-gradient(180deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -moz-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -o-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=\" + startColorIE + \", endColorstr=\" + finishColorIE + \")\"].join(\";\")\r\n        };\r\n        $el.attr(\"style\", combineGradientString.call(this, colorAsRgb, colorAsHex))\r\n    },\r\n    _renderAlphaChannelInput: function() {\r\n        var that = this,\r\n            $alphaChannelInputCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer);\r\n        that._alphaChannelInput = this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.a,\r\n            max: 1,\r\n            step: .1,\r\n            onValueChanged: function(e) {\r\n                var value = e.value;\r\n                value = that._currentColor.isValidAlpha(value) ? value : that._currentColor.a;\r\n                that._updateColorTransparency(value);\r\n                that._placeAlphaChannelHandle()\r\n            },\r\n            labelClass: COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS,\r\n            labelText: \"Alpha\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaAlpha\")\r\n        }).appendTo($alphaChannelInputCell).find(\".dx-numberbox\").dxNumberBox(\"instance\")\r\n    },\r\n    _updateColorTransparency: function(transparency) {\r\n        this._currentColor.a = transparency;\r\n        this.applyColor()\r\n    },\r\n    _renderAlphaChannelHandle: function($parent) {\r\n        this._$alphaChannelHandle = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS).appendTo($parent);\r\n        this._createComponent(this._$alphaChannelHandle, Draggable, {\r\n            area: $parent,\r\n            allowMoveByClick: true,\r\n            direction: \"horizontal\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                var $alphaChannelHandle = this._$alphaChannelHandle,\r\n                    alphaChannelHandlePosition = translator.locate($alphaChannelHandle).left + this._alphaChannelHandleWidth / 2;\r\n                this._calculateColorTransparencyByScaleWidth(alphaChannelHandlePosition)\r\n            }.bind(this)\r\n        });\r\n        this._alphaChannelHandleWidth = this._$alphaChannelHandle.width();\r\n        this._alphaChannelScaleWorkWidth = $parent.width() - this._alphaChannelHandleWidth;\r\n        this._placeAlphaChannelHandle()\r\n    },\r\n    _calculateColorTransparencyByScaleWidth: function(handlePosition) {\r\n        var transparency = (handlePosition - this._alphaChannelHandleWidth / 2) / this._alphaChannelScaleWorkWidth,\r\n            rtlEnabled = this.option(\"rtlEnabled\");\r\n        transparency = rtlEnabled ? transparency : 1 - transparency;\r\n        if (handlePosition >= this._alphaChannelScaleWorkWidth + this._alphaChannelHandleWidth / 2) {\r\n            transparency = rtlEnabled ? 1 : 0\r\n        } else {\r\n            if (transparency < 1) {\r\n                transparency = transparency.toFixed(2)\r\n            }\r\n        }\r\n        transparency = Math.max(transparency, 0);\r\n        transparency = Math.min(transparency, 1);\r\n        this._alphaChannelInput.option(\"value\", transparency)\r\n    },\r\n    _placeAlphaChannelHandle: function() {\r\n        var left = this._alphaChannelScaleWorkWidth * (1 - this._currentColor.a);\r\n        if (left < 0) {\r\n            left = 0\r\n        }\r\n        if (this._alphaChannelScaleWorkWidth < left) {\r\n            left = this._alphaChannelScaleWorkWidth\r\n        }\r\n        translator.move(this._$alphaChannelHandle, {\r\n            left: this.option(\"rtlEnabled\") ? this._alphaChannelScaleWorkWidth - left : left\r\n        })\r\n    },\r\n    applyColor: function() {\r\n        var colorValue = this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this._currentColor.toHex();\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this.option(\"value\", colorValue)\r\n    },\r\n    cancelColor: function() {\r\n        this._initColorAndOpacity();\r\n        this._refreshMarkup()\r\n    },\r\n    _updateColor: function(isHex, e) {\r\n        var rgba, newColor;\r\n        if (isHex) {\r\n            newColor = this._validateHex(\"#\" + this._hexInput.option(\"value\"))\r\n        } else {\r\n            rgba = this._validateRgb();\r\n            if (this._alphaChannelInput) {\r\n                rgba.push(this._alphaChannelInput.option(\"value\"));\r\n                newColor = \"rgba(\" + rgba.join(\", \") + \")\"\r\n            } else {\r\n                newColor = \"rgb(\" + rgba.join(\", \") + \")\"\r\n            }\r\n        }\r\n        if (!this._suppressEditorsValueUpdating) {\r\n            this._currentColor = new Color(newColor);\r\n            this.applyColor();\r\n            this._refreshMarkup()\r\n        }\r\n    },\r\n    _validateHex: function(hex) {\r\n        return this._currentColor.isValidHex(hex) ? hex : this._currentColor.toHex()\r\n    },\r\n    _validateRgb: function() {\r\n        var r = this._rgbInputs[0].option(\"value\"),\r\n            g = this._rgbInputs[1].option(\"value\"),\r\n            b = this._rgbInputs[2].option(\"value\");\r\n        if (!this._currentColor.isValidRGB(r, g, b)) {\r\n            r = this._currentColor.r;\r\n            g = this._currentColor.g;\r\n            b = this._currentColor.b\r\n        }\r\n        return [r, g, b]\r\n    },\r\n    _refreshMarkup: function() {\r\n        this._placeHueScaleHandle();\r\n        this._placePaletteHandle();\r\n        this._updateColorParamsAndColorPreview();\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex());\r\n        if (this._$alphaChannelHandle) {\r\n            this._updateColorTransparency(this._currentColor.a);\r\n            this._placeAlphaChannelHandle()\r\n        }\r\n    },\r\n    _updateColorParamsAndColorPreview: function() {\r\n        this._suppressEditorsValueUpdating = true;\r\n        this._hexInput.option(\"value\", this._currentColor.toHex().replace(\"#\", \"\"));\r\n        this._rgbInputs[0].option(\"value\", this._currentColor.r);\r\n        this._rgbInputs[1].option(\"value\", this._currentColor.g);\r\n        this._rgbInputs[2].option(\"value\", this._currentColor.b);\r\n        this._suppressEditorsValueUpdating = false;\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._makeCSSLinearGradient.call(this, this._$alphaChannelScale);\r\n            this._alphaChannelInput.option(\"value\", this._currentColor.a)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._setCurrentColor(value);\r\n                if (!this._updateByDrag) {\r\n                    this._refreshMarkup()\r\n                }\r\n                this._updateByDrag = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"matchValue\":\r\n                this._setBaseColor(value);\r\n                break;\r\n            case \"onEnterKeyPressed\":\r\n                this._initEnterKeyPressedAction();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n                if (this._$colorPickerContainer) {\r\n                    this._renderHtmlRows(\"editAlphaChannel\");\r\n                    this._renderAlphaChannelElements()\r\n                }\r\n                break;\r\n            case \"keyStep\":\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderControls();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorView\", ColorView);\r\nmodule.exports = ColorView;\r\n\n\n/***/ }),\n\n/***/ 1137:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    window = __webpack_require__(9).getWindow(),\r\n    eventsEngine = __webpack_require__(7),\r\n    stringUtils = __webpack_require__(90),\r\n    registerComponent = __webpack_require__(17),\r\n    translator = __webpack_require__(21),\r\n    dasherize = __webpack_require__(44).dasherize,\r\n    extend = __webpack_require__(3).extend,\r\n    DOMComponent = __webpack_require__(93),\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(32),\r\n    dragEvents = __webpack_require__(131),\r\n    positionUtils = __webpack_require__(120),\r\n    isFunction = __webpack_require__(4).isFunction,\r\n    noop = __webpack_require__(6).noop;\r\nvar DRAGGABLE = \"dxDraggable\",\r\n    DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE),\r\n    DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE),\r\n    DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE),\r\n    POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE),\r\n    DRAGGABLE_CLASS = dasherize(DRAGGABLE),\r\n    DRAGGABLE_DRAGGING_CLASS = DRAGGABLE_CLASS + \"-dragging\";\r\nvar Draggable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: noop,\r\n            onDrag: noop,\r\n            onDragEnd: noop,\r\n            immediate: true,\r\n            direction: \"both\",\r\n            area: window,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this.$element().css(\"position\", \"absolute\"),\r\n            eventHandlers = {},\r\n            allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        eventHandlers[DRAGSTART_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        eventHandlers[DRAG_EVENT_NAME] = this._dragHandler.bind(this);\r\n        eventHandlers[DRAGEND_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        if (allowMoveByClick) {\r\n            eventHandlers[POINTERDOWN_EVENT_NAME] = this._pointerDownHandler.bind(this);\r\n            $element = this._getArea()\r\n        }\r\n        eventsEngine.on($element, eventHandlers, {\r\n            direction: this.option(\"direction\"),\r\n            immediate: this.option(\"immediate\")\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this.$element(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position) {\r\n        translator.move(this.$element(), position)\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (eventUtils.needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var areaOffset = this._getAreaOffset($(e.currentTarget)),\r\n            direction = this.option(\"direction\"),\r\n            position = {};\r\n        if (\"horizontal\" === direction || \"both\" === direction) {\r\n            position.left = e.pageX - this.$element().width() / 2 - areaOffset.left\r\n        }\r\n        if (\"vertical\" === direction || \"both\" === direction) {\r\n            position.top = e.pageY - this.$element().height() / 2 - areaOffset.top\r\n        }\r\n        this._move(position);\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var $area = this._getArea(),\r\n            areaOffset = this._getAreaOffset($area),\r\n            boundOffset = this._getBoundOffset(),\r\n            areaWidth = $area.outerWidth(),\r\n            areaHeight = $area.outerHeight(),\r\n            elementWidth = $element.width(),\r\n            elementHeight = $element.height();\r\n        this._toggleDraggingClass(true);\r\n        var startOffset = {\r\n            left: $element.offset().left - areaOffset.left,\r\n            top: $element.offset().top - areaOffset.top\r\n        };\r\n        this._startPosition = translator.locate($element);\r\n        e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n        e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n        e.maxTopOffset = startOffset.top - boundOffset.top;\r\n        e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom;\r\n        this._getAction(\"onDragStart\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this.$element().toggleClass(DRAGGABLE_DRAGGING_CLASS, value)\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return stringUtils.quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = e.offset,\r\n            startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        this._toggleDraggingClass(false);\r\n        this._getAction(\"onDragEnd\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DRAGGABLE_CLASS)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDrag\":\r\n            case \"onDragEnd\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"direction\":\r\n            case \"disabled\":\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"boundOffset\":\r\n            case \"area\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers()\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nmodule.exports = Draggable;\r\n\n\n/***/ }),\n\n/***/ 623:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/color-box' file instead */\n__export(__webpack_require__(864));\nvar color_box_1 = __webpack_require__(864);\nexports.default = color_box_1.default;\n\n\n/***/ }),\n\n/***/ 642:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    AsyncTemplateMixin = __webpack_require__(650),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(71),\r\n    registerComponent = __webpack_require__(17),\r\n    commonUtils = __webpack_require__(6),\r\n    domUtils = __webpack_require__(13),\r\n    focused = __webpack_require__(52).focused,\r\n    each = __webpack_require__(5).each,\r\n    isDefined = __webpack_require__(4).isDefined,\r\n    extend = __webpack_require__(3).extend,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    errors = __webpack_require__(36),\r\n    positionUtils = __webpack_require__(120),\r\n    getDefaultAlignment = __webpack_require__(302).getDefaultAlignment,\r\n    messageLocalization = __webpack_require__(26),\r\n    Button = __webpack_require__(42),\r\n    eventUtils = __webpack_require__(8),\r\n    TextBox = __webpack_require__(301),\r\n    clickEvent = __webpack_require__(28),\r\n    FunctionTemplate = __webpack_require__(171),\r\n    Popup = __webpack_require__(121);\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        var $container = this._$container;\r\n        this._disposeKeyboardProcessor();\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), {\r\n                of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 645:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(655);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 650:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n/***/ }),\n\n/***/ 655:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar registerComponent = __webpack_require__(17),\r\n    NumberBoxMask = __webpack_require__(656);\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 656:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar eventsEngine = __webpack_require__(7),\r\n    extend = __webpack_require__(3).extend,\r\n    isNumeric = __webpack_require__(4).isNumeric,\r\n    browser = __webpack_require__(72),\r\n    devices = __webpack_require__(14),\r\n    fitIntoRange = __webpack_require__(56).fitIntoRange,\r\n    inRange = __webpack_require__(56).inRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(300),\r\n    maskCaret = __webpack_require__(657),\r\n    getLDMLFormat = __webpack_require__(308).getFormat,\r\n    NumberBoxBase = __webpack_require__(658),\r\n    eventUtils = __webpack_require__(8),\r\n    typeUtils = __webpack_require__(4);\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _hasValueBeenChanged: function(inputValue) {\r\n        var format = this._getFormatPattern(),\r\n            value = this.option(\"value\"),\r\n            formatted = this._format(value, format) || \"\";\r\n        return formatted !== inputValue\r\n    },\r\n    _updateFormattedValue: function() {\r\n        var inputValue = this._getInputVal();\r\n        if (this._hasValueBeenChanged(inputValue)) {\r\n            this._parsedValue = this._tryParse(inputValue, this._caret());\r\n            this._adjustParsedValue();\r\n            this._setTextByParsedValue();\r\n            if (this._parsedValue !== this.option(\"value\")) {\r\n                eventsEngine.trigger(this._input(), \"change\")\r\n            }\r\n        }\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex >= 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\"),\r\n            isMobileDevice = \"desktop\" !== devices.real().deviceType;\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(isMobileDevice ? \"tel\" : \"text\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n/***/ }),\n\n/***/ 657:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar fitIntoRange = __webpack_require__(56).fitIntoRange,\r\n    escapeRegExp = __webpack_require__(6).escapeRegExp,\r\n    number = __webpack_require__(300);\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\");\r\n    var sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = signParts[sign < 0 ? 1 : 0];\r\n    var mockEscapedStubs = function(str) {\r\n        return str.replace(/'([^']*)'/g, function(str) {\r\n            return str.split(\"\").map(function() {\r\n                return \" \"\r\n            }).join(\"\").substr(2)\r\n        })\r\n    };\r\n    format = mockEscapedStubs(format);\r\n    var prefixStubLength = /^[^#0\\.,]*/.exec(format)[0].length;\r\n    var postfixStubLength = /[^#0\\.,]*$/.exec(format)[0].length;\r\n    return {\r\n        start: prefixStubLength,\r\n        end: text.length - postfixStubLength\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n/***/ }),\n\n/***/ 658:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    commonUtils = __webpack_require__(6),\r\n    mathUtils = __webpack_require__(56),\r\n    extend = __webpack_require__(3).extend,\r\n    inArray = __webpack_require__(16).inArray,\r\n    devices = __webpack_require__(14),\r\n    TextEditor = __webpack_require__(309),\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(32),\r\n    SpinButton = __webpack_require__(659),\r\n    messageLocalization = __webpack_require__(26);\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\")\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _onMouseWheel: function(dxEvent) {\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent)\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n/***/ }),\n\n/***/ 659:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Widget = __webpack_require__(43),\r\n    extend = __webpack_require__(3).extend,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(32),\r\n    feedbackEvents = __webpack_require__(126),\r\n    holdEvent = __webpack_require__(173),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n/***/ }),\n\n/***/ 741:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (color.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar standardColorNames = {\r\n    aliceblue: \"f0f8ff\",\r\n    antiquewhite: \"faebd7\",\r\n    aqua: \"00ffff\",\r\n    aquamarine: \"7fffd4\",\r\n    azure: \"f0ffff\",\r\n    beige: \"f5f5dc\",\r\n    bisque: \"ffe4c4\",\r\n    black: \"000000\",\r\n    blanchedalmond: \"ffebcd\",\r\n    blue: \"0000ff\",\r\n    blueviolet: \"8a2be2\",\r\n    brown: \"a52a2a\",\r\n    burlywood: \"deb887\",\r\n    cadetblue: \"5f9ea0\",\r\n    chartreuse: \"7fff00\",\r\n    chocolate: \"d2691e\",\r\n    coral: \"ff7f50\",\r\n    cornflowerblue: \"6495ed\",\r\n    cornsilk: \"fff8dc\",\r\n    crimson: \"dc143c\",\r\n    cyan: \"00ffff\",\r\n    darkblue: \"00008b\",\r\n    darkcyan: \"008b8b\",\r\n    darkgoldenrod: \"b8860b\",\r\n    darkgray: \"a9a9a9\",\r\n    darkgreen: \"006400\",\r\n    darkkhaki: \"bdb76b\",\r\n    darkmagenta: \"8b008b\",\r\n    darkolivegreen: \"556b2f\",\r\n    darkorange: \"ff8c00\",\r\n    darkorchid: \"9932cc\",\r\n    darkred: \"8b0000\",\r\n    darksalmon: \"e9967a\",\r\n    darkseagreen: \"8fbc8f\",\r\n    darkslateblue: \"483d8b\",\r\n    darkslategray: \"2f4f4f\",\r\n    darkturquoise: \"00ced1\",\r\n    darkviolet: \"9400d3\",\r\n    deeppink: \"ff1493\",\r\n    deepskyblue: \"00bfff\",\r\n    dimgray: \"696969\",\r\n    dodgerblue: \"1e90ff\",\r\n    feldspar: \"d19275\",\r\n    firebrick: \"b22222\",\r\n    floralwhite: \"fffaf0\",\r\n    forestgreen: \"228b22\",\r\n    fuchsia: \"ff00ff\",\r\n    gainsboro: \"dcdcdc\",\r\n    ghostwhite: \"f8f8ff\",\r\n    gold: \"ffd700\",\r\n    goldenrod: \"daa520\",\r\n    gray: \"808080\",\r\n    green: \"008000\",\r\n    greenyellow: \"adff2f\",\r\n    honeydew: \"f0fff0\",\r\n    hotpink: \"ff69b4\",\r\n    indianred: \"cd5c5c\",\r\n    indigo: \"4b0082\",\r\n    ivory: \"fffff0\",\r\n    khaki: \"f0e68c\",\r\n    lavender: \"e6e6fa\",\r\n    lavenderblush: \"fff0f5\",\r\n    lawngreen: \"7cfc00\",\r\n    lemonchiffon: \"fffacd\",\r\n    lightblue: \"add8e6\",\r\n    lightcoral: \"f08080\",\r\n    lightcyan: \"e0ffff\",\r\n    lightgoldenrodyellow: \"fafad2\",\r\n    lightgrey: \"d3d3d3\",\r\n    lightgreen: \"90ee90\",\r\n    lightpink: \"ffb6c1\",\r\n    lightsalmon: \"ffa07a\",\r\n    lightseagreen: \"20b2aa\",\r\n    lightskyblue: \"87cefa\",\r\n    lightslateblue: \"8470ff\",\r\n    lightslategray: \"778899\",\r\n    lightsteelblue: \"b0c4de\",\r\n    lightyellow: \"ffffe0\",\r\n    lime: \"00ff00\",\r\n    limegreen: \"32cd32\",\r\n    linen: \"faf0e6\",\r\n    magenta: \"ff00ff\",\r\n    maroon: \"800000\",\r\n    mediumaquamarine: \"66cdaa\",\r\n    mediumblue: \"0000cd\",\r\n    mediumorchid: \"ba55d3\",\r\n    mediumpurple: \"9370d8\",\r\n    mediumseagreen: \"3cb371\",\r\n    mediumslateblue: \"7b68ee\",\r\n    mediumspringgreen: \"00fa9a\",\r\n    mediumturquoise: \"48d1cc\",\r\n    mediumvioletred: \"c71585\",\r\n    midnightblue: \"191970\",\r\n    mintcream: \"f5fffa\",\r\n    mistyrose: \"ffe4e1\",\r\n    moccasin: \"ffe4b5\",\r\n    navajowhite: \"ffdead\",\r\n    navy: \"000080\",\r\n    oldlace: \"fdf5e6\",\r\n    olive: \"808000\",\r\n    olivedrab: \"6b8e23\",\r\n    orange: \"ffa500\",\r\n    orangered: \"ff4500\",\r\n    orchid: \"da70d6\",\r\n    palegoldenrod: \"eee8aa\",\r\n    palegreen: \"98fb98\",\r\n    paleturquoise: \"afeeee\",\r\n    palevioletred: \"d87093\",\r\n    papayawhip: \"ffefd5\",\r\n    peachpuff: \"ffdab9\",\r\n    peru: \"cd853f\",\r\n    pink: \"ffc0cb\",\r\n    plum: \"dda0dd\",\r\n    powderblue: \"b0e0e6\",\r\n    purple: \"800080\",\r\n    rebeccapurple: \"663399\",\r\n    red: \"ff0000\",\r\n    rosybrown: \"bc8f8f\",\r\n    royalblue: \"4169e1\",\r\n    saddlebrown: \"8b4513\",\r\n    salmon: \"fa8072\",\r\n    sandybrown: \"f4a460\",\r\n    seagreen: \"2e8b57\",\r\n    seashell: \"fff5ee\",\r\n    sienna: \"a0522d\",\r\n    silver: \"c0c0c0\",\r\n    skyblue: \"87ceeb\",\r\n    slateblue: \"6a5acd\",\r\n    slategray: \"708090\",\r\n    snow: \"fffafa\",\r\n    springgreen: \"00ff7f\",\r\n    steelblue: \"4682b4\",\r\n    tan: \"d2b48c\",\r\n    teal: \"008080\",\r\n    thistle: \"d8bfd8\",\r\n    tomato: \"ff6347\",\r\n    turquoise: \"40e0d0\",\r\n    violet: \"ee82ee\",\r\n    violetred: \"d02090\",\r\n    wheat: \"f5deb3\",\r\n    white: \"ffffff\",\r\n    whitesmoke: \"f5f5f5\",\r\n    yellow: \"ffff00\",\r\n    yellowgreen: \"9acd32\"\r\n};\r\nvar standardColorTypes = [{\r\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10)]\r\n    }\r\n}, {\r\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.*\\d+)\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10), parseFloat(colorString[4])]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 16), parseInt(colorString[2], 16), parseInt(colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{1})([a-f0-9]{1})([a-f0-9]{1})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1] + colorString[1], 16), parseInt(colorString[2] + colorString[2], 16), parseInt(colorString[3] + colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            v = parseInt(colorString[3], 10),\r\n            rgb = hsvToRgb(h, s, v);\r\n        return [rgb[0], rgb[1], rgb[2], 1, [h, s, v]]\r\n    }\r\n}, {\r\n    re: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            l = parseInt(colorString[3], 10),\r\n            rgb = hslToRgb(h, s, l);\r\n        return [rgb[0], rgb[1], rgb[2], 1, null, [h, s, l]]\r\n    }\r\n}];\r\n\r\nfunction Color(value) {\r\n    this.baseColor = value;\r\n    var color;\r\n    if (value) {\r\n        color = String(value).toLowerCase().replace(/ /g, \"\");\r\n        color = standardColorNames[color] ? \"#\" + standardColorNames[color] : color;\r\n        color = parseColor(color)\r\n    }\r\n    if (!color) {\r\n        this.colorIsInvalid = true\r\n    }\r\n    color = color || {};\r\n    this.r = normalize(color[0]);\r\n    this.g = normalize(color[1]);\r\n    this.b = normalize(color[2]);\r\n    this.a = normalize(color[3], 1, 1);\r\n    if (color[4]) {\r\n        this.hsv = {\r\n            h: color[4][0],\r\n            s: color[4][1],\r\n            v: color[4][2]\r\n        }\r\n    } else {\r\n        this.hsv = toHsvFromRgb(this.r, this.g, this.b)\r\n    }\r\n    if (color[5]) {\r\n        this.hsl = {\r\n            h: color[5][0],\r\n            s: color[5][1],\r\n            l: color[5][2]\r\n        }\r\n    } else {\r\n        this.hsl = toHslFromRgb(this.r, this.g, this.b)\r\n    }\r\n}\r\n\r\nfunction parseColor(color) {\r\n    if (\"transparent\" === color) {\r\n        return [0, 0, 0, 0]\r\n    }\r\n    var str, i = 0,\r\n        ii = standardColorTypes.length;\r\n    for (; i < ii; ++i) {\r\n        str = standardColorTypes[i].re.exec(color);\r\n        if (str) {\r\n            return standardColorTypes[i].process(str)\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nfunction normalize(colorComponent, def, max) {\r\n    def = def || 0;\r\n    max = max || 255;\r\n    return colorComponent < 0 || isNaN(colorComponent) ? def : colorComponent > max ? max : colorComponent\r\n}\r\n\r\nfunction toHexFromRgb(r, g, b) {\r\n    return \"#\" + (16777216 | r << 16 | g << 8 | b).toString(16).slice(1)\r\n}\r\n\r\nfunction toHsvFromRgb(r, g, b) {\r\n    var H, S, V, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        delta = max - min;\r\n    V = max;\r\n    S = 0 === max ? 0 : 1 - min / max;\r\n    if (max === min) {\r\n        H = 0\r\n    } else {\r\n        switch (max) {\r\n            case r:\r\n                H = 60 * ((g - b) / delta);\r\n                if (g < b) {\r\n                    H += 360\r\n                }\r\n                break;\r\n            case g:\r\n                H = 60 * ((b - r) / delta) + 120;\r\n                break;\r\n            case b:\r\n                H = 60 * ((r - g) / delta) + 240\r\n        }\r\n    }\r\n    S *= 100;\r\n    V *= 100 / 255;\r\n    return {\r\n        h: Math.round(H),\r\n        s: Math.round(S),\r\n        v: Math.round(V)\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    var vDec, vInc, vMin, index, a, r, g, b;\r\n    index = Math.floor(h % 360 / 60);\r\n    vMin = (100 - s) * v / 100;\r\n    a = (v - vMin) * (h % 60 / 60);\r\n    vInc = vMin + a;\r\n    vDec = v - a;\r\n    switch (index) {\r\n        case 0:\r\n            r = v;\r\n            g = vInc;\r\n            b = vMin;\r\n            break;\r\n        case 1:\r\n            r = vDec;\r\n            g = v;\r\n            b = vMin;\r\n            break;\r\n        case 2:\r\n            r = vMin;\r\n            g = v;\r\n            b = vInc;\r\n            break;\r\n        case 3:\r\n            r = vMin;\r\n            g = vDec;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = vInc;\r\n            g = vMin;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = vMin;\r\n            b = vDec\r\n    }\r\n    return [Math.round(2.55 * r), Math.round(2.55 * g), Math.round(2.55 * b)]\r\n}\r\n\r\nfunction calculateHue(r, g, b, delta) {\r\n    var max = Math.max(r, g, b);\r\n    switch (max) {\r\n        case r:\r\n            return (g - b) / delta + (g < b ? 6 : 0);\r\n        case g:\r\n            return (b - r) / delta + 2;\r\n        case b:\r\n            return (r - g) / delta + 4\r\n    }\r\n}\r\n\r\nfunction toHslFromRgb(r, g, b) {\r\n    r = convertTo01Bounds(r, 255);\r\n    g = convertTo01Bounds(g, 255);\r\n    b = convertTo01Bounds(b, 255);\r\n    var h, s, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        maxMinSum = max + min,\r\n        l = maxMinSum / 2;\r\n    if (max === min) {\r\n        h = s = 0\r\n    } else {\r\n        var delta = max - min;\r\n        if (l > .5) {\r\n            s = delta / (2 - maxMinSum)\r\n        } else {\r\n            s = delta / maxMinSum\r\n        }\r\n        h = calculateHue(r, g, b, delta);\r\n        h /= 6\r\n    }\r\n    return {\r\n        h: _round(360 * h),\r\n        s: _round(100 * s),\r\n        l: _round(100 * l)\r\n    }\r\n}\r\n\r\nfunction makeColorTint(colorPart, h) {\r\n    var colorTint = h;\r\n    if (\"r\" === colorPart) {\r\n        colorTint = h + 1 / 3\r\n    }\r\n    if (\"b\" === colorPart) {\r\n        colorTint = h - 1 / 3\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction modifyColorTint(colorTint) {\r\n    if (colorTint < 0) {\r\n        colorTint += 1\r\n    }\r\n    if (colorTint > 1) {\r\n        colorTint -= 1\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction hueToRgb(p, q, colorTint) {\r\n    colorTint = modifyColorTint(colorTint);\r\n    if (colorTint < 1 / 6) {\r\n        return p + 6 * (q - p) * colorTint\r\n    }\r\n    if (colorTint < .5) {\r\n        return q\r\n    }\r\n    if (colorTint < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - colorTint) * 6\r\n    }\r\n    return p\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n    var r, g, b;\r\n    h = convertTo01Bounds(h, 360);\r\n    s = convertTo01Bounds(s, 100);\r\n    l = convertTo01Bounds(l, 100);\r\n    if (0 === s) {\r\n        r = g = b = l\r\n    } else {\r\n        var q = l < .5 ? l * (1 + s) : l + s - l * s,\r\n            p = 2 * l - q;\r\n        r = hueToRgb(p, q, makeColorTint(\"r\", h));\r\n        g = hueToRgb(p, q, makeColorTint(\"g\", h));\r\n        b = hueToRgb(p, q, makeColorTint(\"b\", h))\r\n    }\r\n    return [_round(255 * r), _round(255 * g), _round(255 * b)]\r\n}\r\n\r\nfunction convertTo01Bounds(n, max) {\r\n    n = Math.min(max, Math.max(0, parseFloat(n)));\r\n    if (Math.abs(n - max) < 1e-6) {\r\n        return 1\r\n    }\r\n    return n % max / parseFloat(max)\r\n}\r\n\r\nfunction isIntegerBetweenMinAndMax(number, min, max) {\r\n    min = min || 0;\r\n    max = max || 255;\r\n    if (number % 1 !== 0 || number < min || number > max || \"number\" !== typeof number || isNaN(number)) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\nvar _round = Math.round;\r\nColor.prototype = {\r\n    constructor: Color,\r\n    highlight: function(step) {\r\n        step = step || 10;\r\n        return this.alter(step).toHex()\r\n    },\r\n    darken: function(step) {\r\n        step = step || 10;\r\n        return this.alter(-step).toHex()\r\n    },\r\n    alter: function(step) {\r\n        var result = new Color;\r\n        result.r = normalize(this.r + step);\r\n        result.g = normalize(this.g + step);\r\n        result.b = normalize(this.b + step);\r\n        return result\r\n    },\r\n    blend: function(blendColor, opacity) {\r\n        var other = blendColor instanceof Color ? blendColor : new Color(blendColor),\r\n            result = new Color;\r\n        result.r = normalize(_round(this.r * (1 - opacity) + other.r * opacity));\r\n        result.g = normalize(_round(this.g * (1 - opacity) + other.g * opacity));\r\n        result.b = normalize(_round(this.b * (1 - opacity) + other.b * opacity));\r\n        return result\r\n    },\r\n    toHex: function() {\r\n        return toHexFromRgb(this.r, this.g, this.b)\r\n    },\r\n    getPureColor: function() {\r\n        var rgb = hsvToRgb(this.hsv.h, 100, 100);\r\n        return new Color(\"rgb(\" + rgb.join(\",\") + \")\")\r\n    },\r\n    isValidHex: function(hex) {\r\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex)\r\n    },\r\n    isValidRGB: function(r, g, b) {\r\n        if (!isIntegerBetweenMinAndMax(r) || !isIntegerBetweenMinAndMax(g) || !isIntegerBetweenMinAndMax(b)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    isValidAlpha: function(a) {\r\n        if (isNaN(a) || a < 0 || a > 1 || \"number\" !== typeof a) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    colorIsInvalid: false,\r\n    fromHSL: function(hsl) {\r\n        var color = new Color,\r\n            rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n        color.r = rgb[0];\r\n        color.g = rgb[1];\r\n        color.b = rgb[2];\r\n        return color\r\n    }\r\n};\r\nmodule.exports = Color;\r\n\n\n/***/ }),\n\n/***/ 864:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_box_1 = __webpack_require__(1134);\nvar prop_types_1 = __webpack_require__(15);\nvar component_1 = __webpack_require__(38);\nvar ColorBox = /** @class */ (function (_super) {\n    __extends(ColorBox, _super);\n    function ColorBox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = color_box_1.default;\n        _this._defaults = {\n            defaultOpened: \"opened\",\n            defaultValue: \"value\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"dropDownButtonTemplate\",\n                render: \"dropDownButtonRender\",\n                component: \"dropDownButtonComponent\",\n                keyFn: \"dropDownButtonKeyFn\"\n            }, {\n                tmplOption: \"fieldTemplate\",\n                render: \"fieldRender\",\n                component: \"fieldComponent\",\n                keyFn: \"fieldKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(ColorBox.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorBox;\n}(component_1.Component));\nexports.ColorBox = ColorBox;\nColorBox.propTypes = {\n    acceptCustomValue: prop_types_1.PropTypes.bool,\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    applyButtonText: prop_types_1.PropTypes.string,\n    applyValueMode: prop_types_1.PropTypes.oneOf([\n        \"instantly\",\n        \"useButtons\"\n    ]),\n    cancelButtonText: prop_types_1.PropTypes.string,\n    deferRendering: prop_types_1.PropTypes.bool,\n    disabled: prop_types_1.PropTypes.bool,\n    editAlphaChannel: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    inputAttr: prop_types_1.PropTypes.object,\n    isValid: prop_types_1.PropTypes.bool,\n    keyStep: prop_types_1.PropTypes.number,\n    name: prop_types_1.PropTypes.string,\n    onChange: prop_types_1.PropTypes.func,\n    onClosed: prop_types_1.PropTypes.func,\n    onCopy: prop_types_1.PropTypes.func,\n    onCut: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEnterKey: prop_types_1.PropTypes.func,\n    onFocusIn: prop_types_1.PropTypes.func,\n    onFocusOut: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onInput: prop_types_1.PropTypes.func,\n    onKeyDown: prop_types_1.PropTypes.func,\n    onKeyPress: prop_types_1.PropTypes.func,\n    onKeyUp: prop_types_1.PropTypes.func,\n    onOpened: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onPaste: prop_types_1.PropTypes.func,\n    onValueChanged: prop_types_1.PropTypes.func,\n    opened: prop_types_1.PropTypes.bool,\n    placeholder: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    stylingMode: prop_types_1.PropTypes.oneOf([\n        \"outlined\",\n        \"underlined\",\n        \"filled\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    text: prop_types_1.PropTypes.string,\n    validationError: prop_types_1.PropTypes.object,\n    validationMessageMode: prop_types_1.PropTypes.oneOf([\n        \"always\",\n        \"auto\"\n    ]),\n    value: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\nexports.default = ColorBox;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/6.chunk.js","/**\r\n * DevExtreme (ui/color_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./color_box/color_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box.js\n// module id = 1134\n// module chunks = 6","/**\r\n * DevExtreme (ui/color_box/color_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Color = require(\"../../color\"),\r\n    ColorView = require(\"./color_view\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    isFunction = require(\"../../core/utils/type\").isFunction,\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    DropDownEditor = require(\"../drop_down_editor/ui.drop_down_editor\");\r\nvar COLOR_BOX_CLASS = \"dx-colorbox\",\r\n    COLOR_BOX_INPUT_CLASS = COLOR_BOX_CLASS + \"-input\",\r\n    COLOR_BOX_INPUT_CONTAINER_CLASS = COLOR_BOX_INPUT_CLASS + \"-container\",\r\n    COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS = COLOR_BOX_CLASS + \"-color-result-preview\",\r\n    COLOR_BOX_COLOR_IS_NOT_DEFINED = COLOR_BOX_CLASS + \"-color-is-not-defined\",\r\n    COLOR_BOX_OVERLAY_CLASS = COLOR_BOX_CLASS + \"-overlay\",\r\n    COLOR_BOX_CONTAINER_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_BOX_BUTTON_CELL_CLASS = \"dx-colorview-button-cell\",\r\n    COLOR_BOX_BUTTONS_CONTAINER_CLASS = \"dx-colorview-buttons-container\",\r\n    COLOR_BOX_APPLY_BUTTON_CLASS = \"dx-colorview-apply-button\",\r\n    COLOR_BOX_CANCEL_BUTTON_CLASS = \"dx-colorview-cancel-button\";\r\nvar colorEditorPrototype = ColorView.prototype,\r\n    colorUtils = {\r\n        makeTransparentBackground: colorEditorPrototype._makeTransparentBackground.bind(colorEditorPrototype),\r\n        makeRgba: colorEditorPrototype._makeRgba.bind(colorEditorPrototype)\r\n    };\r\nvar ColorBox = DropDownEditor.inherit({\r\n    _supportedKeys: function() {\r\n        var arrowHandler = function(e) {\r\n            e.stopPropagation();\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n        };\r\n        var upArrowHandler = function(e) {\r\n            if (!this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (e.altKey) {\r\n                this.close();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        var downArrowHandler = function(e) {\r\n            if (!this.option(\"opened\") && !e.altKey) {\r\n                e.preventDefault();\r\n                return false\r\n            }\r\n            if (!this.option(\"opened\") && e.altKey) {\r\n                this._validatedOpening();\r\n                return false\r\n            }\r\n            return true\r\n        };\r\n        return extend(this.callBase(), {\r\n            tab: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._colorView._rgbInputs[0].focus()\r\n                }\r\n            },\r\n            enter: this._enterKeyHandler,\r\n            leftArrow: arrowHandler,\r\n            rightArrow: arrowHandler,\r\n            upArrow: upArrowHandler,\r\n            downArrow: downArrowHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            editAlphaChannel: false,\r\n            applyValueMode: \"useButtons\",\r\n            keyStep: 1,\r\n            fieldTemplate: null,\r\n            onApplyButtonClick: null,\r\n            onCancelButtonClick: null,\r\n            buttonsLocation: \"bottom after\"\r\n        })\r\n    },\r\n    _popupConfig: function() {\r\n        return extend(this.callBase(), {\r\n            height: \"auto\",\r\n            width: \"\"\r\n        })\r\n    },\r\n    _contentReadyHandler: function() {\r\n        this._createColorView();\r\n        this._addPopupBottomClasses()\r\n    },\r\n    _addPopupBottomClasses: function() {\r\n        var $popupBottom = this._popup.bottomToolbar();\r\n        if ($popupBottom) {\r\n            $popupBottom.addClass(COLOR_BOX_CONTAINER_CELL_CLASS).addClass(COLOR_BOX_BUTTON_CELL_CLASS).find(\".dx-toolbar-items-container\").addClass(COLOR_BOX_BUTTONS_CONTAINER_CLASS);\r\n            $popupBottom.find(\".dx-popup-done\").addClass(COLOR_BOX_APPLY_BUTTON_CLASS);\r\n            $popupBottom.find(\".dx-popup-cancel\").addClass(COLOR_BOX_CANCEL_BUTTON_CLASS)\r\n        }\r\n    },\r\n    _createColorView: function() {\r\n        this._popup.overlayContent().addClass(COLOR_BOX_OVERLAY_CLASS);\r\n        var $colorView = $(\"<div>\").appendTo(this._popup.$content());\r\n        this._colorView = this._createComponent($colorView, ColorView, this._colorViewConfig());\r\n        eventsEngine.on($colorView, \"focus\", function() {\r\n            this.focus()\r\n        }.bind(this))\r\n    },\r\n    _applyNewColor: function(value) {\r\n        this.option(\"value\", value);\r\n        if (value) {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n        }\r\n        if (this._colorViewEnterKeyPressed) {\r\n            this.close();\r\n            this._colorViewEnterKeyPressed = false\r\n        }\r\n    },\r\n    _colorViewConfig: function() {\r\n        var that = this;\r\n        return {\r\n            value: that.option(\"value\"),\r\n            matchValue: that.option(\"value\"),\r\n            editAlphaChannel: that.option(\"editAlphaChannel\"),\r\n            applyValueMode: that.option(\"applyValueMode\"),\r\n            focusStateEnabled: that.option(\"focusStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            onEnterKeyPressed: function() {\r\n                that._colorViewEnterKeyPressed = true;\r\n                if (that._colorView.option(\"value\") !== that.option(\"value\")) {\r\n                    that._applyNewColor(that._colorView.option(\"value\"));\r\n                    that.close()\r\n                }\r\n            },\r\n            onValueChanged: function(args) {\r\n                if (colorUtils.makeRgba(args.value) === args.previousValue) {\r\n                    return\r\n                }\r\n                var instantlyMode = \"instantly\" === that.option(\"applyValueMode\");\r\n                if (!instantlyMode && !that._colorViewEnterKeyPressed) {\r\n                    return\r\n                }\r\n                that._applyNewColor(args.value)\r\n            },\r\n            _keyboardProcessor: that._colorViewProcessor\r\n        }\r\n    },\r\n    _enterKeyHandler: function() {\r\n        var newValue = this._input().val(),\r\n            value = this.option(\"value\"),\r\n            oldValue = this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value;\r\n        if (!newValue) {\r\n            return false\r\n        }\r\n        var color = new Color(newValue);\r\n        if (color.colorIsInvalid) {\r\n            this._input().val(oldValue);\r\n            return\r\n        }\r\n        if (newValue !== oldValue) {\r\n            this._applyColorFromInput(newValue);\r\n            this.option(\"value\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(newValue) : newValue)\r\n        }\r\n        if (this._colorView) {\r\n            var colorViewValue = this._colorView.option(\"value\");\r\n            if (value !== colorViewValue) {\r\n                this.option(\"value\", colorViewValue)\r\n            }\r\n        }\r\n        this.close();\r\n        return false\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this._applyNewColor(this._colorView.option(\"value\"));\r\n        if (isFunction(this.option(\"onApplyButtonClick\"))) {\r\n            this.option(\"onApplyButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this._resetInputValue();\r\n        if (isFunction(this.option(\"onCancelButtonClick\"))) {\r\n            this.option(\"onCancelButtonClick\")()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _attachChildKeyboardEvents: function() {\r\n        this._colorViewProcessor = this._keyboardProcessor.attachChildProcessor();\r\n        if (this._colorView) {\r\n            this._colorView.option(\"_keyboardProcessor\", this._colorViewProcessor);\r\n            return\r\n        }\r\n    },\r\n    _init: function() {\r\n        this.callBase()\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(COLOR_BOX_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._input().addClass(COLOR_BOX_INPUT_CLASS);\r\n        this._renderColorPreview()\r\n    },\r\n    _renderColorPreview: function() {\r\n        this.$element().wrapInner($(\"<div>\").addClass(COLOR_BOX_INPUT_CONTAINER_CLASS));\r\n        this._$colorBoxInputContainer = this.$element().children().eq(0);\r\n        this._$colorResultPreview = $(\"<div>\").addClass(COLOR_BOX_COLOR_RESULT_PREVIEW_CLASS).appendTo(this._$colorBoxInputContainer);\r\n        if (!this.option(\"value\")) {\r\n            this._$colorBoxInputContainer.addClass(COLOR_BOX_COLOR_IS_NOT_DEFINED)\r\n        } else {\r\n            colorUtils.makeTransparentBackground(this._$colorResultPreview, this.option(\"value\"))\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        var value = this.option(\"value\");\r\n        this.option(\"text\", this.option(\"editAlphaChannel\") ? colorUtils.makeRgba(value) : value);\r\n        this.callBase()\r\n    },\r\n    _resetInputValue: function() {\r\n        var $input = this._input(),\r\n            value = this.option(\"value\");\r\n        $input.val(value);\r\n        this._updateColorViewValue(value)\r\n    },\r\n    _updateColorViewValue: function(value) {\r\n        if (this._colorView) {\r\n            this._colorView.option({\r\n                value: value,\r\n                matchValue: value\r\n            })\r\n        }\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var value = this._input().val();\r\n        if (value) {\r\n            value = this._applyColorFromInput(value);\r\n            this._updateColorViewValue(value)\r\n        }\r\n        this.callBase(e, value)\r\n    },\r\n    _applyColorFromInput: function(value) {\r\n        var newColor = new Color(value);\r\n        if (newColor.colorIsInvalid) {\r\n            this._resetInputValue();\r\n            value = this.option(\"value\")\r\n        }\r\n        return value\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value,\r\n            name = args.name;\r\n        switch (name) {\r\n            case \"value\":\r\n                this._$colorBoxInputContainer.toggleClass(COLOR_BOX_COLOR_IS_NOT_DEFINED, !value);\r\n                if (value) {\r\n                    colorUtils.makeTransparentBackground(this._$colorResultPreview, value)\r\n                } else {\r\n                    this._$colorResultPreview.removeAttr(\"style\")\r\n                }\r\n                this._updateColorViewValue(value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n                this.callBase(args);\r\n                this._popup && this._addPopupBottomClasses();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n            case \"onCancelButtonClick\":\r\n            case \"onApplyButtonClick\":\r\n            case \"keyStep\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                break;\r\n            case \"applyValueMode\":\r\n                this.callBase(args);\r\n                break;\r\n            case \"rtlEnabled\":\r\n                if (this._colorView) {\r\n                    this._colorView.option(name, value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorBox\", ColorBox);\r\nmodule.exports = ColorBox;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box/color_box.js\n// module id = 1135\n// module chunks = 6","/**\r\n * DevExtreme (ui/color_box/color_view.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    translator = require(\"../../animation/translator\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Color = require(\"../../color\"),\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    devices = require(\"../../core/devices\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    Editor = require(\"../editor/editor\"),\r\n    NumberBox = require(\"../number_box\"),\r\n    TextBox = require(\"../text_box\"),\r\n    Draggable = require(\"../draggable\"),\r\n    clickEvent = require(\"../../events/click\");\r\nvar COLOR_VIEW_CLASS = \"dx-colorview\",\r\n    COLOR_VIEW_CONTAINER_CLASS = \"dx-colorview-container\",\r\n    COLOR_VIEW_ROW_CLASS = \"dx-colorview-container-row\",\r\n    COLOR_VIEW_CELL_CLASS = \"dx-colorview-container-cell\",\r\n    COLOR_VIEW_PALETTE_CLASS = \"dx-colorview-palette\",\r\n    COLOR_VIEW_PALETTE_CELL_CLASS = \"dx-colorview-palette-cell\",\r\n    COLOR_VIEW_PALETTE_HANDLE_CLASS = \"dx-colorview-palette-handle\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_CLASS = \"dx-colorview-palette-gradient\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS = \"dx-colorview-palette-gradient-white\",\r\n    COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS = \"dx-colorview-palette-gradient-black\",\r\n    COLOR_VIEW_HUE_SCALE_CLASS = \"dx-colorview-hue-scale\",\r\n    COLOR_VIEW_HUE_SCALE_CELL_CLASS = \"dx-colorview-hue-scale-cell\",\r\n    COLOR_VIEW_HUE_SCALE_HANDLE_CLASS = \"dx-colorview-hue-scale-handle\",\r\n    COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS = \"dx-colorview-hue-scale-wrapper\",\r\n    COLOR_VIEW_CONTROLS_CONTAINER_CLASS = \"dx-colorview-controls-container\",\r\n    COLOR_VIEW_RED_LABEL_CLASS = \"dx-colorview-label-red\",\r\n    COLOR_VIEW_GREEN_LABEL_CLASS = \"dx-colorview-label-green\",\r\n    COLOR_VIEW_BLUE_LABEL_CLASS = \"dx-colorview-label-blue\",\r\n    COLOR_VIEW_HEX_LABEL_CLASS = \"dx-colorview-label-hex\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS = \"dx-colorview-alpha-channel-scale\",\r\n    COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS = \"dx-colorview-alpha-channel-row\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS = \"dx-colorview-alpha-channel-wrapper\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS = \"dx-colorview-alpha-channel-label\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS = \"dx-colorview-alpha-channel-handle\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS = \"dx-colorview-alpha-channel-cell\",\r\n    COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS = \"dx-colorview-alpha-channel-border\",\r\n    COLOR_VIEW_COLOR_PREVIEW = \"dx-colorview-color-preview\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS = \"dx-colorview-color-preview-container\",\r\n    COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS = \"dx-colorview-color-preview-container-inner\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT = \"dx-colorview-color-preview-color-current\",\r\n    COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW = \"dx-colorview-color-preview-color-new\";\r\nvar ColorView = Editor.inherit({\r\n    _supportedKeys: function() {\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var that = this,\r\n            getHorizontalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateHorizontalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.s + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.s = value;\r\n                updatePaletteValue()\r\n            },\r\n            getVerticalPaletteStep = function(e) {\r\n                var step = 100 / that._paletteHeight;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return Math.round(step)\r\n            },\r\n            updateVerticalPaletteValue = function(step) {\r\n                var value = that._currentColor.hsv.v + step;\r\n                if (value > 100) {\r\n                    value = 100\r\n                } else {\r\n                    if (value < 0) {\r\n                        value = 0\r\n                    }\r\n                }\r\n                that._currentColor.hsv.v = value;\r\n                updatePaletteValue()\r\n            },\r\n            updatePaletteValue = function() {\r\n                that._placePaletteHandle();\r\n                that._updateColorFromHsv(that._currentColor.hsv.h, that._currentColor.hsv.s, that._currentColor.hsv.v)\r\n            },\r\n            getHueScaleStep = function(e) {\r\n                var step = 360 / (that._hueScaleWrapperHeight - that._hueScaleHandleHeight);\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > 1 ? step : 1;\r\n                return step\r\n            },\r\n            updateHueScaleValue = function(step) {\r\n                that._currentColor.hsv.h += step;\r\n                that._placeHueScaleHandle();\r\n                var handleLocation = translator.locate(that._$hueScaleHandle);\r\n                that._updateColorHue(handleLocation.top + that._hueScaleHandleHeight / 2)\r\n            },\r\n            getAlphaScaleStep = function(e) {\r\n                var step = 1 / that._alphaChannelScaleWorkWidth;\r\n                if (e.shiftKey) {\r\n                    step *= that.option(\"keyStep\")\r\n                }\r\n                step = step > .01 ? step : .01;\r\n                step = isRTL ? -step : step;\r\n                return step\r\n            },\r\n            updateAlphaScaleValue = function(step) {\r\n                that._currentColor.a += step;\r\n                that._placeAlphaChannelHandle();\r\n                var handleLocation = translator.locate(that._$alphaChannelHandle);\r\n                that._calculateColorTransparencyByScaleWidth(handleLocation.left + that._alphaChannelHandleWidth / 2)\r\n            };\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h <= 360 && !this._isTopColorHue) {\r\n                        updateHueScaleValue(getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v < 100) {\r\n                        updateVerticalPaletteValue(getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (this._currentColor.hsv.h >= 0) {\r\n                        if (this._isTopColorHue) {\r\n                            this._currentColor.hsv.h = 360\r\n                        }\r\n                        updateHueScaleValue(-getHueScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.v > 0) {\r\n                        updateVerticalPaletteValue(-getVerticalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            rightArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a < 1 : this._currentColor.a > 0 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(-getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s < 100) {\r\n                        updateHorizontalPaletteValue(getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            leftArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.ctrlKey) {\r\n                    if (isRTL ? this._currentColor.a > 0 : this._currentColor.a < 1 && this.option(\"editAlphaChannel\")) {\r\n                        updateAlphaScaleValue(getAlphaScaleStep(e))\r\n                    }\r\n                } else {\r\n                    if (this._currentColor.hsv.s > 0) {\r\n                        updateHorizontalPaletteValue(-getHorizontalPaletteStep(e))\r\n                    }\r\n                }\r\n            },\r\n            enter: function(e) {\r\n                this._fireEnterKeyPressed(e)\r\n            }\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            matchValue: null,\r\n            onEnterKeyPressed: void 0,\r\n            editAlphaChannel: false,\r\n            keyStep: 1,\r\n            stylingMode: void 0\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initColorAndOpacity();\r\n        this._initEnterKeyPressedAction()\r\n    },\r\n    _initEnterKeyPressedAction: function() {\r\n        this._onEnterKeyPressedAction = this._createActionByOption(\"onEnterKeyPressed\")\r\n    },\r\n    _fireEnterKeyPressed: function(e) {\r\n        if (!this._onEnterKeyPressedAction) {\r\n            return\r\n        }\r\n        this._onEnterKeyPressedAction({\r\n            event: e\r\n        })\r\n    },\r\n    _initColorAndOpacity: function() {\r\n        this._setCurrentColor(this.option(\"value\"))\r\n    },\r\n    _setCurrentColor: function(value) {\r\n        value = value || \"#000000\";\r\n        var newColor = new Color(value);\r\n        if (!newColor.colorIsInvalid) {\r\n            if (!this._currentColor || this._makeRgba(this._currentColor) !== this._makeRgba(newColor)) {\r\n                this._currentColor = newColor;\r\n                if (this._$currentColor) {\r\n                    this._makeTransparentBackground(this._$currentColor, newColor)\r\n                }\r\n            }\r\n        } else {\r\n            this.option(\"value\", this._currentColor.baseColor)\r\n        }\r\n    },\r\n    _setBaseColor: function(value) {\r\n        var color = value || \"#000000\";\r\n        var newColor = new Color(color);\r\n        if (!newColor.colorIsInvalid) {\r\n            var isBaseColorChanged = this._makeRgba(this.option(\"matchValue\") !== this._makeRgba(newColor));\r\n            if (isBaseColorChanged) {\r\n                if (this._$baseColor) {\r\n                    this._makeTransparentBackground(this._$baseColor, newColor)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(COLOR_VIEW_CLASS);\r\n        this._renderColorPickerContainer()\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderPalette();\r\n        this._renderHueScale();\r\n        this._renderControlsContainer();\r\n        this._renderControls();\r\n        this._renderAlphaChannelElements()\r\n    },\r\n    _makeTransparentBackground: function($el, color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        $el.css(\"backgroundColor\", this._makeRgba(color))\r\n    },\r\n    _makeRgba: function(color) {\r\n        if (!(color instanceof Color)) {\r\n            color = new Color(color)\r\n        }\r\n        return \"rgba(\" + [color.r, color.g, color.b, color.a].join(\", \") + \")\"\r\n    },\r\n    _renderValue: function() {\r\n        this.callBase(this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this.option(\"value\"))\r\n    },\r\n    _renderColorPickerContainer: function() {\r\n        var $parent = this.$element();\r\n        this._$colorPickerContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTAINER_CLASS).appendTo($parent);\r\n        this._renderHtmlRows()\r\n    },\r\n    _renderHtmlRows: function(updatedOption) {\r\n        var $renderedRows = this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS),\r\n            renderedRowsCount = $renderedRows.length,\r\n            rowCount = this.option(\"editAlphaChannel\") ? 2 : 1,\r\n            delta = renderedRowsCount - rowCount;\r\n        if (delta > 0) {\r\n            $renderedRows.eq(-1).remove()\r\n        }\r\n        if (delta < 0) {\r\n            delta = Math.abs(delta);\r\n            var i, rows = [];\r\n            for (i = 0; i < delta; i++) {\r\n                rows.push($(\"<div>\").addClass(COLOR_VIEW_ROW_CLASS))\r\n            }\r\n            if (renderedRowsCount) {\r\n                for (i = 0; i < rows.length; i++) {\r\n                    $renderedRows.eq(0).after(rows[i])\r\n                }\r\n            } else {\r\n                this._$colorPickerContainer.append(rows)\r\n            }\r\n        }\r\n    },\r\n    _renderHtmlCellInsideRow: function(index, $rowParent, additionalClass) {\r\n        return $(\"<div>\").addClass(COLOR_VIEW_CELL_CLASS).addClass(additionalClass).appendTo($rowParent.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(index))\r\n    },\r\n    _renderPalette: function() {\r\n        var $paletteCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_PALETTE_CELL_CLASS),\r\n            $paletteGradientWhite = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_WHITE_CLASS].join(\" \")),\r\n            $paletteGradientBlack = $(\"<div>\").addClass([COLOR_VIEW_PALETTE_GRADIENT_CLASS, COLOR_VIEW_PALETTE_GRADIENT_BLACK_CLASS].join(\" \"));\r\n        this._$palette = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_CLASS).css(\"backgroundColor\", this._currentColor.getPureColor().toHex()).appendTo($paletteCell);\r\n        this._paletteHeight = this._$palette.height();\r\n        this._paletteWidth = this._$palette.width();\r\n        this._renderPaletteHandle();\r\n        this._$palette.append([$paletteGradientWhite, $paletteGradientBlack])\r\n    },\r\n    _renderPaletteHandle: function() {\r\n        this._$paletteHandle = $(\"<div>\").addClass(COLOR_VIEW_PALETTE_HANDLE_CLASS).appendTo(this._$palette);\r\n        this._createComponent(this._$paletteHandle, Draggable, {\r\n            area: this._$palette,\r\n            allowMoveByClick: true,\r\n            boundOffset: function() {\r\n                return -this._paletteHandleHeight / 2\r\n            }.bind(this),\r\n            onDrag: function() {\r\n                var paletteHandlePosition = translator.locate(this._$paletteHandle);\r\n                this._updateByDrag = true;\r\n                this._updateColorFromHsv(this._currentColor.hsv.h, this._calculateColorSaturation(paletteHandlePosition), this._calculateColorValue(paletteHandlePosition))\r\n            }.bind(this)\r\n        });\r\n        this._paletteHandleWidth = this._$paletteHandle.width();\r\n        this._paletteHandleHeight = this._$paletteHandle.height();\r\n        this._placePaletteHandle()\r\n    },\r\n    _placePaletteHandle: function() {\r\n        translator.move(this._$paletteHandle, {\r\n            left: Math.round(this._paletteWidth * this._currentColor.hsv.s / 100 - this._paletteHandleWidth / 2),\r\n            top: Math.round(this._paletteHeight - this._paletteHeight * this._currentColor.hsv.v / 100 - this._paletteHandleHeight / 2)\r\n        })\r\n    },\r\n    _calculateColorValue: function(paletteHandlePosition) {\r\n        var value = Math.floor(paletteHandlePosition.top + this._paletteHandleHeight / 2);\r\n        return 100 - Math.round(100 * value / this._paletteHeight)\r\n    },\r\n    _calculateColorSaturation: function(paletteHandlePosition) {\r\n        var saturation = Math.floor(paletteHandlePosition.left + this._paletteHandleWidth / 2);\r\n        return Math.round(100 * saturation / this._paletteWidth)\r\n    },\r\n    _updateColorFromHsv: function(hue, saturation, value) {\r\n        var a = this._currentColor.a;\r\n        this._currentColor = new Color(\"hsv(\" + [hue, saturation, value].join(\",\") + \")\");\r\n        this._currentColor.a = a;\r\n        this._updateColorParamsAndColorPreview();\r\n        this.applyColor()\r\n    },\r\n    _renderHueScale: function() {\r\n        var $hueScaleCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer, COLOR_VIEW_HUE_SCALE_CELL_CLASS);\r\n        this._$hueScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_WRAPPER_CLASS).appendTo($hueScaleCell);\r\n        this._$hueScale = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._hueScaleHeight = this._$hueScale.height();\r\n        this._hueScaleWrapperHeight = this._$hueScaleWrapper.outerHeight();\r\n        this._renderHueScaleHandle()\r\n    },\r\n    _renderHueScaleHandle: function() {\r\n        this._$hueScaleHandle = $(\"<div>\").addClass(COLOR_VIEW_HUE_SCALE_HANDLE_CLASS).appendTo(this._$hueScaleWrapper);\r\n        this._createComponent(this._$hueScaleHandle, Draggable, {\r\n            area: this._$hueScaleWrapper,\r\n            allowMoveByClick: true,\r\n            direction: \"vertical\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                this._updateColorHue(translator.locate(this._$hueScaleHandle).top + this._hueScaleHandleHeight / 2)\r\n            }.bind(this)\r\n        });\r\n        this._hueScaleHandleHeight = this._$hueScaleHandle.height();\r\n        this._placeHueScaleHandle()\r\n    },\r\n    _placeHueScaleHandle: function() {\r\n        var hueScaleHeight = this._hueScaleWrapperHeight,\r\n            handleHeight = this._hueScaleHandleHeight,\r\n            top = (hueScaleHeight - handleHeight) * (360 - this._currentColor.hsv.h) / 360;\r\n        if (hueScaleHeight < top + handleHeight) {\r\n            top = hueScaleHeight - handleHeight\r\n        }\r\n        if (top < 0) {\r\n            top = 0\r\n        }\r\n        translator.move(this._$hueScaleHandle, {\r\n            top: Math.round(top)\r\n        })\r\n    },\r\n    _updateColorHue: function(handlePosition) {\r\n        var hue = 360 - Math.round(360 * (handlePosition - this._hueScaleHandleHeight / 2) / (this._hueScaleWrapperHeight - this._hueScaleHandleHeight)),\r\n            saturation = this._currentColor.hsv.s,\r\n            value = this._currentColor.hsv.v;\r\n        this._isTopColorHue = false;\r\n        hue = hue < 0 ? 0 : hue;\r\n        if (hue >= 360) {\r\n            this._isTopColorHue = true;\r\n            hue = 0\r\n        }\r\n        this._updateColorFromHsv(hue, saturation, value);\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex())\r\n    },\r\n    _renderControlsContainer: function() {\r\n        var $controlsContainerCell = this._renderHtmlCellInsideRow(0, this._$colorPickerContainer);\r\n        this._$controlsContainer = $(\"<div>\").addClass(COLOR_VIEW_CONTROLS_CONTAINER_CLASS).appendTo($controlsContainerCell)\r\n    },\r\n    _renderControls: function() {\r\n        this._renderColorsPreview();\r\n        this._renderRgbInputs();\r\n        this._renderHexInput()\r\n    },\r\n    _renderColorsPreview: function() {\r\n        var $colorsPreviewContainer = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_CLASS).appendTo(this._$controlsContainer);\r\n        var $colorsPreviewContainerInner = $(\"<div>\").addClass(COLOR_VIEW_COLOR_PREVIEW_CONTAINER_INNER_CLASS).appendTo($colorsPreviewContainer);\r\n        this._$currentColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_NEW].join(\" \"));\r\n        this._$baseColor = $(\"<div>\").addClass([COLOR_VIEW_COLOR_PREVIEW, COLOR_VIEW_COLOR_PREVIEW_COLOR_CURRENT].join(\" \"));\r\n        this._makeTransparentBackground(this._$baseColor, this.option(\"matchValue\"));\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        $colorsPreviewContainerInner.append([this._$baseColor, this._$currentColor])\r\n    },\r\n    _renderAlphaChannelElements: function() {\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._$colorPickerContainer.find(\".\" + COLOR_VIEW_ROW_CLASS).eq(1).addClass(COLOR_VIEW_APLHA_CHANNEL_ROW_CLASS);\r\n            this._renderAlphaChannelScale();\r\n            this._renderAlphaChannelInput()\r\n        }\r\n    },\r\n    _renderRgbInputs: function() {\r\n        this._rgbInputsWithLabels = [this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.r,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"R\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaRed\"),\r\n            labelClass: COLOR_VIEW_RED_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.g,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"G\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaGreen\"),\r\n            labelClass: COLOR_VIEW_GREEN_LABEL_CLASS\r\n        }), this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.b,\r\n            onValueChanged: this._updateColor.bind(this, false),\r\n            labelText: \"B\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaBlue\"),\r\n            labelClass: COLOR_VIEW_BLUE_LABEL_CLASS\r\n        })];\r\n        this._$controlsContainer.append(this._rgbInputsWithLabels);\r\n        this._rgbInputs = [this._rgbInputsWithLabels[0].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[1].find(\".dx-numberbox\").dxNumberBox(\"instance\"), this._rgbInputsWithLabels[2].find(\".dx-numberbox\").dxNumberBox(\"instance\")]\r\n    },\r\n    _renderEditorWithLabel: function(options) {\r\n        var $editor = $(\"<div>\");\r\n        var $label = $(\"<label>\").addClass(options.labelClass).text(options.labelText + \":\").append($editor);\r\n        eventsEngine.off($label, clickEvent.name);\r\n        eventsEngine.on($label, clickEvent.name, function(e) {\r\n            e.preventDefault()\r\n        });\r\n        var editorType = options.editorType;\r\n        var editorOptions = extend({\r\n            value: options.value,\r\n            onValueChanged: options.onValueChanged\r\n        }, {\r\n            stylingMode: this.option(\"stylingMode\")\r\n        });\r\n        if (editorType === NumberBox) {\r\n            editorOptions.min = options.min || 0;\r\n            editorOptions.max = options.max || 255;\r\n            editorOptions.step = options.step || 1\r\n        }\r\n        var editor = new editorType($editor, editorOptions);\r\n        editor.registerKeyHandler(\"enter\", function(e) {\r\n            this._fireEnterKeyPressed(e)\r\n        }.bind(this));\r\n        this.setAria(\"label\", options.labelAriaText, $editor);\r\n        return $label\r\n    },\r\n    hexInputOptions: function() {\r\n        return {\r\n            editorType: TextBox,\r\n            value: this._currentColor.toHex().replace(\"#\", \"\"),\r\n            onValueChanged: this._updateColor.bind(this, true),\r\n            labelClass: COLOR_VIEW_HEX_LABEL_CLASS,\r\n            labelText: \"#\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaHex\")\r\n        }\r\n    },\r\n    _renderHexInput: function() {\r\n        this._hexInput = TextBox.getInstance(this._renderEditorWithLabel(this.hexInputOptions()).appendTo(this._$controlsContainer).find(\".dx-textbox\"))\r\n    },\r\n    _renderAlphaChannelScale: function() {\r\n        var $alphaChannelScaleCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer, COLOR_VIEW_ALPHA_CHANNEL_CELL_CLASS),\r\n            $alphaChannelBorder = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_BORDER_CLASS).appendTo($alphaChannelScaleCell),\r\n            $alphaChannelScaleWrapper = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_WRAPPER_CLASS).appendTo($alphaChannelBorder);\r\n        this._$alphaChannelScale = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_SCALE_CLASS).appendTo($alphaChannelScaleWrapper);\r\n        this._makeCSSLinearGradient(this._$alphaChannelScale);\r\n        this._renderAlphaChannelHandle($alphaChannelScaleCell)\r\n    },\r\n    _makeCSSLinearGradient: function($el) {\r\n        var color = this._currentColor,\r\n            colorAsRgb = [color.r, color.g, color.b].join(\",\"),\r\n            colorAsHex = color.toHex().replace(\"#\", \"\");\r\n        var combineGradientString = function(colorAsRgb, colorAsHex) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\"),\r\n                startColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"1\" : \"0\") + \")\",\r\n                finishColor = \"rgba(\" + colorAsRgb + \", \" + (rtlEnabled ? \"0\" : \"1\") + \")\",\r\n                startColorIE = \"'#\" + (rtlEnabled ? \"00\" : \"\") + colorAsHex + \"'\",\r\n                finishColorIE = \"'#\" + (rtlEnabled ? \"\" : \"00\") + colorAsHex + \"'\";\r\n            return [\"background-image: -webkit-linear-gradient(180deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -moz-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: -o-linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"background-image: linear-gradient(-90deg, \" + startColor + \", \" + finishColor + \")\", \"filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=\" + startColorIE + \", endColorstr=\" + finishColorIE + \")\"].join(\";\")\r\n        };\r\n        $el.attr(\"style\", combineGradientString.call(this, colorAsRgb, colorAsHex))\r\n    },\r\n    _renderAlphaChannelInput: function() {\r\n        var that = this,\r\n            $alphaChannelInputCell = this._renderHtmlCellInsideRow(1, this._$colorPickerContainer);\r\n        that._alphaChannelInput = this._renderEditorWithLabel({\r\n            editorType: NumberBox,\r\n            value: this._currentColor.a,\r\n            max: 1,\r\n            step: .1,\r\n            onValueChanged: function(e) {\r\n                var value = e.value;\r\n                value = that._currentColor.isValidAlpha(value) ? value : that._currentColor.a;\r\n                that._updateColorTransparency(value);\r\n                that._placeAlphaChannelHandle()\r\n            },\r\n            labelClass: COLOR_VIEW_ALPHA_CHANNEL_LABEL_CLASS,\r\n            labelText: \"Alpha\",\r\n            labelAriaText: messageLocalization.format(\"dxColorView-ariaAlpha\")\r\n        }).appendTo($alphaChannelInputCell).find(\".dx-numberbox\").dxNumberBox(\"instance\")\r\n    },\r\n    _updateColorTransparency: function(transparency) {\r\n        this._currentColor.a = transparency;\r\n        this.applyColor()\r\n    },\r\n    _renderAlphaChannelHandle: function($parent) {\r\n        this._$alphaChannelHandle = $(\"<div>\").addClass(COLOR_VIEW_ALPHA_CHANNEL_HANDLE_CLASS).appendTo($parent);\r\n        this._createComponent(this._$alphaChannelHandle, Draggable, {\r\n            area: $parent,\r\n            allowMoveByClick: true,\r\n            direction: \"horizontal\",\r\n            onDrag: function() {\r\n                this._updateByDrag = true;\r\n                var $alphaChannelHandle = this._$alphaChannelHandle,\r\n                    alphaChannelHandlePosition = translator.locate($alphaChannelHandle).left + this._alphaChannelHandleWidth / 2;\r\n                this._calculateColorTransparencyByScaleWidth(alphaChannelHandlePosition)\r\n            }.bind(this)\r\n        });\r\n        this._alphaChannelHandleWidth = this._$alphaChannelHandle.width();\r\n        this._alphaChannelScaleWorkWidth = $parent.width() - this._alphaChannelHandleWidth;\r\n        this._placeAlphaChannelHandle()\r\n    },\r\n    _calculateColorTransparencyByScaleWidth: function(handlePosition) {\r\n        var transparency = (handlePosition - this._alphaChannelHandleWidth / 2) / this._alphaChannelScaleWorkWidth,\r\n            rtlEnabled = this.option(\"rtlEnabled\");\r\n        transparency = rtlEnabled ? transparency : 1 - transparency;\r\n        if (handlePosition >= this._alphaChannelScaleWorkWidth + this._alphaChannelHandleWidth / 2) {\r\n            transparency = rtlEnabled ? 1 : 0\r\n        } else {\r\n            if (transparency < 1) {\r\n                transparency = transparency.toFixed(2)\r\n            }\r\n        }\r\n        transparency = Math.max(transparency, 0);\r\n        transparency = Math.min(transparency, 1);\r\n        this._alphaChannelInput.option(\"value\", transparency)\r\n    },\r\n    _placeAlphaChannelHandle: function() {\r\n        var left = this._alphaChannelScaleWorkWidth * (1 - this._currentColor.a);\r\n        if (left < 0) {\r\n            left = 0\r\n        }\r\n        if (this._alphaChannelScaleWorkWidth < left) {\r\n            left = this._alphaChannelScaleWorkWidth\r\n        }\r\n        translator.move(this._$alphaChannelHandle, {\r\n            left: this.option(\"rtlEnabled\") ? this._alphaChannelScaleWorkWidth - left : left\r\n        })\r\n    },\r\n    applyColor: function() {\r\n        var colorValue = this.option(\"editAlphaChannel\") ? this._makeRgba(this._currentColor) : this._currentColor.toHex();\r\n        this._makeTransparentBackground(this._$currentColor, this._currentColor);\r\n        this.option(\"value\", colorValue)\r\n    },\r\n    cancelColor: function() {\r\n        this._initColorAndOpacity();\r\n        this._refreshMarkup()\r\n    },\r\n    _updateColor: function(isHex, e) {\r\n        var rgba, newColor;\r\n        if (isHex) {\r\n            newColor = this._validateHex(\"#\" + this._hexInput.option(\"value\"))\r\n        } else {\r\n            rgba = this._validateRgb();\r\n            if (this._alphaChannelInput) {\r\n                rgba.push(this._alphaChannelInput.option(\"value\"));\r\n                newColor = \"rgba(\" + rgba.join(\", \") + \")\"\r\n            } else {\r\n                newColor = \"rgb(\" + rgba.join(\", \") + \")\"\r\n            }\r\n        }\r\n        if (!this._suppressEditorsValueUpdating) {\r\n            this._currentColor = new Color(newColor);\r\n            this.applyColor();\r\n            this._refreshMarkup()\r\n        }\r\n    },\r\n    _validateHex: function(hex) {\r\n        return this._currentColor.isValidHex(hex) ? hex : this._currentColor.toHex()\r\n    },\r\n    _validateRgb: function() {\r\n        var r = this._rgbInputs[0].option(\"value\"),\r\n            g = this._rgbInputs[1].option(\"value\"),\r\n            b = this._rgbInputs[2].option(\"value\");\r\n        if (!this._currentColor.isValidRGB(r, g, b)) {\r\n            r = this._currentColor.r;\r\n            g = this._currentColor.g;\r\n            b = this._currentColor.b\r\n        }\r\n        return [r, g, b]\r\n    },\r\n    _refreshMarkup: function() {\r\n        this._placeHueScaleHandle();\r\n        this._placePaletteHandle();\r\n        this._updateColorParamsAndColorPreview();\r\n        this._$palette.css(\"backgroundColor\", this._currentColor.getPureColor().toHex());\r\n        if (this._$alphaChannelHandle) {\r\n            this._updateColorTransparency(this._currentColor.a);\r\n            this._placeAlphaChannelHandle()\r\n        }\r\n    },\r\n    _updateColorParamsAndColorPreview: function() {\r\n        this._suppressEditorsValueUpdating = true;\r\n        this._hexInput.option(\"value\", this._currentColor.toHex().replace(\"#\", \"\"));\r\n        this._rgbInputs[0].option(\"value\", this._currentColor.r);\r\n        this._rgbInputs[1].option(\"value\", this._currentColor.g);\r\n        this._rgbInputs[2].option(\"value\", this._currentColor.b);\r\n        this._suppressEditorsValueUpdating = false;\r\n        if (this.option(\"editAlphaChannel\")) {\r\n            this._makeCSSLinearGradient.call(this, this._$alphaChannelScale);\r\n            this._alphaChannelInput.option(\"value\", this._currentColor.a)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        var value = args.value;\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._setCurrentColor(value);\r\n                if (!this._updateByDrag) {\r\n                    this._refreshMarkup()\r\n                }\r\n                this._updateByDrag = false;\r\n                this.callBase(args);\r\n                break;\r\n            case \"matchValue\":\r\n                this._setBaseColor(value);\r\n                break;\r\n            case \"onEnterKeyPressed\":\r\n                this._initEnterKeyPressedAction();\r\n                break;\r\n            case \"editAlphaChannel\":\r\n                if (this._$colorPickerContainer) {\r\n                    this._renderHtmlRows(\"editAlphaChannel\");\r\n                    this._renderAlphaChannelElements()\r\n                }\r\n                break;\r\n            case \"keyStep\":\r\n                break;\r\n            case \"stylingMode\":\r\n                this._renderControls();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxColorView\", ColorView);\r\nmodule.exports = ColorView;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/color_box/color_view.js\n// module id = 1136\n// module chunks = 6","/**\r\n * DevExtreme (ui/draggable.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    window = require(\"../core/utils/window\").getWindow(),\r\n    eventsEngine = require(\"../events/core/events_engine\"),\r\n    stringUtils = require(\"../core/utils/string\"),\r\n    registerComponent = require(\"../core/component_registrator\"),\r\n    translator = require(\"../animation/translator\"),\r\n    dasherize = require(\"../core/utils/inflector\").dasherize,\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    DOMComponent = require(\"../core/dom_component\"),\r\n    eventUtils = require(\"../events/utils\"),\r\n    pointerEvents = require(\"../events/pointer\"),\r\n    dragEvents = require(\"../events/drag\"),\r\n    positionUtils = require(\"../animation/position\"),\r\n    isFunction = require(\"../core/utils/type\").isFunction,\r\n    noop = require(\"../core/utils/common\").noop;\r\nvar DRAGGABLE = \"dxDraggable\",\r\n    DRAGSTART_EVENT_NAME = eventUtils.addNamespace(dragEvents.start, DRAGGABLE),\r\n    DRAG_EVENT_NAME = eventUtils.addNamespace(dragEvents.move, DRAGGABLE),\r\n    DRAGEND_EVENT_NAME = eventUtils.addNamespace(dragEvents.end, DRAGGABLE),\r\n    POINTERDOWN_EVENT_NAME = eventUtils.addNamespace(pointerEvents.down, DRAGGABLE),\r\n    DRAGGABLE_CLASS = dasherize(DRAGGABLE),\r\n    DRAGGABLE_DRAGGING_CLASS = DRAGGABLE_CLASS + \"-dragging\";\r\nvar Draggable = DOMComponent.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onDragStart: noop,\r\n            onDrag: noop,\r\n            onDragEnd: noop,\r\n            immediate: true,\r\n            direction: \"both\",\r\n            area: window,\r\n            boundOffset: 0,\r\n            allowMoveByClick: false\r\n        })\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._attachEventHandlers()\r\n    },\r\n    _attachEventHandlers: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return\r\n        }\r\n        var $element = this.$element().css(\"position\", \"absolute\"),\r\n            eventHandlers = {},\r\n            allowMoveByClick = this.option(\"allowMoveByClick\");\r\n        eventHandlers[DRAGSTART_EVENT_NAME] = this._dragStartHandler.bind(this);\r\n        eventHandlers[DRAG_EVENT_NAME] = this._dragHandler.bind(this);\r\n        eventHandlers[DRAGEND_EVENT_NAME] = this._dragEndHandler.bind(this);\r\n        if (allowMoveByClick) {\r\n            eventHandlers[POINTERDOWN_EVENT_NAME] = this._pointerDownHandler.bind(this);\r\n            $element = this._getArea()\r\n        }\r\n        eventsEngine.on($element, eventHandlers, {\r\n            direction: this.option(\"direction\"),\r\n            immediate: this.option(\"immediate\")\r\n        })\r\n    },\r\n    _detachEventHandlers: function() {\r\n        eventsEngine.off(this.$element(), \".\" + DRAGGABLE);\r\n        eventsEngine.off(this._getArea(), \".\" + DRAGGABLE)\r\n    },\r\n    _move: function(position) {\r\n        translator.move(this.$element(), position)\r\n    },\r\n    _pointerDownHandler: function(e) {\r\n        if (eventUtils.needSkipEvent(e)) {\r\n            return\r\n        }\r\n        var areaOffset = this._getAreaOffset($(e.currentTarget)),\r\n            direction = this.option(\"direction\"),\r\n            position = {};\r\n        if (\"horizontal\" === direction || \"both\" === direction) {\r\n            position.left = e.pageX - this.$element().width() / 2 - areaOffset.left\r\n        }\r\n        if (\"vertical\" === direction || \"both\" === direction) {\r\n            position.top = e.pageY - this.$element().height() / 2 - areaOffset.top\r\n        }\r\n        this._move(position);\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragStartHandler: function(e) {\r\n        var $element = this.$element();\r\n        if ($element.is(\".dx-state-disabled, .dx-state-disabled *\")) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        var $area = this._getArea(),\r\n            areaOffset = this._getAreaOffset($area),\r\n            boundOffset = this._getBoundOffset(),\r\n            areaWidth = $area.outerWidth(),\r\n            areaHeight = $area.outerHeight(),\r\n            elementWidth = $element.width(),\r\n            elementHeight = $element.height();\r\n        this._toggleDraggingClass(true);\r\n        var startOffset = {\r\n            left: $element.offset().left - areaOffset.left,\r\n            top: $element.offset().top - areaOffset.top\r\n        };\r\n        this._startPosition = translator.locate($element);\r\n        e.maxLeftOffset = startOffset.left - boundOffset.left;\r\n        e.maxRightOffset = areaWidth - startOffset.left - elementWidth - boundOffset.right;\r\n        e.maxTopOffset = startOffset.top - boundOffset.top;\r\n        e.maxBottomOffset = areaHeight - startOffset.top - elementHeight - boundOffset.bottom;\r\n        this._getAction(\"onDragStart\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAreaOffset: function($area) {\r\n        var offset = $area && positionUtils.offset($area);\r\n        return offset ? offset : {\r\n            left: 0,\r\n            top: 0\r\n        }\r\n    },\r\n    _toggleDraggingClass: function(value) {\r\n        this.$element().toggleClass(DRAGGABLE_DRAGGING_CLASS, value)\r\n    },\r\n    _getBoundOffset: function() {\r\n        var boundOffset = this.option(\"boundOffset\");\r\n        if (isFunction(boundOffset)) {\r\n            boundOffset = boundOffset.call(this)\r\n        }\r\n        return stringUtils.quadToObject(boundOffset)\r\n    },\r\n    _getArea: function() {\r\n        var area = this.option(\"area\");\r\n        if (isFunction(area)) {\r\n            area = area.call(this)\r\n        }\r\n        return $(area)\r\n    },\r\n    _dragHandler: function(e) {\r\n        var offset = e.offset,\r\n            startPosition = this._startPosition;\r\n        this._move({\r\n            left: startPosition.left + offset.x,\r\n            top: startPosition.top + offset.y\r\n        });\r\n        this._getAction(\"onDrag\")({\r\n            event: e\r\n        })\r\n    },\r\n    _dragEndHandler: function(e) {\r\n        this._toggleDraggingClass(false);\r\n        this._getAction(\"onDragEnd\")({\r\n            event: e\r\n        })\r\n    },\r\n    _getAction: function(name) {\r\n        return this[\"_\" + name + \"Action\"] || this._createActionByOption(name)\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DRAGGABLE_CLASS)\r\n    },\r\n    _optionChanged: function(args) {\r\n        var name = args.name;\r\n        switch (name) {\r\n            case \"onDragStart\":\r\n            case \"onDrag\":\r\n            case \"onDragEnd\":\r\n                this[\"_\" + name + \"Action\"] = this._createActionByOption(name);\r\n                break;\r\n            case \"allowMoveByClick\":\r\n            case \"direction\":\r\n            case \"disabled\":\r\n                this._detachEventHandlers();\r\n                this._attachEventHandlers();\r\n                break;\r\n            case \"boundOffset\":\r\n            case \"area\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._detachEventHandlers()\r\n    }\r\n});\r\nregisterComponent(DRAGGABLE, Draggable);\r\nmodule.exports = Draggable;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/draggable.js\n// module id = 1137\n// module chunks = 6","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/color-box' file instead */\n__export(require(\"../color-box\"));\nvar color_box_1 = require(\"../color-box\");\nexports.default = color_box_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/color-box.js\n// module id = 623\n// module chunks = 6","/**\r\n * DevExtreme (ui/drop_down_editor/ui.drop_down_editor.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    AsyncTemplateMixin = require(\"../shared/async_template_mixin\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    focused = require(\"../widget/selectors\").focused,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    isDefined = require(\"../../core/utils/type\").isDefined,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    errors = require(\"../widget/ui.errors\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    getDefaultAlignment = require(\"../../core/utils/position\").getDefaultAlignment,\r\n    messageLocalization = require(\"../../localization/message\"),\r\n    Button = require(\"../button\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    TextBox = require(\"../text_box\"),\r\n    clickEvent = require(\"../../events/click\"),\r\n    FunctionTemplate = require(\"../widget/function_template\"),\r\n    Popup = require(\"../popup\");\r\nvar DROP_DOWN_EDITOR_CLASS = \"dx-dropdowneditor\",\r\n    DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS = \"dx-dropdowneditor-input-wrapper\",\r\n    DROP_DOWN_EDITOR_BUTTON_CLASS = \"dx-dropdowneditor-button\",\r\n    DROP_DOWN_EDITOR_BUTTON_ICON = \"dx-dropdowneditor-icon\",\r\n    DROP_DOWN_EDITOR_OVERLAY = \"dx-dropdowneditor-overlay\",\r\n    DROP_DOWN_EDITOR_OVERLAY_FLIPPED = \"dx-dropdowneditor-overlay-flipped\",\r\n    DROP_DOWN_EDITOR_ACTIVE = \"dx-dropdowneditor-active\",\r\n    DROP_DOWN_EDITOR_BUTTON_VISIBLE = \"dx-dropdowneditor-button-visible\",\r\n    DROP_DOWN_EDITOR_FIELD_CLICKABLE = \"dx-dropdowneditor-field-clickable\";\r\nvar DropDownEditor = TextBox.inherit({\r\n    _supportedKeys: function() {\r\n        var homeEndHandler = function(e) {\r\n            if (this.option(\"opened\")) {\r\n                e.preventDefault();\r\n                return true\r\n            }\r\n            return false\r\n        };\r\n        return extend({}, this.callBase(), {\r\n            tab: function(e) {\r\n                if (!this.option(\"opened\")) {\r\n                    return\r\n                }\r\n                if (\"instantly\" === this.option(\"applyValueMode\")) {\r\n                    this.close();\r\n                    return\r\n                }\r\n                var $focusableElement = e.shiftKey ? this._getLastPopupElement() : this._getFirstPopupElement();\r\n                $focusableElement && eventsEngine.trigger($focusableElement, \"focus\");\r\n                e.preventDefault()\r\n            },\r\n            escape: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault()\r\n                }\r\n                this.close()\r\n            },\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this.close();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                if (e.altKey) {\r\n                    this._validatedOpening();\r\n                    return false\r\n                }\r\n                return true\r\n            },\r\n            enter: function(e) {\r\n                if (this.option(\"opened\")) {\r\n                    e.preventDefault();\r\n                    this._valueChangeEventHandler(e)\r\n                }\r\n                return true\r\n            },\r\n            home: homeEndHandler,\r\n            end: homeEndHandler\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            onOpened: null,\r\n            onClosed: null,\r\n            opened: false,\r\n            acceptCustomValue: true,\r\n            applyValueMode: \"instantly\",\r\n            deferRendering: true,\r\n            activeStateEnabled: true,\r\n            dropDownButtonTemplate: \"dropDownButton\",\r\n            fieldTemplate: null,\r\n            contentTemplate: null,\r\n            openOnFieldClick: false,\r\n            showDropDownButton: true,\r\n            popupPosition: this._getDefaultPopupPosition(),\r\n            onPopupInitialized: null,\r\n            applyButtonText: messageLocalization.format(\"OK\"),\r\n            cancelButtonText: messageLocalization.format(\"Cancel\"),\r\n            buttonsLocation: \"default\",\r\n            showPopupTitle: false\r\n        })\r\n    },\r\n    _getDefaultPopupPosition: function() {\r\n        var position = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        return {\r\n            offset: {\r\n                h: 0,\r\n                v: -1\r\n            },\r\n            my: position + \" top\",\r\n            at: position + \" bottom\",\r\n            collision: \"flip flip\"\r\n        }\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function(_device) {\r\n                var isGeneric = \"generic\" === _device.platform,\r\n                    isWin10 = \"win\" === _device.platform && _device.version && 10 === _device.version[0];\r\n                return isGeneric || isWin10\r\n            },\r\n            options: {\r\n                popupPosition: {\r\n                    offset: {\r\n                        v: 0\r\n                    }\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _inputWrapper: function() {\r\n        return this.$element().find(\".\" + DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._initVisibilityActions();\r\n        this._initPopupInitializedAction()\r\n    },\r\n    _initVisibilityActions: function() {\r\n        this._openAction = this._createActionByOption(\"onOpened\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this._closeAction = this._createActionByOption(\"onClosed\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _initPopupInitializedAction: function() {\r\n        this._popupInitializedAction = this._createActionByOption(\"onPopupInitialized\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\", \"designMode\"]\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_EDITOR_CLASS);\r\n        this.setAria(\"role\", \"combobox\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._renderOpenHandler();\r\n        this._renderOpenedState()\r\n    },\r\n    _renderContentImpl: function() {\r\n        if (!this.option(\"deferRendering\")) {\r\n            this._createPopup()\r\n        }\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this.$element().wrapInner($(\"<div>\").addClass(DROP_DOWN_EDITOR_INPUT_WRAPPER_CLASS));\r\n        this._$container = this.$element().children().eq(0);\r\n        this.setAria({\r\n            haspopup: \"true\",\r\n            autocomplete: \"list\"\r\n        })\r\n    },\r\n    _readOnlyPropValue: function() {\r\n        return !this.option(\"acceptCustomValue\") || this.callBase()\r\n    },\r\n    _cleanFocusState: function() {\r\n        this.callBase();\r\n        if (this.option(\"fieldTemplate\")) {\r\n            eventsEngine.off(this._input(), \"focusin focusout beforeactivate\")\r\n        }\r\n    },\r\n    _renderField: function() {\r\n        var fieldTemplate = this._getTemplateByOption(\"fieldTemplate\");\r\n        if (!(fieldTemplate && this.option(\"fieldTemplate\"))) {\r\n            return\r\n        }\r\n        this._renderTemplatedField(fieldTemplate, this._fieldRenderData())\r\n    },\r\n    _renderTemplatedField: function(fieldTemplate, data) {\r\n        var _this = this;\r\n        var isFocused = focused(this._input());\r\n        var $container = this._$container;\r\n        this._disposeKeyboardProcessor();\r\n        $container.empty();\r\n        this._$dropDownButton = null;\r\n        this._$clearButton = null;\r\n        fieldTemplate.render({\r\n            model: data,\r\n            container: domUtils.getPublicElement($container),\r\n            onRendered: function() {\r\n                if (!_this._input().length) {\r\n                    throw errors.Error(\"E1010\")\r\n                }\r\n                _this._refreshEvents();\r\n                _this._refreshValueChangeEvent();\r\n                _this._renderFocusState();\r\n                isFocused && eventsEngine.trigger(_this._input(), \"focus\")\r\n            }\r\n        })\r\n    },\r\n    _fieldRenderData: function() {\r\n        return this.option(\"value\")\r\n    },\r\n    _renderInputAddons: function() {\r\n        this._renderField();\r\n        this.callBase();\r\n        this._renderDropDownButton()\r\n    },\r\n    _renderDropDownButton: function() {\r\n        if (this._$dropDownButton) {\r\n            this._$dropDownButton.remove();\r\n            this._$dropDownButton = null\r\n        }\r\n        var showDropDownButton = this.option(\"showDropDownButton\");\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_BUTTON_VISIBLE, showDropDownButton);\r\n        if (!showDropDownButton) {\r\n            return\r\n        }\r\n        this._$dropDownButton = this._createDropDownButton();\r\n        this._attachDropDownButtonClickHandler()\r\n    },\r\n    _attachDropDownButtonClickHandler: function() {\r\n        if (this.option(\"showDropDownButton\") && !this.option(\"openOnFieldClick\")) {\r\n            this._$dropDownButton.dxButton(\"option\", \"onClick\", this._openHandler.bind(this))\r\n        }\r\n    },\r\n    _initTemplates: function() {\r\n        this.callBase();\r\n        this._defaultTemplates.dropDownButton = new FunctionTemplate(function(options) {\r\n            var $icon = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_ICON);\r\n            $(options.container).append($icon)\r\n        }, this)\r\n    },\r\n    _createDropDownButton: function() {\r\n        var $button = $(\"<div>\").addClass(DROP_DOWN_EDITOR_BUTTON_CLASS).prependTo(this._buttonsContainer());\r\n        this._createComponent($button, Button, {\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            activeStateEnabled: false,\r\n            disabled: this.option(\"readOnly\"),\r\n            useInkRipple: false,\r\n            template: this._getTemplateByOption(\"dropDownButtonTemplate\")\r\n        });\r\n        $button.removeClass(\"dx-button\");\r\n        eventsEngine.on($button, \"mousedown\", function(e) {\r\n            e.preventDefault()\r\n        });\r\n        return $button\r\n    },\r\n    _renderOpenHandler: function() {\r\n        var that = this,\r\n            $inputWrapper = that._inputWrapper(),\r\n            eventName = eventUtils.addNamespace(clickEvent.name, that.NAME),\r\n            openOnFieldClick = that.option(\"openOnFieldClick\");\r\n        eventsEngine.off($inputWrapper, eventName);\r\n        eventsEngine.on($inputWrapper, eventName, that._getInputClickHandler(openOnFieldClick));\r\n        that.$element().toggleClass(DROP_DOWN_EDITOR_FIELD_CLICKABLE, openOnFieldClick);\r\n        if (openOnFieldClick) {\r\n            that._openOnFieldClickAction = that._createAction(that._openHandler.bind(that))\r\n        }\r\n    },\r\n    _getInputClickHandler: function(openOnFieldClick) {\r\n        var that = this;\r\n        return openOnFieldClick ? function(e) {\r\n            that._executeOpenAction(e)\r\n        } : function(e) {\r\n            that._focusInput()\r\n        }\r\n    },\r\n    _openHandler: function() {\r\n        this._toggleOpenState()\r\n    },\r\n    _executeOpenAction: function(e) {\r\n        this._openOnFieldClickAction({\r\n            event: e\r\n        })\r\n    },\r\n    _keyboardEventBindingTarget: function() {\r\n        return this._input()\r\n    },\r\n    _focusInput: function() {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (this.option(\"focusStateEnabled\") && !focused(this._input())) {\r\n            eventsEngine.trigger(this._input(), \"focus\")\r\n        }\r\n        return true\r\n    },\r\n    _toggleOpenState: function(isVisible) {\r\n        if (!this._focusInput()) {\r\n            return\r\n        }\r\n        if (!this.option(\"readOnly\")) {\r\n            isVisible = arguments.length ? isVisible : !this.option(\"opened\");\r\n            this.option(\"opened\", isVisible)\r\n        }\r\n    },\r\n    _renderOpenedState: function() {\r\n        var opened = this.option(\"opened\");\r\n        if (opened) {\r\n            this._createPopup()\r\n        }\r\n        this.$element().toggleClass(DROP_DOWN_EDITOR_ACTIVE, opened);\r\n        this._setPopupOption(\"visible\", opened);\r\n        this.setAria({\r\n            expanded: opened,\r\n            owns: (opened || void 0) && this._popupContentId\r\n        })\r\n    },\r\n    _createPopup: function() {\r\n        if (this._$popup) {\r\n            return\r\n        }\r\n        this._$popup = $(\"<div>\").addClass(DROP_DOWN_EDITOR_OVERLAY).addClass(this.option(\"customOverlayCssClass\")).appendTo(this.$element());\r\n        this._renderPopup();\r\n        this._renderPopupContent()\r\n    },\r\n    _renderPopup: function() {\r\n        this._popup = this._createComponent(this._$popup, Popup, this._popupConfig());\r\n        this._popup.on({\r\n            showing: this._popupShowingHandler.bind(this),\r\n            shown: this._popupShownHandler.bind(this),\r\n            hiding: this._popupHidingHandler.bind(this),\r\n            hidden: this._popupHiddenHandler.bind(this)\r\n        });\r\n        this._popup.option(\"onContentReady\", this._contentReadyHandler.bind(this));\r\n        this._contentReadyHandler();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, this._popup.$content())\r\n    },\r\n    _contentReadyHandler: commonUtils.noop,\r\n    _popupConfig: function() {\r\n        return {\r\n            onInitialized: this._popupInitializedHandler(),\r\n            position: extend(this.option(\"popupPosition\"), {\r\n                of: this.$element()\r\n            }),\r\n            showTitle: this.option(\"showPopupTitle\"),\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            shading: false,\r\n            closeOnTargetScroll: true,\r\n            closeOnOutsideClick: this._closeOutsideDropDownHandler.bind(this),\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            deferRendering: false,\r\n            focusStateEnabled: false,\r\n            showCloseButton: false,\r\n            toolbarItems: this._getPopupToolbarItems(),\r\n            onPositioned: this._popupPositionedHandler.bind(this),\r\n            fullScreen: false\r\n        }\r\n    },\r\n    _popupInitializedHandler: function() {\r\n        if (!this.option(\"onPopupInitialized\")) {\r\n            return\r\n        }\r\n        return function(e) {\r\n            this._popupInitializedAction({\r\n                popup: e.component\r\n            })\r\n        }.bind(this)\r\n    },\r\n    _popupPositionedHandler: function(e) {\r\n        e.position && this._popup.overlayContent().toggleClass(DROP_DOWN_EDITOR_OVERLAY_FLIPPED, e.position.v.flip)\r\n    },\r\n    _popupShowingHandler: commonUtils.noop,\r\n    _popupHidingHandler: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    _popupShownHandler: function() {\r\n        this._openAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _popupHiddenHandler: function() {\r\n        this._closeAction();\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.dxOverlay(\"option\", \"position\", this._getValidationMessagePosition())\r\n        }\r\n    },\r\n    _getValidationMessagePosition: function() {\r\n        var positionRequest = \"below\";\r\n        if (this._popup && this._popup.option(\"visible\")) {\r\n            var myTop = positionUtils.setup(this.$element()).top,\r\n                popupTop = positionUtils.setup(this._popup.$content()).top;\r\n            positionRequest = myTop + this.option(\"popupPosition\").offset.v > popupTop ? \"below\" : \"above\"\r\n        }\r\n        return this.callBase(positionRequest)\r\n    },\r\n    _renderPopupContent: function() {\r\n        var contentTemplate = this._getTemplateByOption(\"contentTemplate\");\r\n        if (!(contentTemplate && this.option(\"contentTemplate\"))) {\r\n            return\r\n        }\r\n        var $popupContent = this._popup.$content(),\r\n            templateData = {\r\n                value: this._fieldRenderData(),\r\n                component: this\r\n            };\r\n        $popupContent.empty();\r\n        contentTemplate.render({\r\n            container: domUtils.getPublicElement($popupContent),\r\n            model: templateData\r\n        })\r\n    },\r\n    _closeOutsideDropDownHandler: function(e) {\r\n        var $target = $(e.target);\r\n        var isInputClicked = !!$target.closest(this.$element()).length;\r\n        var isDropDownButtonClicked = !!$target.closest(this._$dropDownButton).length;\r\n        var isOutsideClick = !isInputClicked && !isDropDownButtonClicked;\r\n        return isOutsideClick\r\n    },\r\n    _clean: function() {\r\n        delete this._$dropDownButton;\r\n        delete this._openOnFieldClickAction;\r\n        if (this._$popup) {\r\n            this._$popup.remove();\r\n            delete this._$popup;\r\n            delete this._popup\r\n        }\r\n        this.callBase()\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _validatedOpening: function() {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._toggleOpenState(true)\r\n        }\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        return \"useButtons\" === this.option(\"applyValueMode\") ? this._popupToolbarItemsConfig() : []\r\n    },\r\n    _getFirstPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-done.dx-button\")\r\n    },\r\n    _getLastPopupElement: function() {\r\n        return this._popup._wrapper().find(\".dx-popup-cancel.dx-button\")\r\n    },\r\n    _popupElementTabHandler: function(e) {\r\n        var $element = $(e.currentTarget);\r\n        if (e.shiftKey && $element.is(this._getFirstPopupElement()) || !e.shiftKey && $element.is(this._getLastPopupElement())) {\r\n            eventsEngine.trigger(this._input(), \"focus\");\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    _popupElementEscHandler: function() {\r\n        eventsEngine.trigger(this._input(), \"focus\");\r\n        this.close()\r\n    },\r\n    _popupButtonInitializedHandler: function(e) {\r\n        e.component.registerKeyHandler(\"tab\", this._popupElementTabHandler.bind(this));\r\n        e.component.registerKeyHandler(\"escape\", this._popupElementEscHandler.bind(this))\r\n    },\r\n    _popupToolbarItemsConfig: function() {\r\n        var buttonsConfig = [{\r\n            shortcut: \"done\",\r\n            options: {\r\n                onClick: this._applyButtonHandler.bind(this),\r\n                text: this.option(\"applyButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }, {\r\n            shortcut: \"cancel\",\r\n            options: {\r\n                onClick: this._cancelButtonHandler.bind(this),\r\n                text: this.option(\"cancelButtonText\"),\r\n                onInitialized: this._popupButtonInitializedHandler.bind(this)\r\n            }\r\n        }];\r\n        return this._applyButtonsLocation(buttonsConfig)\r\n    },\r\n    _applyButtonsLocation: function(buttonsConfig) {\r\n        var buttonsLocation = this.option(\"buttonsLocation\"),\r\n            resultConfig = buttonsConfig;\r\n        if (\"default\" !== buttonsLocation) {\r\n            var position = commonUtils.splitPair(buttonsLocation);\r\n            each(resultConfig, function(_, element) {\r\n                extend(element, {\r\n                    toolbar: position[0],\r\n                    location: position[1]\r\n                })\r\n            })\r\n        }\r\n        return resultConfig\r\n    },\r\n    _applyButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _cancelButtonHandler: function() {\r\n        this.close();\r\n        this.option(\"focusStateEnabled\") && this.focus()\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.callBase();\r\n        this._$dropDownButton && this._$dropDownButton.dxButton(\"option\", \"disabled\", this.option(\"readOnly\"))\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"opened\":\r\n                this._renderOpenedState();\r\n                break;\r\n            case \"onOpened\":\r\n            case \"onClosed\":\r\n                this._initVisibilityActions();\r\n                break;\r\n            case \"onPopupInitialized\":\r\n                this._initPopupInitializedAction();\r\n                break;\r\n            case \"fieldTemplate\":\r\n                if (isDefined(args.value)) {\r\n                    this._renderInputAddons()\r\n                } else {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"showDropDownButton\":\r\n            case \"contentTemplate\":\r\n            case \"acceptCustomValue\":\r\n            case \"openOnFieldClick\":\r\n                this._invalidate();\r\n                break;\r\n            case \"dropDownButtonTemplate\":\r\n                this._renderDropDownButton();\r\n                break;\r\n            case \"popupPosition\":\r\n            case \"deferRendering\":\r\n                break;\r\n            case \"applyValueMode\":\r\n            case \"applyButtonText\":\r\n            case \"cancelButtonText\":\r\n            case \"buttonsLocation\":\r\n                this._setPopupOption(\"toolbarItems\", this._getPopupToolbarItems());\r\n                break;\r\n            case \"showPopupTitle\":\r\n                this._setPopupOption(\"showTitle\", args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    open: function() {\r\n        this.option(\"opened\", true)\r\n    },\r\n    close: function() {\r\n        this.option(\"opened\", false)\r\n    },\r\n    field: function() {\r\n        return getPublicElement(this._input())\r\n    },\r\n    content: function() {\r\n        return this._popup ? this._popup.content() : null\r\n    }\r\n}).include(AsyncTemplateMixin);\r\nregisterComponent(\"dxDropDownEditor\", DropDownEditor);\r\nmodule.exports = DropDownEditor;\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/drop_down_editor/ui.drop_down_editor.js\n// module id = 642\n// module chunks = 1 4 5 6 10 11","/**\r\n * DevExtreme (ui/number_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./number_box/number_box\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box.js\n// module id = 645\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (ui/shared/async_template_mixin.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = {\r\n    _waitAsyncTemplates: function(callback) {\r\n        if (this._options.templatesRenderAsynchronously) {\r\n            this._asyncTemplatesTimers = this._asyncTemplatesTimers || [];\r\n            var timer = setTimeout(function() {\r\n                callback.call(this);\r\n                clearTimeout(timer)\r\n            }.bind(this));\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback.call(this)\r\n        }\r\n    },\r\n    _cleanAsyncTemplatesTimer: function() {\r\n        var timers = this._asyncTemplatesTimers || [];\r\n        for (var i = 0; i < timers.length; i++) {\r\n            clearTimeout(timers[i])\r\n        }\r\n        delete this._asyncTemplatesTimers\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/shared/async_template_mixin.js\n// module id = 650\n// module chunks = 1 4 5 6 10 11","/**\r\n * DevExtreme (ui/number_box/number_box.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar registerComponent = require(\"../../core/component_registrator\"),\r\n    NumberBoxMask = require(\"./number_box.mask\");\r\nregisterComponent(\"dxNumberBox\", NumberBoxMask);\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.js\n// module id = 655\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (ui/number_box/number_box.mask.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar eventsEngine = require(\"../../events/core/events_engine\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    isNumeric = require(\"../../core/utils/type\").isNumeric,\r\n    browser = require(\"../../core/utils/browser\"),\r\n    devices = require(\"../../core/devices\"),\r\n    fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    inRange = require(\"../../core/utils/math\").inRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\"),\r\n    maskCaret = require(\"./number_box.caret\"),\r\n    getLDMLFormat = require(\"../../localization/ldml/number\").getFormat,\r\n    NumberBoxBase = require(\"./number_box.base\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    typeUtils = require(\"../../core/utils/type\");\r\nvar NUMBER_FORMATTER_NAMESPACE = \"dxNumberFormatter\",\r\n    MOVE_FORWARD = 1,\r\n    MOVE_BACKWARD = -1,\r\n    MINUS = \"-\",\r\n    NUMPUD_MINUS_KEY_IE = \"Subtract\",\r\n    INPUT_EVENT = \"input\";\r\nvar ensureDefined = function(value, defaultValue) {\r\n    return void 0 === value ? defaultValue : value\r\n};\r\nvar NumberBoxMask = NumberBoxBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            useMaskBehavior: true,\r\n            format: null\r\n        })\r\n    },\r\n    _isDeleteKey: function(key) {\r\n        return \"Delete\" === key || \"Del\" === key\r\n    },\r\n    _supportedKeys: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n        var that = this;\r\n        return extend(this.callBase(), {\r\n            minus: that._revertSign.bind(that),\r\n            del: that._removeHandler.bind(that),\r\n            backspace: that._removeHandler.bind(that),\r\n            leftArrow: that._arrowHandler.bind(that, MOVE_BACKWARD),\r\n            rightArrow: that._arrowHandler.bind(that, MOVE_FORWARD),\r\n            home: that._moveCaretToBoundary.bind(that, MOVE_FORWARD),\r\n            enter: that._updateFormattedValue.bind(that),\r\n            end: that._moveCaretToBoundary.bind(that, MOVE_BACKWARD)\r\n        })\r\n    },\r\n    _focusInHandler: function(e) {\r\n        this.callBase(e);\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            return\r\n        }\r\n        if (browser.msie) {\r\n            clearTimeout(this._ieCaretTimeout);\r\n            this._ieCaretTimeout = setTimeout(this._moveCaretToBoundary.bind(this, MOVE_BACKWARD, e))\r\n        } else {\r\n            this._moveCaretToBoundary(MOVE_BACKWARD, e)\r\n        }\r\n    },\r\n    _focusOutHandler: function(e) {\r\n        this._focusOutOccurs = true;\r\n        if (this._useMaskBehavior()) {\r\n            this._updateFormattedValue()\r\n        }\r\n        this.callBase(e);\r\n        this._focusOutOccurs = false\r\n    },\r\n    _hasValueBeenChanged: function(inputValue) {\r\n        var format = this._getFormatPattern(),\r\n            value = this.option(\"value\"),\r\n            formatted = this._format(value, format) || \"\";\r\n        return formatted !== inputValue\r\n    },\r\n    _updateFormattedValue: function() {\r\n        var inputValue = this._getInputVal();\r\n        if (this._hasValueBeenChanged(inputValue)) {\r\n            this._parsedValue = this._tryParse(inputValue, this._caret());\r\n            this._adjustParsedValue();\r\n            this._setTextByParsedValue();\r\n            if (this._parsedValue !== this.option(\"value\")) {\r\n                eventsEngine.trigger(this._input(), \"change\")\r\n            }\r\n        }\r\n    },\r\n    _arrowHandler: function(step, e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var text = this._getInputVal(),\r\n            format = this._getFormatPattern(),\r\n            nextCaret = maskCaret.getCaretWithOffset(this._caret(), step);\r\n        if (!maskCaret.isCaretInBoundaries(nextCaret, text, format)) {\r\n            nextCaret = step === MOVE_FORWARD ? nextCaret.end : nextCaret.start;\r\n            e.preventDefault();\r\n            this._caret(maskCaret.getCaretInBoundaries(nextCaret, text, format))\r\n        }\r\n    },\r\n    _moveCaretToBoundary: function(direction, e) {\r\n        if (!this._useMaskBehavior() || e.shiftKey) {\r\n            return\r\n        }\r\n        var boundaries = maskCaret.getCaretBoundaries(this._getInputVal(), this._getFormatPattern()),\r\n            newCaret = maskCaret.getCaretWithOffset(direction === MOVE_FORWARD ? boundaries.start : boundaries.end, 0);\r\n        this._caret(newCaret);\r\n        e && e.preventDefault()\r\n    },\r\n    _shouldMoveCaret: function(text, caret) {\r\n        var decimalSeparator = number.getDecimalSeparator(),\r\n            isDecimalSeparatorNext = text.charAt(caret.end) === decimalSeparator,\r\n            isZeroNext = \"0\" === text.charAt(caret.end),\r\n            moveToFloat = this._lastKey === decimalSeparator && isDecimalSeparatorNext,\r\n            zeroToZeroReplace = \"0\" === this._lastKey && isZeroNext;\r\n        return moveToFloat || zeroToZeroReplace\r\n    },\r\n    _getInputVal: function() {\r\n        return number.convertDigits(this._input().val(), true)\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        this._lastKey = number.convertDigits(e.originalEvent.key, true);\r\n        if (!this._shouldHandleKey(e.originalEvent)) {\r\n            return this.callBase(e)\r\n        }\r\n        var text = this._getInputVal(),\r\n            caret = this._caret();\r\n        var enteredChar = this._lastKey === MINUS ? \"\" : this._lastKey,\r\n            newValue = this._tryParse(text, caret, enteredChar);\r\n        if (void 0 === newValue) {\r\n            if (this._lastKey !== MINUS) {\r\n                e.originalEvent.preventDefault()\r\n            }\r\n            if (this._shouldMoveCaret(text, caret)) {\r\n                this._moveCaret(1)\r\n            }\r\n        } else {\r\n            this._parsedValue = newValue\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _removeHandler: function(e) {\r\n        var caret = this._caret(),\r\n            text = this._getInputVal(),\r\n            start = caret.start,\r\n            end = caret.end;\r\n        this._lastKey = e.key;\r\n        if (caret.start === caret.end) {\r\n            this._isDeleteKey(e.key) ? end++ : start--\r\n        }\r\n        var char = text.slice(start, end);\r\n        if (this._isStub(char)) {\r\n            this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n            if (this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0)) {\r\n                this._revertSign(e);\r\n                this._setTextByParsedValue()\r\n            }\r\n            e.preventDefault();\r\n            return\r\n        }\r\n        var decimalSeparator = number.getDecimalSeparator();\r\n        if (char === decimalSeparator) {\r\n            var decimalSeparatorIndex = text.indexOf(decimalSeparator);\r\n            if (this._isNonStubAfter(decimalSeparatorIndex + 1)) {\r\n                this._moveCaret(this._isDeleteKey(e.key) ? 1 : -1);\r\n                e.preventDefault()\r\n            }\r\n            return\r\n        }\r\n        if (end - start < text.length) {\r\n            var editedText = this._replaceSelectedText(text, {\r\n                    start: start,\r\n                    end: end\r\n                }, \"\"),\r\n                noDigits = editedText.search(/[0-9]/) < 0;\r\n            if (noDigits && this._isValueInRange(0)) {\r\n                this._parsedValue = this._parsedValue < 0 || 1 / this._parsedValue === -(1 / 0) ? -0 : 0;\r\n                return\r\n            }\r\n        }\r\n        var valueAfterRemoving = this._tryParse(text, {\r\n            start: start,\r\n            end: end\r\n        }, \"\");\r\n        if (void 0 === valueAfterRemoving) {\r\n            e.preventDefault()\r\n        } else {\r\n            this._parsedValue = valueAfterRemoving\r\n        }\r\n    },\r\n    _isPercentFormat: function() {\r\n        var format = this._getFormatPattern(),\r\n            noEscapedFormat = format.replace(/'[^']+'/g, \"\");\r\n        return noEscapedFormat.indexOf(\"%\") !== -1\r\n    },\r\n    _parse: function(text, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomParser = typeUtils.isFunction(formatOption.formatter),\r\n            parser = isCustomParser ? formatOption.parser : number.parse;\r\n        return parser(text, format)\r\n    },\r\n    _format: function(value, format) {\r\n        var formatOption = this.option(\"format\"),\r\n            isCustomFormatter = typeUtils.isFunction(formatOption.formatter),\r\n            formatter = isCustomFormatter ? formatOption.formatter : number.format;\r\n        return formatter(value, format)\r\n    },\r\n    _getFormatPattern: function() {\r\n        var format = this.option(\"format\"),\r\n            isLDMLPattern = \"string\" === typeof format && (format.indexOf(\"0\") >= 0 || format.indexOf(\"#\") >= 0);\r\n        if (isLDMLPattern) {\r\n            return format\r\n        } else {\r\n            return getLDMLFormat(function(value) {\r\n                return this._format(value, format)\r\n            }.bind(this))\r\n        }\r\n    },\r\n    _getFormatForSign: function(text) {\r\n        var format = this._getFormatPattern(),\r\n            signParts = format.split(\";\"),\r\n            sign = number.getSign(text, format);\r\n        signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n        return sign < 0 ? signParts[1] : signParts[0]\r\n    },\r\n    _removeStubs: function(text, excludeComma) {\r\n        var format = this._getFormatForSign(text),\r\n            thousandsSeparator = number.getThousandsSeparator(),\r\n            stubs = format.replace(/[#0.,]/g, \"\"),\r\n            regExp = new RegExp(\"[-\" + escapeRegExp((excludeComma ? \"\" : thousandsSeparator) + stubs) + \"]\", \"g\");\r\n        return text.replace(regExp, \"\")\r\n    },\r\n    _truncateToPrecision: function(value, decimalSeparator, maxPrecision) {\r\n        if (typeUtils.isDefined(value)) {\r\n            var strValue = value.toString(),\r\n                decimalSeparatorIndex = strValue.indexOf(decimalSeparator);\r\n            if (strValue && decimalSeparatorIndex > -1) {\r\n                var parsedValue = parseFloat(strValue.substr(0, decimalSeparatorIndex + maxPrecision + 1));\r\n                return isNaN(parsedValue) ? value : parsedValue\r\n            }\r\n        }\r\n        return value\r\n    },\r\n    _tryParse: function(text, selection, char) {\r\n        var editedText = this._replaceSelectedText(text, selection, char),\r\n            format = this._getFormatPattern(),\r\n            isTextSelected = selection.start !== selection.end,\r\n            parsed = this._parse(editedText, format),\r\n            maxPrecision = this._getPrecisionLimits(format, editedText).max,\r\n            isValueChanged = parsed !== this._parsedValue,\r\n            decimalSeparator = number.getDecimalSeparator();\r\n        var isDecimalPointRestricted = char === decimalSeparator && 0 === maxPrecision,\r\n            isUselessCharRestricted = !isTextSelected && !isValueChanged && char !== MINUS && !this._isValueIncomplete(editedText) && this._isStub(char);\r\n        if (isDecimalPointRestricted || isUselessCharRestricted) {\r\n            return\r\n        }\r\n        if (\"\" === editedText) {\r\n            parsed = 0\r\n        }\r\n        if (isNaN(parsed)) {\r\n            return\r\n        }\r\n        var value = null === parsed ? this._parsedValue : parsed;\r\n        parsed = this._truncateToPrecision(value, decimalSeparator, maxPrecision);\r\n        return this._isPercentFormat() ? parsed && parsed / 100 : parsed\r\n    },\r\n    _isValueIncomplete: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        var caret = this._caret(),\r\n            point = number.getDecimalSeparator(),\r\n            pointIndex = text.indexOf(point),\r\n            isCaretOnFloat = pointIndex >= 0 && pointIndex < caret.start,\r\n            textParts = this._removeStubs(text, true).split(point);\r\n        if (!isCaretOnFloat || 2 !== textParts.length) {\r\n            return false\r\n        }\r\n        var floatLength = textParts[1].length,\r\n            precision = this._getPrecisionLimits(this._getFormatPattern(), text),\r\n            isPrecisionInRange = inRange(floatLength, precision.min, precision.max),\r\n            endsWithZero = \"0\" === textParts[1].charAt(floatLength - 1);\r\n        return isPrecisionInRange && (endsWithZero || !floatLength)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        var min = ensureDefined(this.option(\"min\"), -(1 / 0)),\r\n            max = ensureDefined(this.option(\"max\"), 1 / 0);\r\n        return inRange(value, min, max)\r\n    },\r\n    _setInputText: function(text) {\r\n        var newCaret = maskCaret.getCaretAfterFormat(this._getInputVal(), text, this._caret(), this._getFormatPattern()),\r\n            newValue = number.convertDigits(text);\r\n        this._input().val(newValue);\r\n        this._toggleEmptinessEventHandler();\r\n        this._formattedValue = text;\r\n        if (!this._focusOutOccurs) {\r\n            this._caret(newCaret)\r\n        }\r\n    },\r\n    _useMaskBehavior: function() {\r\n        return !!this.option(\"format\") && this.option(\"useMaskBehavior\")\r\n    },\r\n    _renderInputType: function() {\r\n        var isNumberType = \"number\" === this.option(\"mode\"),\r\n            isMobileDevice = \"desktop\" !== devices.real().deviceType;\r\n        if (this._useMaskBehavior() && isNumberType) {\r\n            this._setInputType(isMobileDevice ? \"tel\" : \"text\")\r\n        } else {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _isChar: function(str) {\r\n        return \"string\" === typeof str && 1 === str.length\r\n    },\r\n    _moveCaret: function(offset) {\r\n        if (!offset) {\r\n            return\r\n        }\r\n        var newCaret = maskCaret.getCaretWithOffset(this._caret(), offset),\r\n            adjustedCaret = maskCaret.getCaretInBoundaries(newCaret, this._getInputVal(), this._getFormatPattern());\r\n        this._caret(adjustedCaret)\r\n    },\r\n    _shouldHandleKey: function(e) {\r\n        var isSpecialChar = e.ctrlKey || e.shiftKey || e.altKey || !this._isChar(e.key),\r\n            isMinusKey = e.key === MINUS,\r\n            useMaskBehavior = this._useMaskBehavior();\r\n        return useMaskBehavior && !isSpecialChar && !isMinusKey\r\n    },\r\n    _renderInput: function() {\r\n        this.callBase();\r\n        this._renderFormatter()\r\n    },\r\n    _renderFormatter: function() {\r\n        this._clearCache();\r\n        this._detachFormatterEvents();\r\n        if (this._useMaskBehavior()) {\r\n            this._attachFormatterEvents()\r\n        }\r\n    },\r\n    _detachFormatterEvents: function() {\r\n        eventsEngine.off(this._input(), \".\" + NUMBER_FORMATTER_NAMESPACE)\r\n    },\r\n    _attachFormatterEvents: function() {\r\n        var $input = this._input();\r\n        eventsEngine.on($input, eventUtils.addNamespace(INPUT_EVENT, NUMBER_FORMATTER_NAMESPACE), this._formatValue.bind(this));\r\n        eventsEngine.on($input, eventUtils.addNamespace(\"dxclick\", NUMBER_FORMATTER_NAMESPACE), function() {\r\n            this._caret(maskCaret.getCaretInBoundaries(this._caret(), this._getInputVal(), this._getFormatPattern()))\r\n        }.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase()\r\n        }\r\n    },\r\n    _isNonStubAfter: function(index, text) {\r\n        text = (text || this._getInputVal()).slice(index);\r\n        return text && !this._isStub(text, true)\r\n    },\r\n    _isStub: function(str, isString) {\r\n        var escapedDecimalSeparator = escapeRegExp(number.getDecimalSeparator()),\r\n            regExpString = \"^[^0-9\" + escapedDecimalSeparator + \"]+$\",\r\n            stubRegExp = new RegExp(regExpString, \"g\");\r\n        return stubRegExp.test(str) && (isString || this._isChar(str))\r\n    },\r\n    _parseValue: function(text) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(text)\r\n        }\r\n        return this._parsedValue\r\n    },\r\n    _getPrecisionLimits: function(text) {\r\n        var currentFormat = this._getFormatForSign(text),\r\n            floatPart = (currentFormat.split(\".\")[1] || \"\").replace(/[^#0]/g, \"\"),\r\n            minPrecision = floatPart.replace(/^(0*)#*/, \"$1\").length,\r\n            maxPrecision = floatPart.length;\r\n        return {\r\n            min: minPrecision,\r\n            max: maxPrecision\r\n        }\r\n    },\r\n    _revertSign: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var caret = this._caret();\r\n        if (caret.start !== caret.end) {\r\n            if (e.key === MINUS || e.key === NUMPUD_MINUS_KEY_IE) {\r\n                this._applyRevertedSign(e, caret, true);\r\n                return\r\n            } else {\r\n                this._caret(maskCaret.getCaretInBoundaries(0, this._getInputVal(), this._getFormatPattern()))\r\n            }\r\n        }\r\n        this._applyRevertedSign(e, caret)\r\n    },\r\n    _applyRevertedSign: function(e, caret, preserveSelectedText) {\r\n        var newValue = -1 * ensureDefined(this._parsedValue, null);\r\n        if (this._isValueInRange(newValue)) {\r\n            this._parsedValue = newValue;\r\n            if (preserveSelectedText) {\r\n                var format = this._getFormatPattern(),\r\n                    previousText = this._getInputVal();\r\n                this._setTextByParsedValue();\r\n                e.preventDefault();\r\n                var currentText = this._getInputVal(),\r\n                    offset = maskCaret.getCaretOffset(previousText, currentText, format);\r\n                caret = maskCaret.getCaretWithOffset(caret, offset);\r\n                var caretInBoundaries = maskCaret.getCaretInBoundaries(caret, currentText, format);\r\n                if (browser.msie) {\r\n                    clearTimeout(this._ieCaretTimeout);\r\n                    this._ieCaretTimeout = setTimeout(this._caret.bind(this, caretInBoundaries))\r\n                } else {\r\n                    this._caret(caretInBoundaries)\r\n                }\r\n            }\r\n            if (e.key === NUMPUD_MINUS_KEY_IE) {\r\n                eventsEngine.trigger(this._input(), INPUT_EVENT)\r\n            }\r\n        }\r\n    },\r\n    _removeMinusFromText: function(text, caret) {\r\n        var isMinusPressed = this._lastKey === MINUS && text.charAt(caret.start - 1) === MINUS;\r\n        return isMinusPressed ? this._replaceSelectedText(text, {\r\n            start: caret.start - 1,\r\n            end: caret.start\r\n        }, \"\") : text\r\n    },\r\n    _setTextByParsedValue: function() {\r\n        var format = this._getFormatPattern(),\r\n            parsed = this._parseValue(),\r\n            formatted = this._format(parsed, format) || \"\";\r\n        this._setInputText(formatted)\r\n    },\r\n    _formatValue: function() {\r\n        var text = this._getInputVal(),\r\n            caret = this._caret(),\r\n            textWithoutMinus = this._removeMinusFromText(text, caret),\r\n            wasMinusRemoved = textWithoutMinus !== text;\r\n        text = textWithoutMinus;\r\n        if (this._isValueIncomplete(textWithoutMinus)) {\r\n            this._formattedValue = text;\r\n            if (wasMinusRemoved) {\r\n                this._setTextByParsedValue()\r\n            }\r\n            return\r\n        }\r\n        var textWasChanged = this._formattedValue !== text;\r\n        if (textWasChanged) {\r\n            var value = this._tryParse(text, caret, \"\");\r\n            if (typeUtils.isDefined(value)) {\r\n                this._parsedValue = value\r\n            }\r\n        }\r\n        this._setTextByParsedValue()\r\n    },\r\n    _renderDisplayText: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._toggleEmptinessEventHandler()\r\n        } else {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _renderValue: function() {\r\n        if (this._useMaskBehavior()) {\r\n            this._parsedValue = this.option(\"value\");\r\n            this._setTextByParsedValue()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _adjustParsedValue: function() {\r\n        if (!this._useMaskBehavior()) {\r\n            return\r\n        }\r\n        var clearedText = this._removeStubs(this._getInputVal()),\r\n            parsedValue = clearedText ? this._parseValue() : null;\r\n        if (!isNumeric(parsedValue)) {\r\n            this._parsedValue = parsedValue;\r\n            return\r\n        }\r\n        this._parsedValue = fitIntoRange(parsedValue, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        if (!this._useMaskBehavior()) {\r\n            return this.callBase(e)\r\n        }\r\n        this._saveValueChangeEvent(e);\r\n        this._lastKey = null;\r\n        this._adjustParsedValue();\r\n        this.option(\"value\", this._parsedValue)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"format\":\r\n            case \"useMaskBehavior\":\r\n                this._renderFormatter();\r\n                this._renderValue();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._adjustParsedValue();\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _optionValuesEqual: function(name, oldValue, newValue) {\r\n        if (\"value\" === name && 0 === oldValue && 0 === newValue) {\r\n            return 1 / oldValue === 1 / newValue\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _clearCache: function() {\r\n        delete this._formattedValue;\r\n        delete this._lastKey;\r\n        delete this._parsedValue;\r\n        delete this._focusOutOccurs;\r\n        clearTimeout(this._ieCaretTimeout);\r\n        delete this._ieCaretTimeout\r\n    },\r\n    _clean: function() {\r\n        this._clearCache();\r\n        this.callBase()\r\n    }\r\n});\r\nmodule.exports = NumberBoxMask;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.mask.js\n// module id = 656\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (ui/number_box/number_box.caret.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar fitIntoRange = require(\"../../core/utils/math\").fitIntoRange,\r\n    escapeRegExp = require(\"../../core/utils/common\").escapeRegExp,\r\n    number = require(\"../../localization/number\");\r\nvar getCaretBoundaries = function(text, format) {\r\n    var signParts = format.split(\";\");\r\n    var sign = number.getSign(text, format);\r\n    signParts[1] = signParts[1] || \"-\" + signParts[0];\r\n    format = signParts[sign < 0 ? 1 : 0];\r\n    var mockEscapedStubs = function(str) {\r\n        return str.replace(/'([^']*)'/g, function(str) {\r\n            return str.split(\"\").map(function() {\r\n                return \" \"\r\n            }).join(\"\").substr(2)\r\n        })\r\n    };\r\n    format = mockEscapedStubs(format);\r\n    var prefixStubLength = /^[^#0\\.,]*/.exec(format)[0].length;\r\n    var postfixStubLength = /[^#0\\.,]*$/.exec(format)[0].length;\r\n    return {\r\n        start: prefixStubLength,\r\n        end: text.length - postfixStubLength\r\n    }\r\n};\r\nvar _getDigitCountBeforeIndex = function(index, text) {\r\n    var decimalSeparator = number.getDecimalSeparator(),\r\n        regExp = new RegExp(\"[^0-9\" + escapeRegExp(decimalSeparator) + \"]\", \"g\"),\r\n        textBeforePosition = text.slice(0, index);\r\n    return textBeforePosition.replace(regExp, \"\").length\r\n};\r\nvar _reverseText = function(text) {\r\n    return text.split(\"\").reverse().join(\"\")\r\n};\r\nvar _getDigitPositionByIndex = function(digitIndex, text) {\r\n    if (!digitIndex) {\r\n        return -1\r\n    }\r\n    var regExp = /[0-9]/g,\r\n        counter = 1,\r\n        index = null,\r\n        result = regExp.exec(text);\r\n    while (result) {\r\n        index = result.index;\r\n        if (!digitIndex || counter >= digitIndex) {\r\n            return index\r\n        }\r\n        counter++;\r\n        result = regExp.exec(text)\r\n    }\r\n    return null === index ? text.length : index\r\n};\r\nvar getCaretWithOffset = function(caret, offset) {\r\n    if (void 0 === caret.start) {\r\n        caret = {\r\n            start: caret,\r\n            end: caret\r\n        }\r\n    }\r\n    return {\r\n        start: caret.start + offset,\r\n        end: caret.end + offset\r\n    }\r\n};\r\nvar getCaretAfterFormat = function(text, formatted, caret, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var point = number.getDecimalSeparator(),\r\n        pointPosition = text.indexOf(point),\r\n        newPointPosition = formatted.indexOf(point),\r\n        textParts = text.split(point),\r\n        formattedParts = formatted.split(point),\r\n        isCaretOnFloat = pointPosition !== -1 && caret.start > pointPosition;\r\n    if (isCaretOnFloat) {\r\n        var relativeIndex = caret.start - pointPosition - 1,\r\n            digitsBefore = _getDigitCountBeforeIndex(relativeIndex, textParts[1]),\r\n            newPosition = formattedParts[1] ? newPointPosition + 1 + _getDigitPositionByIndex(digitsBefore, formattedParts[1]) + 1 : formatted.length;\r\n        return getCaretInBoundaries(newPosition, formatted, format)\r\n    } else {\r\n        var positionFromEnd = textParts[0].length - caret.start,\r\n            digitsFromEnd = _getDigitCountBeforeIndex(positionFromEnd, _reverseText(textParts[0])),\r\n            newPositionFromEnd = _getDigitPositionByIndex(digitsFromEnd, _reverseText(formattedParts[0])),\r\n            newPositionFromBegin = formattedParts[0].length - (newPositionFromEnd + 1);\r\n        return getCaretInBoundaries(newPositionFromBegin, formatted, format)\r\n    }\r\n};\r\nvar isCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretInBoundaries(caret, text, format);\r\n    return caret.start >= boundaries.start && caret.end <= boundaries.end\r\n};\r\nvar getCaretInBoundaries = function(caret, text, format) {\r\n    caret = getCaretWithOffset(caret, 0);\r\n    var boundaries = getCaretBoundaries(text, format),\r\n        adjustedCaret = {\r\n            start: fitIntoRange(caret.start, boundaries.start, boundaries.end),\r\n            end: fitIntoRange(caret.end, boundaries.start, boundaries.end)\r\n        };\r\n    return adjustedCaret\r\n};\r\nvar getCaretOffset = function(previousText, newText, format) {\r\n    var previousBoundaries = getCaretBoundaries(previousText, format),\r\n        newBoundaries = getCaretBoundaries(newText, format);\r\n    return newBoundaries.start - previousBoundaries.start\r\n};\r\nexports.getCaretBoundaries = getCaretBoundaries;\r\nexports.isCaretInBoundaries = isCaretInBoundaries;\r\nexports.getCaretWithOffset = getCaretWithOffset;\r\nexports.getCaretInBoundaries = getCaretInBoundaries;\r\nexports.getCaretAfterFormat = getCaretAfterFormat;\r\nexports.getCaretOffset = getCaretOffset;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.caret.js\n// module id = 657\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (ui/number_box/number_box.base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    mathUtils = require(\"../../core/utils/math\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    devices = require(\"../../core/devices\"),\r\n    TextEditor = require(\"../text_box/ui.text_editor\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    SpinButton = require(\"./number_box.spin\"),\r\n    messageLocalization = require(\"../../localization/message\");\r\nvar math = Math;\r\nvar WIDGET_CLASS = \"dx-numberbox\",\r\n    SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_CONTAINER_CLASS = \"dx-numberbox-spin-container\",\r\n    SPIN_TOUCH_FRIENDLY_CLASS = \"dx-numberbox-spin-touch-friendly\";\r\nvar FIREFOX_CONTROL_KEYS = [\"Tab\", \"Del\", \"Delete\", \"Backspace\", \"Left\", \"ArrowLeft\", \"Right\", \"ArrowRight\", \"Home\", \"End\", \"Enter\"];\r\nvar NumberBoxBase = TextEditor.inherit({\r\n    _supportedKeys: function() {\r\n        return extend(this.callBase(), {\r\n            upArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinUpChangeHandler(e)\r\n            },\r\n            downArrow: function(e) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this._spinDownChangeHandler(e)\r\n            },\r\n            enter: function() {}\r\n        })\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: 0,\r\n            min: void 0,\r\n            max: void 0,\r\n            step: 1,\r\n            showSpinButtons: false,\r\n            useLargeSpinButtons: true,\r\n            mode: \"text\",\r\n            invalidValueMessage: messageLocalization.format(\"dxNumberBox-invalidValueMessage\")\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return devices.real().generic && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                useLargeSpinButtons: false\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return \"generic\" !== devices.real().platform\r\n            },\r\n            options: {\r\n                mode: \"number\"\r\n            }\r\n        }])\r\n    },\r\n    _initMarkup: function() {\r\n        this._renderSubmitElement();\r\n        this.$element().addClass(WIDGET_CLASS);\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.option(\"isValid\") && this._validateValue(this.option(\"value\"));\r\n        this.setAria(\"role\", \"spinbutton\")\r\n    },\r\n    _renderSubmitElement: function() {\r\n        this._$submitElement = $(\"<input>\").attr(\"type\", \"hidden\").appendTo(this.$element());\r\n        this._setSubmitValue(this.option(\"value\"))\r\n    },\r\n    _setSubmitValue: function(value) {\r\n        this._$submitElement.val(commonUtils.applyServerDecimalSeparator(value))\r\n    },\r\n    _getSubmitElement: function() {\r\n        return this._$submitElement\r\n    },\r\n    _keyPressHandler: function(e) {\r\n        this.callBase(e);\r\n        var ch = e.key || String.fromCharCode(e.which),\r\n            validCharRegExp = /[\\d.,eE\\-+]|Subtract/,\r\n            isInputCharValid = validCharRegExp.test(ch);\r\n        if (!isInputCharValid) {\r\n            if (e.metaKey || e.ctrlKey || e.key && inArray(e.key, FIREFOX_CONTROL_KEYS) >= 0) {\r\n                return\r\n            }\r\n            e.preventDefault();\r\n            return false\r\n        }\r\n        this._keyPressed = true\r\n    },\r\n    _onMouseWheel: function(dxEvent) {\r\n        dxEvent.delta > 0 ? this._spinValueChange(1, dxEvent) : this._spinValueChange(-1, dxEvent)\r\n    },\r\n    _renderValue: function() {\r\n        var inputValue = this._input().val();\r\n        if (!inputValue.length || Number(inputValue) !== this.option(\"value\")) {\r\n            this._forceValueRender();\r\n            this._toggleEmptinessEventHandler()\r\n        }\r\n        var value = this.option(\"value\");\r\n        this._renderInputAddons();\r\n        this.setAria(\"valuenow\", value);\r\n        this.option(\"text\", this._input().val())\r\n    },\r\n    _renderValueEventName: function() {\r\n        return this.callBase() + \" keypress\"\r\n    },\r\n    _toggleDisabledState: function(value) {\r\n        if (this._$spinUp) {\r\n            SpinButton.getInstance(this._$spinUp).option(\"disabled\", value)\r\n        }\r\n        if (this._$spinDown) {\r\n            SpinButton.getInstance(this._$spinDown).option(\"disabled\", value)\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _forceValueRender: function() {\r\n        var value = this.option(\"value\"),\r\n            number = Number(value),\r\n            formattedValue = isNaN(number) ? \"\" : this._applyValueFormat(value);\r\n        this._renderDisplayText(formattedValue)\r\n    },\r\n    _applyValueFormat: function(value) {\r\n        return this.option(\"valueFormat\")(value)\r\n    },\r\n    _renderProps: function() {\r\n        this.callBase();\r\n        this._input().prop({\r\n            min: this.option(\"min\"),\r\n            max: this.option(\"max\"),\r\n            step: this.option(\"step\")\r\n        });\r\n        this.setAria({\r\n            valuemin: this.option(\"min\") || \"undefined\",\r\n            valuemax: this.option(\"max\") || \"undefined\"\r\n        })\r\n    },\r\n    _renderInputAddons: function() {\r\n        this.callBase();\r\n        this._renderSpinButtons()\r\n    },\r\n    _renderSpinButtons: function() {\r\n        var spinButtonsVisible = this.option(\"showSpinButtons\");\r\n        this.$element().toggleClass(SPIN_CLASS, spinButtonsVisible);\r\n        this._toggleTouchFriendlyClass();\r\n        if (!spinButtonsVisible) {\r\n            this._$spinContainer && this._$spinContainer.remove();\r\n            this._$spinContainer = null;\r\n            return\r\n        }\r\n        if (!this._$spinContainer) {\r\n            this._$spinContainer = this._createSpinButtons()\r\n        }\r\n        this._$spinContainer.prependTo(this._buttonsContainer())\r\n    },\r\n    _toggleTouchFriendlyClass: function() {\r\n        this.$element().toggleClass(SPIN_TOUCH_FRIENDLY_CLASS, this.option(\"showSpinButtons\") && this.option(\"useLargeSpinButtons\"))\r\n    },\r\n    _createSpinButtons: function() {\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME);\r\n        var pointerDownAction = this._createAction(this._spinButtonsPointerDownHandler.bind(this));\r\n        var $spinContainer = $(\"<div>\").addClass(SPIN_CONTAINER_CLASS);\r\n        eventsEngine.off($spinContainer, eventName);\r\n        eventsEngine.on($spinContainer, eventName, function(e) {\r\n            pointerDownAction({\r\n                event: e\r\n            })\r\n        });\r\n        this._$spinUp = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinUp, SpinButton, {\r\n            direction: \"up\",\r\n            onChange: this._spinUpChangeHandler.bind(this)\r\n        });\r\n        this._$spinDown = $(\"<div>\").appendTo($spinContainer);\r\n        this._createComponent(this._$spinDown, SpinButton, {\r\n            direction: \"down\",\r\n            onChange: this._spinDownChangeHandler.bind(this)\r\n        });\r\n        return $spinContainer\r\n    },\r\n    _spinButtonsPointerDownHandler: function() {\r\n        var $input = this._input();\r\n        if (!this.option(\"useLargeSpinButtons\") && domAdapter.getActiveElement() !== $input[0]) {\r\n            eventsEngine.trigger($input, \"focus\")\r\n        }\r\n    },\r\n    _spinUpChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(1, e.event || e)\r\n        }\r\n    },\r\n    _spinDownChangeHandler: function(e) {\r\n        if (!this.option(\"readOnly\")) {\r\n            this._spinValueChange(-1, e.event || e)\r\n        }\r\n    },\r\n    _spinValueChange: function(sign, dxEvent) {\r\n        var value = parseFloat(this._normalizeInputValue()) || 0,\r\n            step = parseFloat(this.option(\"step\"));\r\n        value = this._correctRounding(value, step * sign);\r\n        var min = this.option(\"min\"),\r\n            max = this.option(\"max\");\r\n        if (void 0 !== min) {\r\n            value = Math.max(min, value)\r\n        }\r\n        if (void 0 !== max) {\r\n            value = Math.min(max, value)\r\n        }\r\n        this._saveValueChangeEvent(dxEvent);\r\n        this.option(\"value\", value)\r\n    },\r\n    _correctRounding: function(value, step) {\r\n        var regex = /[,.](.*)/;\r\n        var isFloatValue = regex.test(value),\r\n            isFloatStep = regex.test(step);\r\n        if (isFloatValue || isFloatStep) {\r\n            var valueAccuracy = isFloatValue ? regex.exec(value)[0].length : 0,\r\n                stepAccuracy = isFloatStep ? regex.exec(step)[0].length : 0,\r\n                accuracy = math.max(valueAccuracy, stepAccuracy);\r\n            value = this._round(value + step, accuracy);\r\n            return value\r\n        }\r\n        return value + step\r\n    },\r\n    _round: function(value, precision) {\r\n        precision = precision || 0;\r\n        var multiplier = Math.pow(10, precision);\r\n        value *= multiplier;\r\n        value = Math.round(value) / multiplier;\r\n        return value\r\n    },\r\n    _renderValueChangeEvent: function() {\r\n        this.callBase();\r\n        eventsEngine.on(this._input(), \"focusout\", this._forceRefreshInputValue.bind(this))\r\n    },\r\n    _forceRefreshInputValue: function() {\r\n        if (\"number\" === this.option(\"mode\")) {\r\n            return\r\n        }\r\n        var $input = this._input(),\r\n            formattedValue = this._applyValueFormat(this.option(\"value\"));\r\n        $input.val(null);\r\n        $input.val(formattedValue)\r\n    },\r\n    _valueChangeEventHandler: function(e) {\r\n        var $input = this._input(),\r\n            inputValue = this._normalizeText(),\r\n            value = this._parseValue(inputValue),\r\n            valueHasDigits = \".\" !== inputValue && \"-\" !== inputValue;\r\n        if (this._isValueValid() && !this._validateValue(value)) {\r\n            $input.val(this._applyValueFormat(value));\r\n            return\r\n        }\r\n        if (valueHasDigits) {\r\n            this.callBase(e, isNaN(value) ? null : value)\r\n        }\r\n        this._applyValueBoundaries(inputValue, value);\r\n        this.validationRequest.fire({\r\n            value: value,\r\n            editor: this\r\n        })\r\n    },\r\n    _applyValueBoundaries: function(inputValue, parsedValue) {\r\n        var isValueIncomplete = this._isValueIncomplete(inputValue),\r\n            isValueCorrect = this._isValueInRange(inputValue);\r\n        if (!isValueIncomplete && !isValueCorrect && null !== parsedValue) {\r\n            if (Number(inputValue) !== parsedValue) {\r\n                this._input().val(this._applyValueFormat(parsedValue))\r\n            }\r\n        }\r\n    },\r\n    _replaceCommaWithPoint: function(value) {\r\n        return value.replace(\",\", \".\")\r\n    },\r\n    _inputIsInvalid: function() {\r\n        var isNumberMode = \"number\" === this.option(\"mode\");\r\n        var validityState = this._input().get(0).validity;\r\n        return isNumberMode && validityState && validityState.badInput\r\n    },\r\n    _renderDisplayText: function(text) {\r\n        if (this._inputIsInvalid()) {\r\n            return\r\n        }\r\n        this.callBase(text)\r\n    },\r\n    _isValueIncomplete: function(value) {\r\n        var incompleteRegex = /(^-$)|(^-?\\d*\\.$)|(\\d+e-?$)/i;\r\n        return incompleteRegex.test(value)\r\n    },\r\n    _isValueInRange: function(value) {\r\n        return mathUtils.inRange(value, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    _isNumber: function(value) {\r\n        return null !== this._parseValue(value)\r\n    },\r\n    _validateValue: function(value) {\r\n        var inputValue = this._normalizeText(),\r\n            isValueValid = this._isValueValid(),\r\n            isValid = true,\r\n            isNumber = this._isNumber(inputValue);\r\n        if (isNaN(Number(value))) {\r\n            isValid = false\r\n        }\r\n        if (!value && isValueValid) {\r\n            isValid = true\r\n        } else {\r\n            if (!isNumber && !isValueValid) {\r\n                isValid = false\r\n            }\r\n        }\r\n        this.option({\r\n            isValid: isValid,\r\n            validationError: isValid ? null : {\r\n                editorSpecific: true,\r\n                message: this.option(\"invalidValueMessage\")\r\n            }\r\n        });\r\n        return isValid\r\n    },\r\n    _normalizeInputValue: function() {\r\n        return this._parseValue(this._normalizeText())\r\n    },\r\n    _normalizeText: function() {\r\n        var value = this._input().val().trim();\r\n        return this._replaceCommaWithPoint(value)\r\n    },\r\n    _parseValue: function(value) {\r\n        var number = parseFloat(value);\r\n        if (isNaN(number)) {\r\n            return null\r\n        }\r\n        return mathUtils.fitIntoRange(number, this.option(\"min\"), this.option(\"max\"))\r\n    },\r\n    reset: function() {\r\n        this.option(\"value\", null)\r\n    },\r\n    _clean: function() {\r\n        delete this._$spinContainer;\r\n        delete this._$spinUp;\r\n        delete this._$spinDown;\r\n        this.callBase()\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"value\":\r\n                this._validateValue(args.value);\r\n                this._setSubmitValue(args.value);\r\n                this.callBase(args);\r\n                this._resumeValueChangeAction();\r\n                break;\r\n            case \"step\":\r\n                this._renderProps();\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                this._renderProps();\r\n                this.option(\"value\", this._parseValue(this.option(\"value\")));\r\n                break;\r\n            case \"showSpinButtons\":\r\n                this._renderInputAddons();\r\n                break;\r\n            case \"useLargeSpinButtons\":\r\n                this._toggleTouchFriendlyClass();\r\n                break;\r\n            case \"invalidValueMessage\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = NumberBoxBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.base.js\n// module id = 658\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (ui/number_box/number_box.spin.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    feedbackEvents = require(\"../../events/core/emitter.feedback\"),\r\n    holdEvent = require(\"../../events/hold\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar SPIN_CLASS = \"dx-numberbox-spin\",\r\n    SPIN_BUTTON_CLASS = \"dx-numberbox-spin-button\",\r\n    SPIN_HOLD_DELAY = 100,\r\n    NUMBER_BOX = \"dxNumberBox\",\r\n    POINTERUP_EVENT_NAME = eventUtils.addNamespace(pointerEvents.up, NUMBER_BOX),\r\n    POINTERCANCEL_EVENT_NAME = eventUtils.addNamespace(pointerEvents.cancel, NUMBER_BOX);\r\nvar SpinButton = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            direction: \"up\",\r\n            onChange: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true\r\n        })\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        var direction = SPIN_CLASS + \"-\" + this.option(\"direction\");\r\n        this.$element().addClass(SPIN_BUTTON_CLASS).addClass(direction);\r\n        this._spinIcon = $(\"<div>\").addClass(direction + \"-icon\").appendTo(this.$element())\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        var eventName = eventUtils.addNamespace(pointerEvents.down, this.NAME),\r\n            $element = this.$element();\r\n        eventsEngine.off($element, eventName);\r\n        eventsEngine.on($element, eventName, this._spinDownHandler.bind(this));\r\n        this._spinChangeHandler = this._createActionByOption(\"onChange\")\r\n    },\r\n    _spinDownHandler: function(e) {\r\n        e.preventDefault();\r\n        this._clearTimer();\r\n        eventsEngine.on(this.$element(), holdEvent.name, function() {\r\n            this._feedBackDeferred = new Deferred;\r\n            feedbackEvents.lock(this._feedBackDeferred);\r\n            this._spinChangeHandler({\r\n                event: e\r\n            });\r\n            this._holdTimer = setInterval(this._spinChangeHandler, SPIN_HOLD_DELAY, {\r\n                event: e\r\n            })\r\n        }.bind(this));\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.on(document, POINTERUP_EVENT_NAME, this._clearTimer.bind(this));\r\n        eventsEngine.on(document, POINTERCANCEL_EVENT_NAME, this._clearTimer.bind(this));\r\n        this._spinChangeHandler({\r\n            event: e\r\n        })\r\n    },\r\n    _dispose: function() {\r\n        this._clearTimer();\r\n        this.callBase()\r\n    },\r\n    _clearTimer: function() {\r\n        eventsEngine.off(this.$element(), holdEvent.name);\r\n        var document = domAdapter.getDocument();\r\n        eventsEngine.off(document, POINTERUP_EVENT_NAME);\r\n        eventsEngine.off(document, POINTERCANCEL_EVENT_NAME);\r\n        if (this._feedBackDeferred) {\r\n            this._feedBackDeferred.resolve()\r\n        }\r\n        if (this._holdTimer) {\r\n            clearInterval(this._holdTimer)\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onChange\":\r\n            case \"direction\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nmodule.exports = SpinButton;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/number_box/number_box.spin.js\n// module id = 659\n// module chunks = 1 4 5 6 9","/**\r\n * DevExtreme (color.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar standardColorNames = {\r\n    aliceblue: \"f0f8ff\",\r\n    antiquewhite: \"faebd7\",\r\n    aqua: \"00ffff\",\r\n    aquamarine: \"7fffd4\",\r\n    azure: \"f0ffff\",\r\n    beige: \"f5f5dc\",\r\n    bisque: \"ffe4c4\",\r\n    black: \"000000\",\r\n    blanchedalmond: \"ffebcd\",\r\n    blue: \"0000ff\",\r\n    blueviolet: \"8a2be2\",\r\n    brown: \"a52a2a\",\r\n    burlywood: \"deb887\",\r\n    cadetblue: \"5f9ea0\",\r\n    chartreuse: \"7fff00\",\r\n    chocolate: \"d2691e\",\r\n    coral: \"ff7f50\",\r\n    cornflowerblue: \"6495ed\",\r\n    cornsilk: \"fff8dc\",\r\n    crimson: \"dc143c\",\r\n    cyan: \"00ffff\",\r\n    darkblue: \"00008b\",\r\n    darkcyan: \"008b8b\",\r\n    darkgoldenrod: \"b8860b\",\r\n    darkgray: \"a9a9a9\",\r\n    darkgreen: \"006400\",\r\n    darkkhaki: \"bdb76b\",\r\n    darkmagenta: \"8b008b\",\r\n    darkolivegreen: \"556b2f\",\r\n    darkorange: \"ff8c00\",\r\n    darkorchid: \"9932cc\",\r\n    darkred: \"8b0000\",\r\n    darksalmon: \"e9967a\",\r\n    darkseagreen: \"8fbc8f\",\r\n    darkslateblue: \"483d8b\",\r\n    darkslategray: \"2f4f4f\",\r\n    darkturquoise: \"00ced1\",\r\n    darkviolet: \"9400d3\",\r\n    deeppink: \"ff1493\",\r\n    deepskyblue: \"00bfff\",\r\n    dimgray: \"696969\",\r\n    dodgerblue: \"1e90ff\",\r\n    feldspar: \"d19275\",\r\n    firebrick: \"b22222\",\r\n    floralwhite: \"fffaf0\",\r\n    forestgreen: \"228b22\",\r\n    fuchsia: \"ff00ff\",\r\n    gainsboro: \"dcdcdc\",\r\n    ghostwhite: \"f8f8ff\",\r\n    gold: \"ffd700\",\r\n    goldenrod: \"daa520\",\r\n    gray: \"808080\",\r\n    green: \"008000\",\r\n    greenyellow: \"adff2f\",\r\n    honeydew: \"f0fff0\",\r\n    hotpink: \"ff69b4\",\r\n    indianred: \"cd5c5c\",\r\n    indigo: \"4b0082\",\r\n    ivory: \"fffff0\",\r\n    khaki: \"f0e68c\",\r\n    lavender: \"e6e6fa\",\r\n    lavenderblush: \"fff0f5\",\r\n    lawngreen: \"7cfc00\",\r\n    lemonchiffon: \"fffacd\",\r\n    lightblue: \"add8e6\",\r\n    lightcoral: \"f08080\",\r\n    lightcyan: \"e0ffff\",\r\n    lightgoldenrodyellow: \"fafad2\",\r\n    lightgrey: \"d3d3d3\",\r\n    lightgreen: \"90ee90\",\r\n    lightpink: \"ffb6c1\",\r\n    lightsalmon: \"ffa07a\",\r\n    lightseagreen: \"20b2aa\",\r\n    lightskyblue: \"87cefa\",\r\n    lightslateblue: \"8470ff\",\r\n    lightslategray: \"778899\",\r\n    lightsteelblue: \"b0c4de\",\r\n    lightyellow: \"ffffe0\",\r\n    lime: \"00ff00\",\r\n    limegreen: \"32cd32\",\r\n    linen: \"faf0e6\",\r\n    magenta: \"ff00ff\",\r\n    maroon: \"800000\",\r\n    mediumaquamarine: \"66cdaa\",\r\n    mediumblue: \"0000cd\",\r\n    mediumorchid: \"ba55d3\",\r\n    mediumpurple: \"9370d8\",\r\n    mediumseagreen: \"3cb371\",\r\n    mediumslateblue: \"7b68ee\",\r\n    mediumspringgreen: \"00fa9a\",\r\n    mediumturquoise: \"48d1cc\",\r\n    mediumvioletred: \"c71585\",\r\n    midnightblue: \"191970\",\r\n    mintcream: \"f5fffa\",\r\n    mistyrose: \"ffe4e1\",\r\n    moccasin: \"ffe4b5\",\r\n    navajowhite: \"ffdead\",\r\n    navy: \"000080\",\r\n    oldlace: \"fdf5e6\",\r\n    olive: \"808000\",\r\n    olivedrab: \"6b8e23\",\r\n    orange: \"ffa500\",\r\n    orangered: \"ff4500\",\r\n    orchid: \"da70d6\",\r\n    palegoldenrod: \"eee8aa\",\r\n    palegreen: \"98fb98\",\r\n    paleturquoise: \"afeeee\",\r\n    palevioletred: \"d87093\",\r\n    papayawhip: \"ffefd5\",\r\n    peachpuff: \"ffdab9\",\r\n    peru: \"cd853f\",\r\n    pink: \"ffc0cb\",\r\n    plum: \"dda0dd\",\r\n    powderblue: \"b0e0e6\",\r\n    purple: \"800080\",\r\n    rebeccapurple: \"663399\",\r\n    red: \"ff0000\",\r\n    rosybrown: \"bc8f8f\",\r\n    royalblue: \"4169e1\",\r\n    saddlebrown: \"8b4513\",\r\n    salmon: \"fa8072\",\r\n    sandybrown: \"f4a460\",\r\n    seagreen: \"2e8b57\",\r\n    seashell: \"fff5ee\",\r\n    sienna: \"a0522d\",\r\n    silver: \"c0c0c0\",\r\n    skyblue: \"87ceeb\",\r\n    slateblue: \"6a5acd\",\r\n    slategray: \"708090\",\r\n    snow: \"fffafa\",\r\n    springgreen: \"00ff7f\",\r\n    steelblue: \"4682b4\",\r\n    tan: \"d2b48c\",\r\n    teal: \"008080\",\r\n    thistle: \"d8bfd8\",\r\n    tomato: \"ff6347\",\r\n    turquoise: \"40e0d0\",\r\n    violet: \"ee82ee\",\r\n    violetred: \"d02090\",\r\n    wheat: \"f5deb3\",\r\n    white: \"ffffff\",\r\n    whitesmoke: \"f5f5f5\",\r\n    yellow: \"ffff00\",\r\n    yellowgreen: \"9acd32\"\r\n};\r\nvar standardColorTypes = [{\r\n    re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10)]\r\n    }\r\n}, {\r\n    re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.*\\d+)\\)$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 10), parseInt(colorString[2], 10), parseInt(colorString[3], 10), parseFloat(colorString[4])]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1], 16), parseInt(colorString[2], 16), parseInt(colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^#([a-f0-9]{1})([a-f0-9]{1})([a-f0-9]{1})$/,\r\n    process: function(colorString) {\r\n        return [parseInt(colorString[1] + colorString[1], 16), parseInt(colorString[2] + colorString[2], 16), parseInt(colorString[3] + colorString[3], 16)]\r\n    }\r\n}, {\r\n    re: /^hsv\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            v = parseInt(colorString[3], 10),\r\n            rgb = hsvToRgb(h, s, v);\r\n        return [rgb[0], rgb[1], rgb[2], 1, [h, s, v]]\r\n    }\r\n}, {\r\n    re: /^hsl\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n    process: function(colorString) {\r\n        var h = parseInt(colorString[1], 10),\r\n            s = parseInt(colorString[2], 10),\r\n            l = parseInt(colorString[3], 10),\r\n            rgb = hslToRgb(h, s, l);\r\n        return [rgb[0], rgb[1], rgb[2], 1, null, [h, s, l]]\r\n    }\r\n}];\r\n\r\nfunction Color(value) {\r\n    this.baseColor = value;\r\n    var color;\r\n    if (value) {\r\n        color = String(value).toLowerCase().replace(/ /g, \"\");\r\n        color = standardColorNames[color] ? \"#\" + standardColorNames[color] : color;\r\n        color = parseColor(color)\r\n    }\r\n    if (!color) {\r\n        this.colorIsInvalid = true\r\n    }\r\n    color = color || {};\r\n    this.r = normalize(color[0]);\r\n    this.g = normalize(color[1]);\r\n    this.b = normalize(color[2]);\r\n    this.a = normalize(color[3], 1, 1);\r\n    if (color[4]) {\r\n        this.hsv = {\r\n            h: color[4][0],\r\n            s: color[4][1],\r\n            v: color[4][2]\r\n        }\r\n    } else {\r\n        this.hsv = toHsvFromRgb(this.r, this.g, this.b)\r\n    }\r\n    if (color[5]) {\r\n        this.hsl = {\r\n            h: color[5][0],\r\n            s: color[5][1],\r\n            l: color[5][2]\r\n        }\r\n    } else {\r\n        this.hsl = toHslFromRgb(this.r, this.g, this.b)\r\n    }\r\n}\r\n\r\nfunction parseColor(color) {\r\n    if (\"transparent\" === color) {\r\n        return [0, 0, 0, 0]\r\n    }\r\n    var str, i = 0,\r\n        ii = standardColorTypes.length;\r\n    for (; i < ii; ++i) {\r\n        str = standardColorTypes[i].re.exec(color);\r\n        if (str) {\r\n            return standardColorTypes[i].process(str)\r\n        }\r\n    }\r\n    return null\r\n}\r\n\r\nfunction normalize(colorComponent, def, max) {\r\n    def = def || 0;\r\n    max = max || 255;\r\n    return colorComponent < 0 || isNaN(colorComponent) ? def : colorComponent > max ? max : colorComponent\r\n}\r\n\r\nfunction toHexFromRgb(r, g, b) {\r\n    return \"#\" + (16777216 | r << 16 | g << 8 | b).toString(16).slice(1)\r\n}\r\n\r\nfunction toHsvFromRgb(r, g, b) {\r\n    var H, S, V, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        delta = max - min;\r\n    V = max;\r\n    S = 0 === max ? 0 : 1 - min / max;\r\n    if (max === min) {\r\n        H = 0\r\n    } else {\r\n        switch (max) {\r\n            case r:\r\n                H = 60 * ((g - b) / delta);\r\n                if (g < b) {\r\n                    H += 360\r\n                }\r\n                break;\r\n            case g:\r\n                H = 60 * ((b - r) / delta) + 120;\r\n                break;\r\n            case b:\r\n                H = 60 * ((r - g) / delta) + 240\r\n        }\r\n    }\r\n    S *= 100;\r\n    V *= 100 / 255;\r\n    return {\r\n        h: Math.round(H),\r\n        s: Math.round(S),\r\n        v: Math.round(V)\r\n    }\r\n}\r\n\r\nfunction hsvToRgb(h, s, v) {\r\n    var vDec, vInc, vMin, index, a, r, g, b;\r\n    index = Math.floor(h % 360 / 60);\r\n    vMin = (100 - s) * v / 100;\r\n    a = (v - vMin) * (h % 60 / 60);\r\n    vInc = vMin + a;\r\n    vDec = v - a;\r\n    switch (index) {\r\n        case 0:\r\n            r = v;\r\n            g = vInc;\r\n            b = vMin;\r\n            break;\r\n        case 1:\r\n            r = vDec;\r\n            g = v;\r\n            b = vMin;\r\n            break;\r\n        case 2:\r\n            r = vMin;\r\n            g = v;\r\n            b = vInc;\r\n            break;\r\n        case 3:\r\n            r = vMin;\r\n            g = vDec;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = vInc;\r\n            g = vMin;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = vMin;\r\n            b = vDec\r\n    }\r\n    return [Math.round(2.55 * r), Math.round(2.55 * g), Math.round(2.55 * b)]\r\n}\r\n\r\nfunction calculateHue(r, g, b, delta) {\r\n    var max = Math.max(r, g, b);\r\n    switch (max) {\r\n        case r:\r\n            return (g - b) / delta + (g < b ? 6 : 0);\r\n        case g:\r\n            return (b - r) / delta + 2;\r\n        case b:\r\n            return (r - g) / delta + 4\r\n    }\r\n}\r\n\r\nfunction toHslFromRgb(r, g, b) {\r\n    r = convertTo01Bounds(r, 255);\r\n    g = convertTo01Bounds(g, 255);\r\n    b = convertTo01Bounds(b, 255);\r\n    var h, s, max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b),\r\n        maxMinSum = max + min,\r\n        l = maxMinSum / 2;\r\n    if (max === min) {\r\n        h = s = 0\r\n    } else {\r\n        var delta = max - min;\r\n        if (l > .5) {\r\n            s = delta / (2 - maxMinSum)\r\n        } else {\r\n            s = delta / maxMinSum\r\n        }\r\n        h = calculateHue(r, g, b, delta);\r\n        h /= 6\r\n    }\r\n    return {\r\n        h: _round(360 * h),\r\n        s: _round(100 * s),\r\n        l: _round(100 * l)\r\n    }\r\n}\r\n\r\nfunction makeColorTint(colorPart, h) {\r\n    var colorTint = h;\r\n    if (\"r\" === colorPart) {\r\n        colorTint = h + 1 / 3\r\n    }\r\n    if (\"b\" === colorPart) {\r\n        colorTint = h - 1 / 3\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction modifyColorTint(colorTint) {\r\n    if (colorTint < 0) {\r\n        colorTint += 1\r\n    }\r\n    if (colorTint > 1) {\r\n        colorTint -= 1\r\n    }\r\n    return colorTint\r\n}\r\n\r\nfunction hueToRgb(p, q, colorTint) {\r\n    colorTint = modifyColorTint(colorTint);\r\n    if (colorTint < 1 / 6) {\r\n        return p + 6 * (q - p) * colorTint\r\n    }\r\n    if (colorTint < .5) {\r\n        return q\r\n    }\r\n    if (colorTint < 2 / 3) {\r\n        return p + (q - p) * (2 / 3 - colorTint) * 6\r\n    }\r\n    return p\r\n}\r\n\r\nfunction hslToRgb(h, s, l) {\r\n    var r, g, b;\r\n    h = convertTo01Bounds(h, 360);\r\n    s = convertTo01Bounds(s, 100);\r\n    l = convertTo01Bounds(l, 100);\r\n    if (0 === s) {\r\n        r = g = b = l\r\n    } else {\r\n        var q = l < .5 ? l * (1 + s) : l + s - l * s,\r\n            p = 2 * l - q;\r\n        r = hueToRgb(p, q, makeColorTint(\"r\", h));\r\n        g = hueToRgb(p, q, makeColorTint(\"g\", h));\r\n        b = hueToRgb(p, q, makeColorTint(\"b\", h))\r\n    }\r\n    return [_round(255 * r), _round(255 * g), _round(255 * b)]\r\n}\r\n\r\nfunction convertTo01Bounds(n, max) {\r\n    n = Math.min(max, Math.max(0, parseFloat(n)));\r\n    if (Math.abs(n - max) < 1e-6) {\r\n        return 1\r\n    }\r\n    return n % max / parseFloat(max)\r\n}\r\n\r\nfunction isIntegerBetweenMinAndMax(number, min, max) {\r\n    min = min || 0;\r\n    max = max || 255;\r\n    if (number % 1 !== 0 || number < min || number > max || \"number\" !== typeof number || isNaN(number)) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\nvar _round = Math.round;\r\nColor.prototype = {\r\n    constructor: Color,\r\n    highlight: function(step) {\r\n        step = step || 10;\r\n        return this.alter(step).toHex()\r\n    },\r\n    darken: function(step) {\r\n        step = step || 10;\r\n        return this.alter(-step).toHex()\r\n    },\r\n    alter: function(step) {\r\n        var result = new Color;\r\n        result.r = normalize(this.r + step);\r\n        result.g = normalize(this.g + step);\r\n        result.b = normalize(this.b + step);\r\n        return result\r\n    },\r\n    blend: function(blendColor, opacity) {\r\n        var other = blendColor instanceof Color ? blendColor : new Color(blendColor),\r\n            result = new Color;\r\n        result.r = normalize(_round(this.r * (1 - opacity) + other.r * opacity));\r\n        result.g = normalize(_round(this.g * (1 - opacity) + other.g * opacity));\r\n        result.b = normalize(_round(this.b * (1 - opacity) + other.b * opacity));\r\n        return result\r\n    },\r\n    toHex: function() {\r\n        return toHexFromRgb(this.r, this.g, this.b)\r\n    },\r\n    getPureColor: function() {\r\n        var rgb = hsvToRgb(this.hsv.h, 100, 100);\r\n        return new Color(\"rgb(\" + rgb.join(\",\") + \")\")\r\n    },\r\n    isValidHex: function(hex) {\r\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex)\r\n    },\r\n    isValidRGB: function(r, g, b) {\r\n        if (!isIntegerBetweenMinAndMax(r) || !isIntegerBetweenMinAndMax(g) || !isIntegerBetweenMinAndMax(b)) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    isValidAlpha: function(a) {\r\n        if (isNaN(a) || a < 0 || a > 1 || \"number\" !== typeof a) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    colorIsInvalid: false,\r\n    fromHSL: function(hsl) {\r\n        var color = new Color,\r\n            rgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n        color.r = rgb[0];\r\n        color.g = rgb[1];\r\n        color.b = rgb[2];\r\n        return color\r\n    }\r\n};\r\nmodule.exports = Color;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/color.js\n// module id = 741\n// module chunks = 1 6","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar color_box_1 = require(\"devextreme/ui/color_box\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar ColorBox = /** @class */ (function (_super) {\n    __extends(ColorBox, _super);\n    function ColorBox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = color_box_1.default;\n        _this._defaults = {\n            defaultOpened: \"opened\",\n            defaultValue: \"value\"\n        };\n        _this._templateProps = [{\n                tmplOption: \"dropDownButtonTemplate\",\n                render: \"dropDownButtonRender\",\n                component: \"dropDownButtonComponent\",\n                keyFn: \"dropDownButtonKeyFn\"\n            }, {\n                tmplOption: \"fieldTemplate\",\n                render: \"fieldRender\",\n                component: \"fieldComponent\",\n                keyFn: \"fieldKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(ColorBox.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ColorBox;\n}(component_1.Component));\nexports.ColorBox = ColorBox;\nColorBox.propTypes = {\n    acceptCustomValue: prop_types_1.PropTypes.bool,\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    applyButtonText: prop_types_1.PropTypes.string,\n    applyValueMode: prop_types_1.PropTypes.oneOf([\n        \"instantly\",\n        \"useButtons\"\n    ]),\n    cancelButtonText: prop_types_1.PropTypes.string,\n    deferRendering: prop_types_1.PropTypes.bool,\n    disabled: prop_types_1.PropTypes.bool,\n    editAlphaChannel: prop_types_1.PropTypes.bool,\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    inputAttr: prop_types_1.PropTypes.object,\n    isValid: prop_types_1.PropTypes.bool,\n    keyStep: prop_types_1.PropTypes.number,\n    name: prop_types_1.PropTypes.string,\n    onChange: prop_types_1.PropTypes.func,\n    onClosed: prop_types_1.PropTypes.func,\n    onCopy: prop_types_1.PropTypes.func,\n    onCut: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onEnterKey: prop_types_1.PropTypes.func,\n    onFocusIn: prop_types_1.PropTypes.func,\n    onFocusOut: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onInput: prop_types_1.PropTypes.func,\n    onKeyDown: prop_types_1.PropTypes.func,\n    onKeyPress: prop_types_1.PropTypes.func,\n    onKeyUp: prop_types_1.PropTypes.func,\n    onOpened: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onPaste: prop_types_1.PropTypes.func,\n    onValueChanged: prop_types_1.PropTypes.func,\n    opened: prop_types_1.PropTypes.bool,\n    placeholder: prop_types_1.PropTypes.string,\n    readOnly: prop_types_1.PropTypes.bool,\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    stylingMode: prop_types_1.PropTypes.oneOf([\n        \"outlined\",\n        \"underlined\",\n        \"filled\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    text: prop_types_1.PropTypes.string,\n    validationError: prop_types_1.PropTypes.object,\n    validationMessageMode: prop_types_1.PropTypes.oneOf([\n        \"always\",\n        \"auto\"\n    ]),\n    value: prop_types_1.PropTypes.string,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\nexports.default = ColorBox;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/color-box.js\n// module id = 864\n// module chunks = 6"],"sourceRoot":""}