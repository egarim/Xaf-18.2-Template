{"version":3,"sources":["../static/js/8.chunk.js","../node_modules/app-player-react/dist/widgets/actions/single-choice-action.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.js","../node_modules/devextreme/ui/context_menu.js","../node_modules/devextreme/ui/overlay/utils.js","../node_modules/devextreme/ui/context_menu/ui.context_menu.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js","../node_modules/devextreme/ui/menu.js","../node_modules/devextreme/ui/menu/ui.menu.js","../node_modules/devextreme/ui/menu/ui.submenu.js","../node_modules/devextreme-react/menu.js","../node_modules/devextreme-react/ui/menu.js"],"names":["webpackJsonp","610","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","_a","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__","__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__","n","__WEBPACK_IMPORTED_MODULE_3_react__","__WEBPACK_IMPORTED_MODULE_4__menu_item__","__WEBPACK_IMPORTED_MODULE_5__with_style__","__WEBPACK_IMPORTED_MODULE_6_reselect__","dxStateHoverClassName","dropDownButtonClassName","actionButtonClassName","WithStyle","main","display","flexDirection","alignItems","borderBottomRightRadius","borderTopRightRadius","borderRightWidth","borderBottomLeftRadius","borderTopLeftRadius","borderWidth","borderLeftWidth","padding","borderRadius","ReactSingleChoiceAction","_super","_this","apply","this","arguments","state","firstActiveItem","props","items","lastExecutedItem","lastExcutedLeafItem","menuItemsSelector","root","mapItems","actionButtonElement","dropDownButtonElement","handleMouseEnter","target","classList","contains","getElement","add","handleMouseLeave","remove","renderSubmenuItemComponent","item","isRootItem","icon","elementAttr","class","ref","hoverStateEnabled","showArrow","isLeafItem","executeAction","e","itemToExecute","getItemToExecute","onExecute","_b","showItemsOnClick","onExecuteFn","setTimeout","click","itemData","executeItemClick","itemExecuteFn","isLeafItem_1","setState","prevState","defaultItemMode","parent","hasIcon","some","map","newItem","prototype","current","instance","element","render","actionText","text","_c","actionIcon","_d","showText","tooltip","style","widgetTooltip","className","onMouseEnter","onMouseLeave","onClick","hint","cssClass","showFirstSubmenuMode","onItemClick","itemComponent","defaultProps","_originalConfig","669","exports","$","commonUtils","typeUtils","each","extend","inkRipple","HierarchicalCollectionWidget","MenuBaseEditStrategy","devices","themes","ITEM_CLASS","DX_MENU_CLASS","DEFAULT_DELAY","show","hide","MenuBase","inherit","_getDefaultOptions","callBase","activeStateEnabled","showSubmenuMode","name","delay","animation","type","from","to","duration","selectByClick","focusOnSelectedItem","keyExpr","_itemAttributes","role","useInkRipple","_defaultOptionsRules","concat","device","isAndroid5","options","_activeStateUnit","_itemDataKey","_itemClass","_setAriaSelected","noop","_selectedItemClass","_widgetClass","_focusTarget","_itemContainer","_clean","option","_supportedKeys","selectItem","$item","length","_isSelectionEnabled","space","pageUp","pageDown","_init","_renderSelectedItem","_initActions","_getTextContainer","itemText","$itemContainer","addClass","itemContent","isPlainObject","String","_getPopoutContainer","$popOutContainer","$popOutImage","DX_MENU_ITEM_POPOUT_CLASS","append","_getDataAdapterOptions","rootValue","multipleSelection","recursiveSelection","recursiveExpansion","searchValue","_selectByItem","selectedItem","nodeToSelect","_dataAdapter","getNodeByItem","toggleSelection","internalFields","key","selectedKeys","getSelectedNodesKeys","selectedKey","node","getNodeByKey","selectable","_initMarkup","_addCustomCssClass","$element","_renderInkRipple","_inkRipple","_toggleActiveState","config","event","showWave","hideWave","_getShowSubmenuMode","optionValue","isObject","_isDesktopDevice","_initSelectedItems","real","deviceType","_initEditStrategy","Strategy","_editStrategy","_itemWrapperSelector","_hoverStartHandler","that","$itemElement","_getItemElementByEventArgs","_isItemDisabled","stopPropagation","clearTimeout","_showSubmenusTimeout","_showSubmenu","bind","_getSubmenuDelay","_getAvailableItems","$itemElements","filter","css","_disabledGetter","data","_addExpandedClass","itemElement","action","isDefined","eventArgs","$target","hasClass","get","currentTarget","_hoverEndHandler","_hasSubmenu","childrenKeys","_renderContentImpl","_renderItems","getRootNodes","nodes","submenuContainer","$nodeContainer","hasIcons","_renderContainer","firstVisibleIndex","nextGroupFirstIndex","index","isVisibleNode","visible","beginGroup","_renderSeparator","_renderItem","$wrapper","appendTo","_createDOMElement","$nodeElement","$itemFrame","$node","attr","setAria","_renderItemFrame","children","_refreshItem","_itemIndexKey","closest","_addContentClasses","hasText","hasSubmenu","toggleClass","_getItemContent","$itemContent","_postprocessRenderItem","args","selectedIndex","_selectedGetter","_isItemSelectable","$itemsContainer","_itemClickHandler","_skipHandling","itemClickActionHandler","_createAction","_updateSubmenuVisibilityOnClick","_itemDXEventHandler","afterExecute","actionArgs","_updateSelectedItemOnClick","selectedItemKey","_isItemSelectionAllowed","selectedNode","_toggleItemSelection","_fireSelectionChangeEvent","_setOptionSilent","isSelectionByClickEnabled","_isContainerEmpty","_itemsGetter","is","_syncSelectionOptions","asyncNoop","_optionChanged","_cancelOptionChange","_updateSelectedItems","_invalidate","_getElementByItem","result","_itemElements","_","oldSelection","newSelection","_updateSelection","addedSelection","removedSelection","_createActionByOption","excludeValidators","addedItems","removedItems","nodeType","_getItemData","unselectItem","selected","674","default","684","getElementMaxHeightByWindow","_renderer","_renderer2","obj","__esModule","_window","window","getWindow","offsetTop","offset","top","scrollTop","offsetBottom","innerHeight","outerHeight","Math","max","721","domAdapter","eventsEngine","Guid","registerComponent","domUtils","getPublicElement","inArray","windowUtils","fx","positionUtils","eventUtils","Overlay","Deferred","ACTIONS","LOCAL_SUBMENU_DIRECTIONS","ContextMenu","getShowEvent","getShowDelay","showEvent","closeOnOutsideClick","position","at","my","onShowing","onShown","onSubmenuCreated","onHiding","onHidden","onPositioning","submenuDirection","onLeftFirstItem","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","hasWindow","_actions","_setOptionsByReference","_optionsByReference","_focusInHandler","_overlay","$content","_eventBindingTarget","itemsContainer","esc","_getActiveItem","$items","$focusedItem","$hoveredItem","find","_moveFocus","location","$newTarget","_getItemsByLocation","$oldTarget","$activeItemHighlighted","_prevItem","first","_nextItem","last","_hideSubmenuHandler","_expandSubmenuHandler","$activeItem","_getAriaTarget","_refreshActiveDescendant","id","getFocusedItemId","$curItem","$parentItem","parents","_hideSubmenusOnSameLevel","_hideSubmenu","isItemHasSubmenu","$submenu","_detachShowContextMenuEvents","_getTarget","_render","_renderVisibility","_addWidgetClass","_attachShowContextMenuEvents","_attachKeyboardEvents","_keyboardProcessor","_renderContextMenuOverlay","$overlayContent","overlayOptions","_getOverlayOptions","$overlayElement","_createComponent","_$element","_addPlatformDependentClass","_attachContextMenuEvent","_itemContextMenuHandler","phone","eventName","addNamespace","NAME","_showContextMenuEventHandler","off","getDocument","handler","contextMenuAction","_show","validatingTargetName","isRenderer","isWindow","on","_renderDimensions","$holder","_renderSubmenuItems","_getChildNodes","submenuElement","overlayAnimation","focusStateEnabled","_closeOnOutsideClickHandler","propagateOutsideClick","closeOnTargetScroll","deferRendering","of","collision","shading","showTitle","height","width","_overlayShownActionHandler","_overlayHidingActionHandler","_overlayHiddenActionHandler","arg","cancel","_hideAllShownSubmenus","$clickedItem","$activeItemContainer","$itemContainers","$rootItem","isRootItemClicked","isFunction","isDocument","_getActiveItemsContainer","_getItemsContainers","_searchActiveItem","_isIncludeOverlay","_hideAllShownChildSubmenus","_$content","eq","$activeOverlay","$allOverlays","isSame","$overlay","$context","$submenuElements","shownSubmenus","_shownSubmenus","context","isSubmenuRendered","_isSubmenuVisible","_drawSubmenu","$expandedItems","siblings","removeClass","DX_MENU_ITEM_CLASS","_hideSubmenuGroup","_hideSubmenuCore","submenuPosition","_getSubmenuPosition","push","stop","setup","_animate","$container","animate","toLowerCase","$rootItemWrapper","h","v","notCloseMenuOnItemClick","closeMenuOnClick","disabled","$prevSubmenu","canceled","$curSubmenu","splice","_stopAnimate","_visibilityChanged","previousValue","showing","_hide","_toggleVisibility","jQEvent","promise","reject","_positionContextMenu","_renderFocusState","_attachHoverEvents","_attachClickEvent","_getContextMenuPosition","isInitialPosition","_isInitialOptionValue","positioningAction","preventDefault","removeAttr","toggle","722","_typeof","Symbol","iterator","constructor","PlainEditStrategy","_getPlainItems","_collectionWidget","getMenuItems","_stringifyItem","JSON","stringify","_getTemplateString","template","toString","723","724","pointerEvents","hoverEvents","Submenu","Button","TreeView","Menu","orientation","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","rootMenuElements","submenuElements","_submenuItemElements","elements","currentSubmenu","_submenus","_isMenuHorizontal","argument","operation","navigationAction","isMenuHorizontal","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","outerWidth","_toggleAdaptiveMode","_visibleSubmenu","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","collapseAll","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","maxHeight","_getTreeViewOptions","menuOptions","optionsToTransfer","actionsToTransfer","actionName","dataSource","getDataSource","animationEnabled","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","expandEvent","$hamburger","_wrapper","DX_ADAPTIVE_MODE_CLASS","_getDelay","delayType","_keyboardHandler","submenu","_createSubmenu","_renderBorderElement","$submenuContainer","childKeyboardProcessor","attachChildProcessor","_getSubmenuOptions","_parentKey","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","component","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_moveMainMenuFocus","_getShowFirstSubmenuMode","direction","itemCount","$currentItem","itemIndex","$newItem","getInstance","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","selectedItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","end","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","rootItem","relatedTarget","contextMenu","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isHorizontalMenu","rtlEnabled","DX_CONTEXT_MENU_CLASS","_itemPointerDownHandler","mouseMoveEventName","move","isSelectionActive","buttons","which","_hasChildren","_showSubmenuTimer","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","eventArg","_hideSubmenuTimer","_hoveredRootItem","pointers","_changeSubmenusOption","725","tabIndex","_initDataAdapter","_renderDelimiter","$contentDelimiter","onPositioned","_overlayPositionedActionHandler","_showDelimiter","_toggleFocusClass","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","round","left","rootWidth","rootHeight","submenuWidth","submenuHeight","728","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","create","menu_1","prop_types_1","component_1","nested_option_1","_WidgetClass","_defaults","defaultItems","defaultSelectedItem","_expectedChildren","optionName","isCollectionItem","_templateProps","tmplOption","keyFn","_instance","enumerable","configurable","Component","propTypes","accessKey","PropTypes","string","bool","object","oneOfType","array","func","number","onContentReady","onDisposing","onInitialized","onItemContextMenu","onOptionChanged","oneOf","Animation","OptionName","ExpectedChildren","Delay","Hide","Item","IsCollectionItem","TemplateProps","Show","ShowFirstSubmenuMode","ShowSubmenuMode","778","m"],"mappings":"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","file":"static/js/8.chunk.js","sourcesContent":["webpackJsonp([8],{\n\n/***/ 610:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__ = __webpack_require__(778);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__menu_item__ = __webpack_require__(314);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__with_style__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_reselect__);\n/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\n\nvar _a;\n\n\n\n\n\n\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = Object(__WEBPACK_IMPORTED_MODULE_5__with_style__[\"a\" /* createWithStyleComponent */])({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = Object(__WEBPACK_IMPORTED_MODULE_6_reselect__[\"createSelector\"])(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.dropDownButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_4__menu_item__[\"a\" /* MenuItemTemplate */], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__[\"Menu\"], { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(__WEBPACK_IMPORTED_MODULE_3_react__[\"Component\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactSingleChoiceAction);\n\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    each = __webpack_require__(5).each,\r\n    extend = __webpack_require__(3).extend,\r\n    inkRipple = __webpack_require__(88),\r\n    HierarchicalCollectionWidget = __webpack_require__(312),\r\n    MenuBaseEditStrategy = __webpack_require__(722),\r\n    devices = __webpack_require__(14),\r\n    themes = __webpack_require__(24);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.asyncNoop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n/***/ }),\n\n/***/ 674:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(721);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 684:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/overlay/utils.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.getElementMaxHeightByWindow = void 0;\r\nvar _renderer = __webpack_require__(1);\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _window = __webpack_require__(9);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nvar getElementMaxHeightByWindow = function($element) {\r\n    var window = (0, _window.getWindow)(),\r\n        offsetTop = $element.offset().top - (0, _renderer2.default)(window).scrollTop(),\r\n        offsetBottom = (0, _renderer2.default)(window).innerHeight() - offsetTop - $element.outerHeight();\r\n    return Math.max(offsetTop, offsetBottom) * WINDOW_HEIGHT_PERCENT\r\n};\r\nexports.getElementMaxHeightByWindow = getElementMaxHeightByWindow;\r\n\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(71),\r\n    registerComponent = __webpack_require__(17),\r\n    noop = __webpack_require__(6).noop,\r\n    typeUtils = __webpack_require__(4),\r\n    domUtils = __webpack_require__(13),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    inArray = __webpack_require__(16).inArray,\r\n    extend = __webpack_require__(3).extend,\r\n    windowUtils = __webpack_require__(9),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    fx = __webpack_require__(33),\r\n    positionUtils = __webpack_require__(120),\r\n    devices = __webpack_require__(14),\r\n    eventUtils = __webpack_require__(8),\r\n    Overlay = __webpack_require__(53),\r\n    MenuBase = __webpack_require__(669),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), {\r\n                of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    map = __webpack_require__(5).map,\r\n    PlainEditStrategy = __webpack_require__(180);\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(724);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    registerComponent = __webpack_require__(17),\r\n    commonUtils = __webpack_require__(6),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    getElementMaxHeightByWindow = __webpack_require__(684).getElementMaxHeightByWindow,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(32),\r\n    hoverEvents = __webpack_require__(310),\r\n    MenuBase = __webpack_require__(669),\r\n    Overlay = __webpack_require__(53),\r\n    Submenu = __webpack_require__(725),\r\n    Button = __webpack_require__(42),\r\n    TreeView = __webpack_require__(306);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(this.$element())\r\n            }.bind(this),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: that.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay._wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        return this._visibleSubmenu ? true : this.callBase(e)\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var childKeyboardProcessor = this._keyboardProcessor && this._keyboardProcessor.attachChildProcessor(),\r\n            items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _keyboardProcessor: childKeyboardProcessor,\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: function(e) {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            }.bind(this),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n/***/ }),\n\n/***/ 725:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    noop = __webpack_require__(6).noop,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    positionUtils = __webpack_require__(120),\r\n    extend = __webpack_require__(3).extend,\r\n    ContextMenu = __webpack_require__(674);\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            closeOnTargetScroll: false,\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = {\r\n                of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n/***/ }),\n\n/***/ 728:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = __webpack_require__(723);\nvar prop_types_1 = __webpack_require__(15);\nvar component_1 = __webpack_require__(38);\nvar nested_option_1 = __webpack_require__(51);\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._expectedChildren = {\n            animation: { optionName: \"animation\", isCollectionItem: false },\n            item: { optionName: \"items\", isCollectionItem: true },\n            showFirstSubmenuMode: { optionName: \"showFirstSubmenuMode\", isCollectionItem: false },\n            showSubmenuMode: { optionName: \"showSubmenuMode\", isCollectionItem: false }\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\",\n                keyFn: \"itemKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    Animation.ExpectedChildren = {\n        hide: { optionName: \"hide\", isCollectionItem: false },\n        show: { optionName: \"show\", isCollectionItem: false }\n    };\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\",\n            keyFn: \"keyFn\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    ShowFirstSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    ShowSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/menu' file instead */\n__export(__webpack_require__(728));\nvar menu_1 = __webpack_require__(728);\nexports.default = menu_1.default;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/8.chunk.js","/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\nimport * as tslib_1 from \"tslib\";\nvar _a;\nimport { Button } from \"devextreme-react/ui/button\";\nimport { Menu } from \"devextreme-react/ui/menu\";\nimport * as React from \"react\";\nimport { MenuItemTemplate } from \"../menu-item\";\nimport { createWithStyleComponent } from \"../with-style\";\nimport { createSelector } from \"reselect\";\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = createWithStyleComponent({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = createSelector(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = React.createRef();\n        _this.dropDownButtonElement = React.createRef();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (React.createElement(Button, { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return React.createElement(MenuItemTemplate, tslib_1.__assign({}, tslib_1.__assign({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(tslib_1.__assign({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return tslib_1.__assign({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = tslib_1.__assign({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = tslib_1.__assign({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (React.createElement(WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (React.createElement(\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                React.createElement(Button, { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                React.createElement(Menu, { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(React.Component));\nexport default ReactSingleChoiceAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/app-player-react/dist/widgets/actions/single-choice-action.js\n// module id = 610\n// module chunks = 7 8","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inkRipple = require(\"../widget/utils.ink_ripple\"),\r\n    HierarchicalCollectionWidget = require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"),\r\n    MenuBaseEditStrategy = require(\"./ui.menu_base.edit.strategy\"),\r\n    devices = require(\"../../core/devices\"),\r\n    themes = require(\"../themes\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.asyncNoop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.js\n// module id = 669\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./context_menu/ui.context_menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu.js\n// module id = 674\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/overlay/utils.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.getElementMaxHeightByWindow = void 0;\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nvar getElementMaxHeightByWindow = function($element) {\r\n    var window = (0, _window.getWindow)(),\r\n        offsetTop = $element.offset().top - (0, _renderer2.default)(window).scrollTop(),\r\n        offsetBottom = (0, _renderer2.default)(window).innerHeight() - offsetTop - $element.outerHeight();\r\n    return Math.max(offsetTop, offsetBottom) * WINDOW_HEIGHT_PERCENT\r\n};\r\nexports.getElementMaxHeightByWindow = getElementMaxHeightByWindow;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/overlay/utils.js\n// module id = 684\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    fx = require(\"../../animation/fx\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    devices = require(\"../../core/devices\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    Overlay = require(\"../overlay\"),\r\n    MenuBase = require(\"./ui.menu_base\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), {\r\n                of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.context_menu.js\n// module id = 721\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    map = require(\"../../core/utils/iterator\").map,\r\n    PlainEditStrategy = require(\"../collection/ui.collection_widget.edit.strategy.plain\");\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js\n// module id = 722\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./menu/ui.menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu.js\n// module id = 723\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    getElementMaxHeightByWindow = require(\"../overlay/utils\").getElementMaxHeightByWindow,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    hoverEvents = require(\"../../events/hover\"),\r\n    MenuBase = require(\"../context_menu/ui.menu_base\"),\r\n    Overlay = require(\"../overlay\"),\r\n    Submenu = require(\"./ui.submenu\"),\r\n    Button = require(\"../button\"),\r\n    TreeView = require(\"../tree_view\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(this.$element())\r\n            }.bind(this),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: that.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay._wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        return this._visibleSubmenu ? true : this.callBase(e)\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var childKeyboardProcessor = this._keyboardProcessor && this._keyboardProcessor.attachChildProcessor(),\r\n            items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _keyboardProcessor: childKeyboardProcessor,\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: function(e) {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            }.bind(this),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.menu.js\n// module id = 724\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    positionUtils = require(\"../../animation/position\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    ContextMenu = require(\"../context_menu\");\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            closeOnTargetScroll: false,\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = {\r\n                of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.submenu.js\n// module id = 725\n// module chunks = 1 7 8","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = require(\"devextreme/ui/menu\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._expectedChildren = {\n            animation: { optionName: \"animation\", isCollectionItem: false },\n            item: { optionName: \"items\", isCollectionItem: true },\n            showFirstSubmenuMode: { optionName: \"showFirstSubmenuMode\", isCollectionItem: false },\n            showSubmenuMode: { optionName: \"showSubmenuMode\", isCollectionItem: false }\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\",\n                keyFn: \"itemKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    Animation.ExpectedChildren = {\n        hide: { optionName: \"hide\", isCollectionItem: false },\n        show: { optionName: \"show\", isCollectionItem: false }\n    };\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\",\n            keyFn: \"keyFn\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    ShowFirstSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    ShowSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/menu.js\n// module id = 728\n// module chunks = 7 8","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/menu' file instead */\n__export(require(\"../menu\"));\nvar menu_1 = require(\"../menu\");\nexports.default = menu_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/menu.js\n// module id = 778\n// module chunks = 7 8"],"sourceRoot":""}