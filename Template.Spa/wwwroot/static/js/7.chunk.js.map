{"version":3,"sources":["../static/js/7.chunk.js","../node_modules/app-player-react/dist/widgets/actions/single-choice-action.js","../node_modules/app-player-react/dist/widgets/actions/mobile-single-choice-action.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.js","../node_modules/devextreme/ui/context_menu.js","../node_modules/devextreme/ui/overlay/utils.js","../node_modules/devextreme/ui/context_menu/ui.context_menu.js","../node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js","../node_modules/devextreme/ui/menu.js","../node_modules/devextreme/ui/menu/ui.menu.js","../node_modules/devextreme/ui/menu/ui.submenu.js","../node_modules/devextreme-react/menu.js","../node_modules/devextreme-react/ui/menu.js"],"names":["webpackJsonp","610","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","_a","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__","__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__","n","__WEBPACK_IMPORTED_MODULE_3_react__","__WEBPACK_IMPORTED_MODULE_4__menu_item__","__WEBPACK_IMPORTED_MODULE_5__with_style__","__WEBPACK_IMPORTED_MODULE_6_reselect__","dxStateHoverClassName","dropDownButtonClassName","actionButtonClassName","WithStyle","main","display","flexDirection","alignItems","borderBottomRightRadius","borderTopRightRadius","borderRightWidth","borderBottomLeftRadius","borderTopLeftRadius","borderWidth","borderLeftWidth","padding","borderRadius","ReactSingleChoiceAction","_super","_this","apply","this","arguments","state","firstActiveItem","props","items","lastExecutedItem","lastExcutedLeafItem","menuItemsSelector","root","mapItems","actionButtonElement","dropDownButtonElement","handleMouseEnter","target","classList","contains","getElement","add","handleMouseLeave","remove","renderSubmenuItemComponent","item","isRootItem","icon","elementAttr","class","ref","hoverStateEnabled","showArrow","isLeafItem","executeAction","e","itemToExecute","getItemToExecute","onExecute","_b","showItemsOnClick","onExecuteFn","setTimeout","click","itemData","executeItemClick","itemExecuteFn","isLeafItem_1","setState","prevState","defaultItemMode","parent","hasIcon","some","map","newItem","prototype","current","instance","element","render","actionText","text","_c","actionIcon","_d","showText","tooltip","style","widgetTooltip","className","onMouseEnter","onMouseLeave","onClick","hint","cssClass","showFirstSubmenuMode","onItemClick","itemComponent","defaultProps","_originalConfig","629","__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_list__","__WEBPACK_IMPORTED_MODULE_2_react__","__WEBPACK_IMPORTED_MODULE_3__menu_item__","__WEBPACK_IMPORTED_MODULE_4__popup_widget__","__WEBPACK_IMPORTED_MODULE_5__toolbars_toolbar_widget__","__WEBPACK_IMPORTED_MODULE_6__with_theme__","__WEBPACK_IMPORTED_MODULE_7__single_choice_action__","PopupWithTheme","ReactMobileSingleChoiceAction","renderItem","renderItems","closePopup","result","label","sent","navigateBack","togglePopupVisible","onHide","renderToolbar","lastExcutedLeafItemText","firstActiveItemText","title","id","type","location","getItems","themeScope","fullScreen","showTitle","669","exports","$","commonUtils","typeUtils","each","extend","inkRipple","HierarchicalCollectionWidget","MenuBaseEditStrategy","devices","themes","ITEM_CLASS","DX_MENU_CLASS","DEFAULT_DELAY","show","hide","MenuBase","inherit","_getDefaultOptions","callBase","activeStateEnabled","showSubmenuMode","name","delay","animation","from","to","duration","selectByClick","focusOnSelectedItem","keyExpr","_itemAttributes","role","useInkRipple","_defaultOptionsRules","concat","device","isAndroid5","options","_activeStateUnit","_itemDataKey","_itemClass","_setAriaSelected","noop","_selectedItemClass","_widgetClass","_focusTarget","_itemContainer","_clean","option","_supportedKeys","selectItem","$item","length","_isSelectionEnabled","space","pageUp","pageDown","_init","_renderSelectedItem","_initActions","_getTextContainer","itemText","$itemContainer","addClass","itemContent","isPlainObject","String","_getPopoutContainer","$popOutContainer","$popOutImage","DX_MENU_ITEM_POPOUT_CLASS","append","_getDataAdapterOptions","rootValue","multipleSelection","recursiveSelection","recursiveExpansion","searchValue","_selectByItem","selectedItem","nodeToSelect","_dataAdapter","getNodeByItem","toggleSelection","internalFields","key","selectedKeys","getSelectedNodesKeys","selectedKey","node","getNodeByKey","selectable","_initMarkup","_addCustomCssClass","$element","_renderInkRipple","_inkRipple","_toggleActiveState","config","event","showWave","hideWave","_getShowSubmenuMode","optionValue","isObject","_isDesktopDevice","_initSelectedItems","real","deviceType","_initEditStrategy","Strategy","_editStrategy","_itemWrapperSelector","_hoverStartHandler","that","$itemElement","_getItemElementByEventArgs","_isItemDisabled","stopPropagation","clearTimeout","_showSubmenusTimeout","_showSubmenu","bind","_getSubmenuDelay","_getAvailableItems","$itemElements","filter","css","_disabledGetter","data","_addExpandedClass","itemElement","action","isDefined","eventArgs","$target","hasClass","get","currentTarget","_hoverEndHandler","_hasSubmenu","childrenKeys","_renderContentImpl","_renderItems","getRootNodes","nodes","submenuContainer","$nodeContainer","hasIcons","_renderContainer","firstVisibleIndex","nextGroupFirstIndex","index","isVisibleNode","visible","beginGroup","_renderSeparator","_renderItem","$wrapper","appendTo","_createDOMElement","$nodeElement","$itemFrame","$node","attr","setAria","_renderItemFrame","children","_refreshItem","_itemIndexKey","closest","_addContentClasses","hasText","hasSubmenu","toggleClass","_getItemContent","$itemContent","_postprocessRenderItem","args","selectedIndex","_selectedGetter","_isItemSelectable","$itemsContainer","_itemClickHandler","_skipHandling","itemClickActionHandler","_createAction","_updateSubmenuVisibilityOnClick","_itemDXEventHandler","afterExecute","actionArgs","_updateSelectedItemOnClick","selectedItemKey","_isItemSelectionAllowed","selectedNode","_toggleItemSelection","_fireSelectionChangeEvent","_setOptionSilent","isSelectionByClickEnabled","_isContainerEmpty","_itemsGetter","is","_syncSelectionOptions","asyncNoop","_optionChanged","_cancelOptionChange","_updateSelectedItems","_invalidate","_getElementByItem","_itemElements","_","oldSelection","newSelection","_updateSelection","addedSelection","removedSelection","_createActionByOption","excludeValidators","addedItems","removedItems","nodeType","_getItemData","unselectItem","selected","674","default","684","getElementMaxHeightByWindow","_renderer","_renderer2","obj","__esModule","_window","window","getWindow","offsetTop","offset","top","scrollTop","offsetBottom","innerHeight","outerHeight","Math","max","721","domAdapter","eventsEngine","Guid","registerComponent","domUtils","getPublicElement","inArray","windowUtils","fx","positionUtils","eventUtils","Overlay","Deferred","ACTIONS","LOCAL_SUBMENU_DIRECTIONS","ContextMenu","getShowEvent","getShowDelay","showEvent","closeOnOutsideClick","position","at","my","onShowing","onShown","onSubmenuCreated","onHiding","onHidden","onPositioning","submenuDirection","onLeftFirstItem","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","hasWindow","_actions","_setOptionsByReference","_optionsByReference","_focusInHandler","_overlay","$content","_eventBindingTarget","itemsContainer","esc","_getActiveItem","$items","$focusedItem","$hoveredItem","find","_moveFocus","$newTarget","_getItemsByLocation","$oldTarget","$activeItemHighlighted","_prevItem","first","_nextItem","last","_hideSubmenuHandler","_expandSubmenuHandler","$activeItem","_getAriaTarget","_refreshActiveDescendant","getFocusedItemId","$curItem","$parentItem","parents","_hideSubmenusOnSameLevel","_hideSubmenu","isItemHasSubmenu","$submenu","_detachShowContextMenuEvents","_getTarget","_render","_renderVisibility","_addWidgetClass","_attachShowContextMenuEvents","_attachKeyboardEvents","_keyboardProcessor","_renderContextMenuOverlay","$overlayContent","overlayOptions","_getOverlayOptions","$overlayElement","_createComponent","_$element","_addPlatformDependentClass","_attachContextMenuEvent","_itemContextMenuHandler","phone","eventName","addNamespace","NAME","_showContextMenuEventHandler","off","getDocument","handler","contextMenuAction","_show","validatingTargetName","isRenderer","isWindow","on","_renderDimensions","$holder","_renderSubmenuItems","_getChildNodes","submenuElement","overlayAnimation","focusStateEnabled","_closeOnOutsideClickHandler","propagateOutsideClick","closeOnTargetScroll","deferRendering","of","collision","shading","height","width","_overlayShownActionHandler","_overlayHidingActionHandler","_overlayHiddenActionHandler","arg","cancel","_hideAllShownSubmenus","$clickedItem","$activeItemContainer","$itemContainers","$rootItem","isRootItemClicked","isFunction","isDocument","_getActiveItemsContainer","_getItemsContainers","_searchActiveItem","_isIncludeOverlay","_hideAllShownChildSubmenus","_$content","eq","$activeOverlay","$allOverlays","isSame","$overlay","$context","$submenuElements","shownSubmenus","_shownSubmenus","context","isSubmenuRendered","_isSubmenuVisible","_drawSubmenu","$expandedItems","siblings","removeClass","DX_MENU_ITEM_CLASS","_hideSubmenuGroup","_hideSubmenuCore","submenuPosition","_getSubmenuPosition","push","stop","setup","_animate","$container","animate","toLowerCase","$rootItemWrapper","h","v","notCloseMenuOnItemClick","closeMenuOnClick","disabled","$prevSubmenu","canceled","$curSubmenu","splice","_stopAnimate","_visibilityChanged","previousValue","showing","_hide","_toggleVisibility","jQEvent","promise","reject","_positionContextMenu","_renderFocusState","_attachHoverEvents","_attachClickEvent","_getContextMenuPosition","isInitialPosition","_isInitialOptionValue","positioningAction","preventDefault","removeAttr","toggle","722","_typeof","Symbol","iterator","constructor","PlainEditStrategy","_getPlainItems","_collectionWidget","getMenuItems","_stringifyItem","JSON","stringify","_getTemplateString","template","toString","723","724","pointerEvents","hoverEvents","Submenu","Button","TreeView","Menu","orientation","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","rootMenuElements","submenuElements","_submenuItemElements","elements","currentSubmenu","_submenus","_isMenuHorizontal","argument","operation","navigationAction","isMenuHorizontal","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","outerWidth","_toggleAdaptiveMode","_visibleSubmenu","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","collapseAll","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","maxHeight","_getTreeViewOptions","menuOptions","optionsToTransfer","actionsToTransfer","actionName","dataSource","getDataSource","animationEnabled","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","expandEvent","$hamburger","_wrapper","DX_ADAPTIVE_MODE_CLASS","_getDelay","delayType","_keyboardHandler","submenu","_createSubmenu","_renderBorderElement","$submenuContainer","childKeyboardProcessor","attachChildProcessor","_getSubmenuOptions","_parentKey","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","component","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_moveMainMenuFocus","_getShowFirstSubmenuMode","direction","itemCount","$currentItem","itemIndex","$newItem","getInstance","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","selectedItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","end","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","rootItem","relatedTarget","contextMenu","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isHorizontalMenu","rtlEnabled","DX_CONTEXT_MENU_CLASS","_itemPointerDownHandler","mouseMoveEventName","move","isSelectionActive","buttons","which","_hasChildren","_showSubmenuTimer","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","eventArg","_hideSubmenuTimer","_hoveredRootItem","pointers","_changeSubmenusOption","725","tabIndex","_initDataAdapter","_renderDelimiter","$contentDelimiter","onPositioned","_overlayPositionedActionHandler","_showDelimiter","_toggleFocusClass","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","round","left","rootWidth","rootHeight","submenuWidth","submenuHeight","728","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","create","menu_1","prop_types_1","component_1","nested_option_1","_WidgetClass","_defaults","defaultItems","defaultSelectedItem","_expectedChildren","optionName","isCollectionItem","_templateProps","tmplOption","keyFn","_instance","enumerable","configurable","Component","propTypes","accessKey","PropTypes","string","bool","object","oneOfType","array","func","number","onContentReady","onDisposing","onInitialized","onItemContextMenu","onOptionChanged","oneOf","Animation","OptionName","ExpectedChildren","Delay","Hide","Item","IsCollectionItem","TemplateProps","Show","ShowFirstSubmenuMode","ShowSubmenuMode","778","m"],"mappings":"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","file":"static/js/7.chunk.js","sourcesContent":["webpackJsonp([7,8],{\n\n/***/ 610:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__ = __webpack_require__(129);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__ = __webpack_require__(778);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__menu_item__ = __webpack_require__(314);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__with_style__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect__ = __webpack_require__(45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_reselect___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_reselect__);\n/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\n\nvar _a;\n\n\n\n\n\n\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = Object(__WEBPACK_IMPORTED_MODULE_5__with_style__[\"a\" /* createWithStyleComponent */])({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = Object(__WEBPACK_IMPORTED_MODULE_6_reselect__[\"createSelector\"])(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.dropDownButtonElement = __WEBPACK_IMPORTED_MODULE_3_react__[\"createRef\"]();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_4__menu_item__[\"a\" /* MenuItemTemplate */], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(__WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (__WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_button__[\"Button\"], { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                __WEBPACK_IMPORTED_MODULE_3_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2_devextreme_react_ui_menu__[\"Menu\"], { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(__WEBPACK_IMPORTED_MODULE_3_react__[\"Component\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactSingleChoiceAction);\n\n\n/***/ }),\n\n/***/ 629:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_tslib__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_list__ = __webpack_require__(313);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_list___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_list__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__menu_item__ = __webpack_require__(314);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__popup_widget__ = __webpack_require__(192);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__toolbars_toolbar_widget__ = __webpack_require__(184);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__with_theme__ = __webpack_require__(190);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__single_choice_action__ = __webpack_require__(610);\n/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\n\n\n\n\n\n\n\n\nvar PopupWithTheme = Object(__WEBPACK_IMPORTED_MODULE_6__with_theme__[\"a\" /* withTheme */])(__WEBPACK_IMPORTED_MODULE_4__popup_widget__[\"default\"]);\nvar ReactMobileSingleChoiceAction = /** @class */ (function (_super) {\n    __WEBPACK_IMPORTED_MODULE_0_tslib__[\"c\" /* __extends */](ReactMobileSingleChoiceAction, _super);\n    function ReactMobileSingleChoiceAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReactMobileSingleChoiceAction.prototype.renderItem = function (item, showArrow) {\n        return (__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_3__menu_item__[\"b\" /* StandaloneMenuItemTemplate */], __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, item, { showArrow: showArrow }))));\n    };\n    ReactMobileSingleChoiceAction.prototype.renderItems = function (items, closePopup) {\n        var _this = this;\n        return (__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_1_devextreme_react_ui_list__[\"List\"], { items: items, itemComponent: function (item) { return _this.renderItem(item, ReactMobileSingleChoiceAction.isLeafItem(item)); }, onItemClick: function (e) { return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __awaiter */](_this, void 0, void 0, function () {\n                var result, item;\n                return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __generator */](this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.executeItemClick(e)];\n                        case 1:\n                            result = _a.sent(), item = e.itemData;\n                            if (!ReactMobileSingleChoiceAction.isLeafItem(item)) {\n                                closePopup();\n                            }\n                            return [2 /*return*/, result];\n                    }\n                });\n            }); } }));\n    };\n    ReactMobileSingleChoiceAction.prototype.navigateBack = function (togglePopupVisible) {\n        return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"b\" /* __awaiter */](this, void 0, void 0, function () {\n            var lastExcutedLeafItem;\n            return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"d\" /* __generator */](this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        lastExcutedLeafItem = this.state.lastExcutedLeafItem;\n                        if (!(lastExcutedLeafItem && !this.isRootItem(lastExcutedLeafItem))) return [3 /*break*/, 1];\n                        this.setState(function (prevState) {\n                            return __WEBPACK_IMPORTED_MODULE_0_tslib__[\"a\" /* __assign */]({}, prevState, { lastExecutedItem: lastExcutedLeafItem.parent, lastExcutedLeafItem: lastExcutedLeafItem.parent });\n                        });\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, togglePopupVisible()];\n                    case 2:\n                        _a.sent();\n                        if (this.props.onHide) {\n                            this.props.onHide();\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ReactMobileSingleChoiceAction.prototype.renderToolbar = function (togglePopupVisible) {\n        var _this = this;\n        var actionText = this.props.actionText, _a = this.state, lastExcutedLeafItem = _a.lastExcutedLeafItem, firstActiveItem = _a.firstActiveItem, lastExcutedLeafItemText = lastExcutedLeafItem && lastExcutedLeafItem.text, firstActiveItemText = firstActiveItem && firstActiveItem.text, title = lastExcutedLeafItemText || actionText || firstActiveItemText;\n        return (__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_5__toolbars_toolbar_widget__[\"ReactToolbar\"], { items: [\n                {\n                    id: \"menu\",\n                    type: \"command.button\",\n                    location: \"before\",\n                    icon: \"arrowleft\",\n                    onExecute: function () { _this.navigateBack(togglePopupVisible); }\n                },\n                {\n                    id: \"menu\",\n                    type: \"label\",\n                    location: \"before\",\n                    text: title\n                }\n            ] }));\n    };\n    ReactMobileSingleChoiceAction.prototype.getItems = function () {\n        var items = this.menuItemsSelector(this.props)[0].items, lastExcutedLeafItem = this.state.lastExcutedLeafItem;\n        return lastExcutedLeafItem ? lastExcutedLeafItem.items : items;\n    };\n    ReactMobileSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        return (__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"](PopupWithTheme, { themeScope: \"detail-item-toolbar-mobile\", fullScreen: true, showTitle: false }, function (togglePopupVisible) { return (__WEBPACK_IMPORTED_MODULE_2_react__[\"createElement\"](__WEBPACK_IMPORTED_MODULE_2_react__[\"Fragment\"], null,\n            _this.renderToolbar(togglePopupVisible),\n            _this.renderItems(_this.getItems(), togglePopupVisible))); }));\n    };\n    return ReactMobileSingleChoiceAction;\n}(__WEBPACK_IMPORTED_MODULE_7__single_choice_action__[\"default\"]));\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactMobileSingleChoiceAction);\n\n\n/***/ }),\n\n/***/ 669:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    commonUtils = __webpack_require__(6),\r\n    typeUtils = __webpack_require__(4),\r\n    each = __webpack_require__(5).each,\r\n    extend = __webpack_require__(3).extend,\r\n    inkRipple = __webpack_require__(88),\r\n    HierarchicalCollectionWidget = __webpack_require__(312),\r\n    MenuBaseEditStrategy = __webpack_require__(722),\r\n    devices = __webpack_require__(14),\r\n    themes = __webpack_require__(24);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.asyncNoop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n/***/ }),\n\n/***/ 674:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(721);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 684:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/overlay/utils.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.getElementMaxHeightByWindow = void 0;\r\nvar _renderer = __webpack_require__(1);\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _window = __webpack_require__(9);\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nvar getElementMaxHeightByWindow = function($element) {\r\n    var window = (0, _window.getWindow)(),\r\n        offsetTop = $element.offset().top - (0, _renderer2.default)(window).scrollTop(),\r\n        offsetBottom = (0, _renderer2.default)(window).innerHeight() - offsetTop - $element.outerHeight();\r\n    return Math.max(offsetTop, offsetBottom) * WINDOW_HEIGHT_PERCENT\r\n};\r\nexports.getElementMaxHeightByWindow = getElementMaxHeightByWindow;\r\n\n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    domAdapter = __webpack_require__(11),\r\n    eventsEngine = __webpack_require__(7),\r\n    Guid = __webpack_require__(71),\r\n    registerComponent = __webpack_require__(17),\r\n    noop = __webpack_require__(6).noop,\r\n    typeUtils = __webpack_require__(4),\r\n    domUtils = __webpack_require__(13),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    inArray = __webpack_require__(16).inArray,\r\n    extend = __webpack_require__(3).extend,\r\n    windowUtils = __webpack_require__(9),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    fx = __webpack_require__(33),\r\n    positionUtils = __webpack_require__(120),\r\n    devices = __webpack_require__(14),\r\n    eventUtils = __webpack_require__(8),\r\n    Overlay = __webpack_require__(53),\r\n    MenuBase = __webpack_require__(669),\r\n    Deferred = __webpack_require__(10).Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), {\r\n                of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = __webpack_require__(1),\r\n    map = __webpack_require__(5).map,\r\n    PlainEditStrategy = __webpack_require__(180);\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nmodule.exports = __webpack_require__(724);\r\nmodule.exports.default = module.exports;\r\n\n\n/***/ }),\n\n/***/ 724:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    eventsEngine = __webpack_require__(7),\r\n    registerComponent = __webpack_require__(17),\r\n    commonUtils = __webpack_require__(6),\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    each = __webpack_require__(5).each,\r\n    typeUtils = __webpack_require__(4),\r\n    extend = __webpack_require__(3).extend,\r\n    getElementMaxHeightByWindow = __webpack_require__(684).getElementMaxHeightByWindow,\r\n    eventUtils = __webpack_require__(8),\r\n    pointerEvents = __webpack_require__(32),\r\n    hoverEvents = __webpack_require__(310),\r\n    MenuBase = __webpack_require__(669),\r\n    Overlay = __webpack_require__(53),\r\n    Submenu = __webpack_require__(725),\r\n    Button = __webpack_require__(42),\r\n    TreeView = __webpack_require__(306);\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(this.$element())\r\n            }.bind(this),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: that.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay._wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        return this._visibleSubmenu ? true : this.callBase(e)\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var childKeyboardProcessor = this._keyboardProcessor && this._keyboardProcessor.attachChildProcessor(),\r\n            items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _keyboardProcessor: childKeyboardProcessor,\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: function(e) {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            }.bind(this),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n/***/ }),\n\n/***/ 725:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\r\nvar $ = __webpack_require__(1),\r\n    noop = __webpack_require__(6).noop,\r\n    getPublicElement = __webpack_require__(13).getPublicElement,\r\n    positionUtils = __webpack_require__(120),\r\n    extend = __webpack_require__(3).extend,\r\n    ContextMenu = __webpack_require__(674);\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            closeOnTargetScroll: false,\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = {\r\n                of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n/***/ }),\n\n/***/ 728:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = __webpack_require__(723);\nvar prop_types_1 = __webpack_require__(15);\nvar component_1 = __webpack_require__(38);\nvar nested_option_1 = __webpack_require__(51);\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._expectedChildren = {\n            animation: { optionName: \"animation\", isCollectionItem: false },\n            item: { optionName: \"items\", isCollectionItem: true },\n            showFirstSubmenuMode: { optionName: \"showFirstSubmenuMode\", isCollectionItem: false },\n            showSubmenuMode: { optionName: \"showSubmenuMode\", isCollectionItem: false }\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\",\n                keyFn: \"itemKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    Animation.ExpectedChildren = {\n        hide: { optionName: \"hide\", isCollectionItem: false },\n        show: { optionName: \"show\", isCollectionItem: false }\n    };\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\",\n            keyFn: \"keyFn\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    ShowFirstSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    ShowSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/menu' file instead */\n__export(__webpack_require__(728));\nvar menu_1 = __webpack_require__(728);\nexports.default = menu_1.default;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/7.chunk.js","/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\nimport * as tslib_1 from \"tslib\";\nvar _a;\nimport { Button } from \"devextreme-react/ui/button\";\nimport { Menu } from \"devextreme-react/ui/menu\";\nimport * as React from \"react\";\nimport { MenuItemTemplate } from \"../menu-item\";\nimport { createWithStyleComponent } from \"../with-style\";\nimport { createSelector } from \"reselect\";\nvar dxStateHoverClassName = \"dx-state-hover\", dropDownButtonClassName = \"xet-drop-down-button\", actionButtonClassName = \"xet-action-button\";\nvar WithStyle = createWithStyleComponent({\n    main: (_a = {\n            \"display\": \"flex\",\n            \"flexDirection\": \"row\",\n            \"alignItems\": \"center\"\n        },\n        _a[\"& .\" + actionButtonClassName] = {\n            \"borderBottomRightRadius\": 0,\n            \"borderTopRightRadius\": 0,\n            \"borderRightWidth\": 0\n        },\n        _a[\"& .\" + dropDownButtonClassName] = {\n            \"borderBottomLeftRadius\": 0,\n            \"borderTopLeftRadius\": 0\n        },\n        _a[\"& .dx-button.dx-state-focused\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-active\"] = {\n            \"borderWidth\": 1\n        },\n        _a[\"& .dx-button.dx-state-focused + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-button.dx-state-active + div .\" + dropDownButtonClassName] = {\n            \"borderLeftWidth\": 0\n        },\n        _a[\"& .dx-menu-base .dx-menu-item-content\"] = {\n            \"padding\": 0\n        },\n        _a[\"& .dx-menu-item\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-menu-item-expanded\"] = {\n            \"borderRadius\": \"100%\"\n        },\n        _a[\"& .dx-context-menu-container-border\"] = {\n            \"display\": \"none\"\n        },\n        _a[\"& .xet-menu .dx-context-menu-content-delimiter\"] = {\n            \"display\": \"none!important\"\n        },\n        _a)\n});\nvar ReactSingleChoiceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactSingleChoiceAction, _super);\n    function ReactSingleChoiceAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { firstActiveItem: _this.props.items[0], lastExecutedItem: null, lastExcutedLeafItem: null };\n        _this.menuItemsSelector = createSelector(function (_a) {\n            var items = _a.items;\n            return items;\n        }, function (items) {\n            var root = { items: null };\n            root.items = ReactSingleChoiceAction.mapItems(items, root);\n            return [root];\n        });\n        _this.actionButtonElement = React.createRef();\n        _this.dropDownButtonElement = React.createRef();\n        _this.handleMouseEnter = function (_a) {\n            var target = _a.target;\n            var classList = target.classList;\n            if (classList.contains(dropDownButtonClassName) || classList.contains(actionButtonClassName)) {\n                _this.getElement(_this.actionButtonElement).classList.add(dxStateHoverClassName);\n                _this.getElement(_this.dropDownButtonElement).classList.add(dxStateHoverClassName);\n            }\n        };\n        _this.handleMouseLeave = function () {\n            _this.getElement(_this.actionButtonElement).classList.remove(dxStateHoverClassName);\n            _this.getElement(_this.dropDownButtonElement).classList.remove(dxStateHoverClassName);\n        };\n        _this.renderSubmenuItemComponent = function (item) {\n            if (_this.isRootItem(item)) {\n                return (React.createElement(Button, { icon: \"spindown\", elementAttr: { class: dropDownButtonClassName }, ref: _this.dropDownButtonElement, hoverStateEnabled: false }));\n            }\n            return React.createElement(MenuItemTemplate, tslib_1.__assign({}, tslib_1.__assign({}, item, { showArrow: ReactSingleChoiceAction.isLeafItem(item) })));\n        };\n        _this.executeAction = function (e) {\n            var itemToExecute = _this.getItemToExecute(), _a = _this.props, onExecute = _a.onExecute, _b = _a.showItemsOnClick, showItemsOnClick = _b === void 0 ? false : _b, onExecuteFn = itemToExecute.onExecute ? itemToExecute.onExecute : onExecute;\n            if (showItemsOnClick) {\n                setTimeout(function () {\n                    _this.getElement(_this.dropDownButtonElement).click();\n                });\n                return false;\n            }\n            return onExecuteFn(tslib_1.__assign({}, e, { itemData: itemToExecute }));\n        };\n        _this.executeItemClick = function (e) {\n            var itemData = e.itemData, _a = _this.props.onExecute, onExecuteFn = _a === void 0 ? function () { return undefined; } : _a, _b = itemData.onExecute, itemExecuteFn = _b === void 0 ? onExecuteFn : _b;\n            if (!_this.isRootItem(itemData)) {\n                var isLeafItem_1 = ReactSingleChoiceAction.isLeafItem(itemData);\n                _this.setState(function (prevState) {\n                    var lastExcutedLeafItem = isLeafItem_1 ? itemData : prevState.lastExcutedLeafItem;\n                    return tslib_1.__assign({}, prevState, { lastExecutedItem: itemData, lastExcutedLeafItem: lastExcutedLeafItem });\n                });\n                if (!isLeafItem_1) {\n                    return itemExecuteFn(e);\n                }\n            }\n        };\n        _this.getItemToExecute = function () {\n            var _a = _this.props.defaultItemMode, defaultItemMode = _a === void 0 ? \"FirstActiveItem\" : _a, _b = _this.state, lastExecutedItem = _b.lastExecutedItem, firstActiveItem = _b.firstActiveItem, itemToExecute = defaultItemMode === \"LastExecutedItem\" && lastExecutedItem\n                ? lastExecutedItem\n                : firstActiveItem;\n            return itemToExecute;\n        };\n        return _this;\n    }\n    ReactSingleChoiceAction.mapItems = function (items, parent) {\n        if (items === void 0) { items = []; }\n        if (parent === void 0) { parent = null; }\n        var hasIcon = items.some(function (item) { return !!item.icon; });\n        return items.map(function (item) {\n            var newItem = tslib_1.__assign({}, item, { parent: parent });\n            if (hasIcon) {\n                newItem = tslib_1.__assign({}, newItem, { icon: newItem.icon || \"empty\" });\n            }\n            if (ReactSingleChoiceAction.isLeafItem(item)) {\n                newItem.items = ReactSingleChoiceAction.mapItems(item.items, newItem);\n            }\n            return newItem;\n        });\n    };\n    ReactSingleChoiceAction.prototype.getElement = function (ref) {\n        return ref.current.instance.element();\n    };\n    ReactSingleChoiceAction.isLeafItem = function (item) {\n        return !!item.items;\n    };\n    ReactSingleChoiceAction.prototype.isRootItem = function (item) {\n        return !item.parent;\n    };\n    ReactSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        var itemToExecute = this.getItemToExecute(), _a = this.props, _b = _a.actionText, actionText = _b === void 0 ? itemToExecute.text : _b, _c = _a.actionIcon, actionIcon = _c === void 0 ? itemToExecute.icon : _c, _d = _a.showText, showText = _d === void 0 ? true : _d, showItemsOnClick = _a.showItemsOnClick, tooltip = _a.tooltip, style = _a.style, widgetTooltip = itemToExecute.tooltip || tooltip;\n        return (React.createElement(WithStyle, { className: this.props.className }, function (_a) {\n            var main = _a.main;\n            return (React.createElement(\"div\", { style: style, className: main, onMouseEnter: _this.handleMouseEnter, onMouseLeave: _this.handleMouseLeave },\n                React.createElement(Button, { onClick: _this.executeAction, icon: !showItemsOnClick ? actionIcon : null, text: showText ? actionText : null, hint: widgetTooltip, elementAttr: { class: actionButtonClassName }, ref: _this.actionButtonElement, hoverStateEnabled: false }),\n                React.createElement(Menu, { cssClass: \"xet-menu\", hint: widgetTooltip, showFirstSubmenuMode: \"onHover\", onItemClick: _this.executeItemClick, itemComponent: _this.renderSubmenuItemComponent, items: _this.menuItemsSelector(_this.props) })));\n        }));\n    };\n    ReactSingleChoiceAction.defaultProps = { _originalConfig: {} };\n    return ReactSingleChoiceAction;\n}(React.Component));\nexport default ReactSingleChoiceAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/app-player-react/dist/widgets/actions/single-choice-action.js\n// module id = 610\n// module chunks = 7 8","/*! eXpressApp Framework\n * @version v2018 vol 2\n * @link https://www.devexpress.com\n * @license https://www.devexpress.com/Support/EULAs/universal.xml \n * Copyright (C) 2000-2018 Developer Express Inc.  ALL RIGHTS RESERVED\n */\nimport * as tslib_1 from \"tslib\";\nimport { List } from \"devextreme-react/ui/list\";\nimport * as React from \"react\";\nimport { StandaloneMenuItemTemplate } from \"../menu-item\";\nimport ReactPopup from \"../popup-widget\";\nimport { ReactToolbar } from \"../toolbars/toolbar-widget\";\nimport { withTheme } from \"../with-theme\";\nimport ReactSingleChoiceAction from \"./single-choice-action\";\nvar PopupWithTheme = withTheme(ReactPopup);\nvar ReactMobileSingleChoiceAction = /** @class */ (function (_super) {\n    tslib_1.__extends(ReactMobileSingleChoiceAction, _super);\n    function ReactMobileSingleChoiceAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ReactMobileSingleChoiceAction.prototype.renderItem = function (item, showArrow) {\n        return (React.createElement(StandaloneMenuItemTemplate, tslib_1.__assign({}, tslib_1.__assign({}, item, { showArrow: showArrow }))));\n    };\n    ReactMobileSingleChoiceAction.prototype.renderItems = function (items, closePopup) {\n        var _this = this;\n        return (React.createElement(List, { items: items, itemComponent: function (item) { return _this.renderItem(item, ReactMobileSingleChoiceAction.isLeafItem(item)); }, onItemClick: function (e) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\n                var result, item;\n                return tslib_1.__generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, this.executeItemClick(e)];\n                        case 1:\n                            result = _a.sent(), item = e.itemData;\n                            if (!ReactMobileSingleChoiceAction.isLeafItem(item)) {\n                                closePopup();\n                            }\n                            return [2 /*return*/, result];\n                    }\n                });\n            }); } }));\n    };\n    ReactMobileSingleChoiceAction.prototype.navigateBack = function (togglePopupVisible) {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var lastExcutedLeafItem;\n            return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        lastExcutedLeafItem = this.state.lastExcutedLeafItem;\n                        if (!(lastExcutedLeafItem && !this.isRootItem(lastExcutedLeafItem))) return [3 /*break*/, 1];\n                        this.setState(function (prevState) {\n                            return tslib_1.__assign({}, prevState, { lastExecutedItem: lastExcutedLeafItem.parent, lastExcutedLeafItem: lastExcutedLeafItem.parent });\n                        });\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, togglePopupVisible()];\n                    case 2:\n                        _a.sent();\n                        if (this.props.onHide) {\n                            this.props.onHide();\n                        }\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ReactMobileSingleChoiceAction.prototype.renderToolbar = function (togglePopupVisible) {\n        var _this = this;\n        var actionText = this.props.actionText, _a = this.state, lastExcutedLeafItem = _a.lastExcutedLeafItem, firstActiveItem = _a.firstActiveItem, lastExcutedLeafItemText = lastExcutedLeafItem && lastExcutedLeafItem.text, firstActiveItemText = firstActiveItem && firstActiveItem.text, title = lastExcutedLeafItemText || actionText || firstActiveItemText;\n        return (React.createElement(ReactToolbar, { items: [\n                {\n                    id: \"menu\",\n                    type: \"command.button\",\n                    location: \"before\",\n                    icon: \"arrowleft\",\n                    onExecute: function () { _this.navigateBack(togglePopupVisible); }\n                },\n                {\n                    id: \"menu\",\n                    type: \"label\",\n                    location: \"before\",\n                    text: title\n                }\n            ] }));\n    };\n    ReactMobileSingleChoiceAction.prototype.getItems = function () {\n        var items = this.menuItemsSelector(this.props)[0].items, lastExcutedLeafItem = this.state.lastExcutedLeafItem;\n        return lastExcutedLeafItem ? lastExcutedLeafItem.items : items;\n    };\n    ReactMobileSingleChoiceAction.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(PopupWithTheme, { themeScope: \"detail-item-toolbar-mobile\", fullScreen: true, showTitle: false }, function (togglePopupVisible) { return (React.createElement(React.Fragment, null,\n            _this.renderToolbar(togglePopupVisible),\n            _this.renderItems(_this.getItems(), togglePopupVisible))); }));\n    };\n    return ReactMobileSingleChoiceAction;\n}(ReactSingleChoiceAction));\nexport default ReactMobileSingleChoiceAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/app-player-react/dist/widgets/actions/mobile-single-choice-action.js\n// module id = 629\n// module chunks = 7","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    inkRipple = require(\"../widget/utils.ink_ripple\"),\r\n    HierarchicalCollectionWidget = require(\"../hierarchical_collection/ui.hierarchical_collection_widget\"),\r\n    MenuBaseEditStrategy = require(\"./ui.menu_base.edit.strategy\"),\r\n    devices = require(\"../../core/devices\"),\r\n    themes = require(\"../themes\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_NO_ICONS_CLASS = DX_MENU_CLASS + \"-no-icons\",\r\n    DX_MENU_BASE_CLASS = \"dx-menu-base\",\r\n    ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_ITEM_CONTENT_CLASS = ITEM_CLASS + \"-content\",\r\n    DX_MENU_SELECTED_ITEM_CLASS = ITEM_CLASS + \"-selected\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = ITEM_CLASS + \"-wrapper\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_SEPARATOR_CLASS = DX_MENU_CLASS + \"-separator\",\r\n    DX_MENU_ITEM_LAST_GROUP_ITEM = DX_MENU_CLASS + \"-last-group-item\",\r\n    DX_ITEM_HAS_TEXT = ITEM_CLASS + \"-has-text\",\r\n    DX_ITEM_HAS_ICON = ITEM_CLASS + \"-has-icon\",\r\n    DX_ITEM_HAS_SUBMENU = ITEM_CLASS + \"-has-submenu\",\r\n    DX_MENU_ITEM_POPOUT_CLASS = ITEM_CLASS + \"-popout\",\r\n    DX_MENU_ITEM_POPOUT_CONTAINER_CLASS = DX_MENU_ITEM_POPOUT_CLASS + \"-container\",\r\n    DX_MENU_ITEM_CAPTION_CLASS = ITEM_CLASS + \"-text\",\r\n    SINGLE_SELECTION_MODE = \"single\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    };\r\nvar MenuBase = HierarchicalCollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            items: [],\r\n            cssClass: \"\",\r\n            activeStateEnabled: true,\r\n            showSubmenuMode: {\r\n                name: \"onHover\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    from: 0,\r\n                    to: 1,\r\n                    duration: 100\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    from: 1,\r\n                    to: 0,\r\n                    duration: 100\r\n                }\r\n            },\r\n            selectByClick: false,\r\n            focusOnSelectedItem: false,\r\n            keyExpr: null,\r\n            _itemAttributes: {\r\n                role: \"menuitem\"\r\n            },\r\n            useInkRipple: false\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return themes.isAndroid5()\r\n            },\r\n            options: {\r\n                useInkRipple: true\r\n            }\r\n        }])\r\n    },\r\n    _activeStateUnit: \".\" + ITEM_CLASS,\r\n    _itemDataKey: function() {\r\n        return \"dxMenuItemDataKey\"\r\n    },\r\n    _itemClass: function() {\r\n        return ITEM_CLASS\r\n    },\r\n    _setAriaSelected: commonUtils.noop,\r\n    _selectedItemClass: function() {\r\n        return DX_MENU_SELECTED_ITEM_CLASS\r\n    },\r\n    _widgetClass: function() {\r\n        return DX_MENU_BASE_CLASS\r\n    },\r\n    _focusTarget: function() {\r\n        return this._itemContainer()\r\n    },\r\n    _clean: function() {\r\n        this.option(\"focusedElement\", null);\r\n        this.callBase()\r\n    },\r\n    _supportedKeys: function() {\r\n        var selectItem = function() {\r\n            var $item = $(this.option(\"focusedElement\"));\r\n            if (!$item.length || !this._isSelectionEnabled()) {\r\n                return\r\n            }\r\n            this.selectItem($item[0])\r\n        };\r\n        return extend(this.callBase(), {\r\n            space: selectItem,\r\n            pageUp: commonUtils.noop,\r\n            pageDown: commonUtils.noop\r\n        })\r\n    },\r\n    _isSelectionEnabled: function() {\r\n        return this.option(\"selectionMode\") === SINGLE_SELECTION_MODE\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._renderSelectedItem();\r\n        this._initActions()\r\n    },\r\n    _getTextContainer: function(itemData) {\r\n        var itemText = itemData.text,\r\n            $itemContainer = $(\"<span>\").addClass(DX_MENU_ITEM_CAPTION_CLASS),\r\n            itemContent = typeUtils.isPlainObject(itemData) ? itemText : String(itemData);\r\n        return itemText && $itemContainer.text(itemContent)\r\n    },\r\n    _getPopoutContainer: function(itemData) {\r\n        var $popOutContainer, items = itemData.items;\r\n        if (items && items.length) {\r\n            var $popOutImage = $(\"<div>\").addClass(DX_MENU_ITEM_POPOUT_CLASS);\r\n            $popOutContainer = $(\"<span>\").addClass(DX_MENU_ITEM_POPOUT_CONTAINER_CLASS).append($popOutImage)\r\n        }\r\n        return $popOutContainer\r\n    },\r\n    _getDataAdapterOptions: function() {\r\n        return {\r\n            rootValue: 0,\r\n            multipleSelection: false,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            searchValue: \"\"\r\n        }\r\n    },\r\n    _selectByItem: function(selectedItem) {\r\n        if (!selectedItem) {\r\n            return\r\n        }\r\n        var nodeToSelect = this._dataAdapter.getNodeByItem(selectedItem);\r\n        this._dataAdapter.toggleSelection(nodeToSelect.internalFields.key, true)\r\n    },\r\n    _renderSelectedItem: function() {\r\n        var selectedKeys = this._dataAdapter.getSelectedNodesKeys(),\r\n            selectedKey = selectedKeys.length && selectedKeys[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (!selectedKey) {\r\n            this._selectByItem(selectedItem);\r\n            return\r\n        }\r\n        var node = this._dataAdapter.getNodeByKey(selectedKey);\r\n        if (false === node.selectable) {\r\n            return\r\n        }\r\n        if (!selectedItem) {\r\n            this.option(\"selectedItem\", node.internalFields.item);\r\n            return\r\n        }\r\n        if (selectedItem !== node.internalFields.item) {\r\n            this._dataAdapter.toggleSelection(selectedKey, false);\r\n            this._selectByItem(selectedItem)\r\n        }\r\n    },\r\n    _initActions: commonUtils.noop,\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this._addCustomCssClass(this.$element());\r\n        this.option(\"useInkRipple\") && this._renderInkRipple()\r\n    },\r\n    _renderInkRipple: function() {\r\n        this._inkRipple = inkRipple.render()\r\n    },\r\n    _toggleActiveState: function($element, value, e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        var config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    },\r\n    _getShowSubmenuMode: function() {\r\n        var defaultValue = \"onClick\",\r\n            optionValue = this.option(\"showSubmenuMode\");\r\n        optionValue = typeUtils.isObject(optionValue) ? optionValue.name : optionValue;\r\n        return this._isDesktopDevice() ? optionValue : defaultValue\r\n    },\r\n    _initSelectedItems: commonUtils.noop,\r\n    _isDesktopDevice: function() {\r\n        return \"desktop\" === devices.real().deviceType\r\n    },\r\n    _initEditStrategy: function() {\r\n        var Strategy = MenuBaseEditStrategy;\r\n        this._editStrategy = new Strategy(this)\r\n    },\r\n    _addCustomCssClass: function($element) {\r\n        $element.addClass(this.option(\"cssClass\"))\r\n    },\r\n    _itemWrapperSelector: function() {\r\n        return \".\" + DX_MENU_ITEM_WRAPPER_CLASS\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var that = this,\r\n            $itemElement = that._getItemElementByEventArgs(e);\r\n        if (!$itemElement || that._isItemDisabled($itemElement)) {\r\n            return\r\n        }\r\n        e.stopPropagation();\r\n        if (\"onHover\" === that._getShowSubmenuMode()) {\r\n            clearTimeout(this._showSubmenusTimeout);\r\n            this._showSubmenusTimeout = setTimeout(that._showSubmenu.bind(that, $itemElement), that._getSubmenuDelay(\"show\"))\r\n        }\r\n    },\r\n    _getAvailableItems: function($itemElements) {\r\n        return this.callBase($itemElements).filter(function() {\r\n            return \"hidden\" !== $(this).css(\"visibility\")\r\n        })\r\n    },\r\n    _isItemDisabled: function($item) {\r\n        return this._disabledGetter($item.data(this._itemDataKey()))\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        this._addExpandedClass($itemElement)\r\n    },\r\n    _addExpandedClass: function(itemElement) {\r\n        $(itemElement).addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _getSubmenuDelay: function(action) {\r\n        var delay = this.option(\"showSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[action]\r\n        }\r\n        return typeUtils.isObject(delay) ? delay[action] : delay\r\n    },\r\n    _getItemElementByEventArgs: function(eventArgs) {\r\n        var $target = $(eventArgs.target);\r\n        if ($target.hasClass(this._itemClass()) || $target.get(0) === eventArgs.currentTarget) {\r\n            return $target\r\n        }\r\n        while (!$target.hasClass(this._itemClass())) {\r\n            $target = $target.parent();\r\n            if ($target.hasClass(\"dx-submenu\")) {\r\n                return null\r\n            }\r\n        }\r\n        return $target\r\n    },\r\n    _hoverEndHandler: function() {\r\n        clearTimeout(this._showSubmenusTimeout)\r\n    },\r\n    _hasSubmenu: function(node) {\r\n        return node.internalFields.childrenKeys.length\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderItems(this._dataAdapter.getRootNodes())\r\n    },\r\n    _renderItems: function(nodes, submenuContainer) {\r\n        var $nodeContainer, that = this;\r\n        if (nodes.length) {\r\n            this.hasIcons = false;\r\n            $nodeContainer = this._renderContainer(this.$element(), submenuContainer);\r\n            var firstVisibleIndex = -1,\r\n                nextGroupFirstIndex = -1;\r\n            each(nodes, function(index, node) {\r\n                var isVisibleNode = false !== node.visible;\r\n                if (isVisibleNode && firstVisibleIndex < 0) {\r\n                    firstVisibleIndex = index\r\n                }\r\n                var isBeginGroup = firstVisibleIndex < index && (node.beginGroup || index === nextGroupFirstIndex);\r\n                if (isBeginGroup) {\r\n                    nextGroupFirstIndex = isVisibleNode ? index : index + 1\r\n                }\r\n                if (index === nextGroupFirstIndex && firstVisibleIndex < index) {\r\n                    that._renderSeparator($nodeContainer)\r\n                }\r\n                that._renderItem(index, node, $nodeContainer)\r\n            });\r\n            if (!this.hasIcons) {\r\n                $nodeContainer.addClass(DX_MENU_NO_ICONS_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _renderContainer: function($wrapper) {\r\n        return $(\"<ul>\").appendTo($wrapper).addClass(DX_MENU_ITEMS_CONTAINER_CLASS)\r\n    },\r\n    _createDOMElement: function($nodeContainer) {\r\n        var $node = $(\"<li>\").appendTo($nodeContainer).addClass(DX_MENU_ITEM_WRAPPER_CLASS);\r\n        return $node\r\n    },\r\n    _renderItem: function(index, node, $nodeContainer, $nodeElement) {\r\n        var $itemFrame, items = this.option(\"items\");\r\n        if (false === node.internalFields.item.visible) {\r\n            return\r\n        }\r\n        var $node = $nodeElement || this._createDOMElement($nodeContainer);\r\n        if (items[index + 1] && items[index + 1].beginGroup) {\r\n            $node.addClass(DX_MENU_ITEM_LAST_GROUP_ITEM)\r\n        }\r\n        $itemFrame = this.callBase(index, node.internalFields.item, $node);\r\n        if (node.internalFields.item === this.option(\"selectedItem\")) {\r\n            $itemFrame.addClass(DX_MENU_SELECTED_ITEM_CLASS)\r\n        }\r\n        $itemFrame.attr(\"tabIndex\", -1);\r\n        if (this._hasSubmenu(node)) {\r\n            this.setAria(\"haspopup\", \"true\", $itemFrame)\r\n        }\r\n    },\r\n    _renderItemFrame: function(index, itemData, $itemContainer) {\r\n        var $itemFrame = $itemContainer.children(\".\" + ITEM_CLASS);\r\n        return $itemFrame.length ? $itemFrame : this.callBase.apply(this, arguments)\r\n    },\r\n    _refreshItem: function($item, item) {\r\n        var node = this._dataAdapter.getNodeByItem(item),\r\n            index = $item.data(this._itemIndexKey()),\r\n            $nodeContainer = $item.closest(\"ul\"),\r\n            $nodeElement = $item.closest(\"li\");\r\n        this._renderItem(index, node, $nodeContainer, $nodeElement)\r\n    },\r\n    _addContentClasses: function(itemData, $itemFrame) {\r\n        var hasText = itemData.text ? !!itemData.text.length : false,\r\n            hasIcon = !!itemData.icon,\r\n            hasSubmenu = itemData.items ? !!itemData.items.length : false;\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_TEXT, hasText);\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_ICON, hasIcon);\r\n        if (!this.hasIcons) {\r\n            this.hasIcons = hasIcon\r\n        }\r\n        $itemFrame.toggleClass(DX_ITEM_HAS_SUBMENU, hasSubmenu)\r\n    },\r\n    _getItemContent: function($itemFrame) {\r\n        var $itemContent = this.callBase($itemFrame);\r\n        if (!$itemContent.length) {\r\n            $itemContent = $itemFrame.children(\".\" + DX_ITEM_CONTENT_CLASS)\r\n        }\r\n        return $itemContent\r\n    },\r\n    _postprocessRenderItem: function(args) {\r\n        var node, $itemElement = $(args.itemElement),\r\n            selectedIndex = this._dataAdapter.getSelectedNodesKeys();\r\n        if (!selectedIndex.length || !this._selectedGetter(args.itemData) || !this._isItemSelectable(args.itemData)) {\r\n            this._setAriaSelected($itemElement, \"false\");\r\n            return\r\n        }\r\n        node = this._dataAdapter.getNodeByItem(args.itemData);\r\n        if (node.internalFields.key === selectedIndex[0]) {\r\n            $itemElement.addClass(this._selectedItemClass());\r\n            this._setAriaSelected($itemElement, \"true\")\r\n        } else {\r\n            this._setAriaSelected($itemElement, \"false\")\r\n        }\r\n    },\r\n    _isItemSelectable: function(item) {\r\n        return false !== item.selectable\r\n    },\r\n    _renderSeparator: function($itemsContainer) {\r\n        $(\"<li>\").appendTo($itemsContainer).addClass(DX_MENU_SEPARATOR_CLASS)\r\n    },\r\n    _itemClickHandler: function(e) {\r\n        if (e._skipHandling) {\r\n            return\r\n        }\r\n        var itemClickActionHandler = this._createAction(this._updateSubmenuVisibilityOnClick.bind(this));\r\n        this._itemDXEventHandler(e, \"onItemClick\", {}, {\r\n            afterExecute: itemClickActionHandler.bind(this)\r\n        });\r\n        e._skipHandling = true\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (\"onClick\" === this._getShowSubmenuMode()) {\r\n            this._addExpandedClass(actionArgs.args[0].itemElement)\r\n        }\r\n    },\r\n    _updateSelectedItemOnClick: function(actionArgs) {\r\n        var selectedItemKey, args = actionArgs.args ? actionArgs.args[0] : actionArgs;\r\n        if (!this._isItemSelectionAllowed(args.itemData)) {\r\n            return\r\n        }\r\n        selectedItemKey = this._dataAdapter.getSelectedNodesKeys();\r\n        var selectedNode = selectedItemKey.length && this._dataAdapter.getNodeByKey(selectedItemKey[0]);\r\n        if (selectedNode) {\r\n            this._toggleItemSelection(selectedNode, false)\r\n        }\r\n        if (!selectedNode || selectedNode.internalFields.item !== args.itemData) {\r\n            this.selectItem(args.itemData)\r\n        } else {\r\n            this._fireSelectionChangeEvent(null, this.option(\"selectedItem\"));\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    },\r\n    _isItemSelectionAllowed: function(item) {\r\n        var isSelectionByClickEnabled = this._isSelectionEnabled() && this.option(\"selectByClick\");\r\n        return !this._isContainerEmpty() && isSelectionByClickEnabled && this._isItemSelectable(item) && !this._itemsGetter(item)\r\n    },\r\n    _isContainerEmpty: function() {\r\n        return this._itemContainer().is(\":empty\")\r\n    },\r\n    _syncSelectionOptions: commonUtils.asyncNoop,\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showSubmenuMode\":\r\n                break;\r\n            case \"selectedItem\":\r\n                var itemData = args.value,\r\n                    node = this._dataAdapter.getNodeByItem(itemData),\r\n                    selectedKey = this._dataAdapter.getSelectedNodesKeys()[0];\r\n                if (node && node.internalFields.key !== selectedKey) {\r\n                    if (false === node.selectable) {\r\n                        break\r\n                    }\r\n                    if (selectedKey) {\r\n                        this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n                    }\r\n                    this._toggleItemSelection(node, true);\r\n                    this._updateSelectedItems()\r\n                }\r\n                break;\r\n            case \"cssClass\":\r\n            case \"position\":\r\n            case \"selectByClick\":\r\n            case \"animation\":\r\n            case \"useInkRipple\":\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _toggleItemSelection: function(node, value) {\r\n        var itemElement = this._getElementByItem(node.internalFields.item);\r\n        itemElement && $(itemElement).toggleClass(DX_MENU_SELECTED_ITEM_CLASS);\r\n        this._dataAdapter.toggleSelection(node.internalFields.key, value)\r\n    },\r\n    _getElementByItem: function(itemData) {\r\n        var result, that = this;\r\n        each(this._itemElements(), function(_, itemElement) {\r\n            if ($(itemElement).data(that._itemDataKey()) !== itemData) {\r\n                return true\r\n            }\r\n            result = itemElement;\r\n            return false\r\n        });\r\n        return result\r\n    },\r\n    _updateSelectedItems: function(oldSelection, newSelection) {\r\n        if (oldSelection || newSelection) {\r\n            this._updateSelection(newSelection, oldSelection);\r\n            this._fireSelectionChangeEvent(newSelection, oldSelection)\r\n        }\r\n    },\r\n    _fireSelectionChangeEvent: function(addedSelection, removedSelection) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: [addedSelection],\r\n            removedItems: [removedSelection]\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedKey = this._dataAdapter.getSelectedNodesKeys()[0],\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.key !== selectedKey) {\r\n            if (selectedKey) {\r\n                this._toggleItemSelection(this._dataAdapter.getNodeByKey(selectedKey), false)\r\n            }\r\n            this._toggleItemSelection(node, true);\r\n            this._updateSelectedItems(selectedItem, itemData);\r\n            this._setOptionSilent(\"selectedItem\", itemData)\r\n        }\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        var itemData = itemElement.nodeType ? this._getItemData(itemElement) : itemElement,\r\n            node = this._dataAdapter.getNodeByItem(itemData),\r\n            selectedItem = this.option(\"selectedItem\");\r\n        if (node.internalFields.selected) {\r\n            this._toggleItemSelection(node, false);\r\n            this._updateSelectedItems(selectedItem, null);\r\n            this._setOptionSilent(\"selectedItem\", null)\r\n        }\r\n    }\r\n});\r\nmodule.exports = MenuBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.js\n// module id = 669\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./context_menu/ui.context_menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu.js\n// module id = 674\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/overlay/utils.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", {\r\n    value: true\r\n});\r\nexports.getElementMaxHeightByWindow = void 0;\r\nvar _renderer = require(\"../../core/renderer\");\r\nvar _renderer2 = _interopRequireDefault(_renderer);\r\nvar _window = require(\"../../core/utils/window\");\r\n\r\nfunction _interopRequireDefault(obj) {\r\n    return obj && obj.__esModule ? obj : {\r\n        \"default\": obj\r\n    }\r\n}\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nvar getElementMaxHeightByWindow = function($element) {\r\n    var window = (0, _window.getWindow)(),\r\n        offsetTop = $element.offset().top - (0, _renderer2.default)(window).scrollTop(),\r\n        offsetBottom = (0, _renderer2.default)(window).innerHeight() - offsetTop - $element.outerHeight();\r\n    return Math.max(offsetTop, offsetBottom) * WINDOW_HEIGHT_PERCENT\r\n};\r\nexports.getElementMaxHeightByWindow = getElementMaxHeightByWindow;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/overlay/utils.js\n// module id = 684\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu/ui.context_menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    domAdapter = require(\"../../core/dom_adapter\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    domUtils = require(\"../../core/utils/dom\"),\r\n    contains = domUtils.contains,\r\n    getPublicElement = domUtils.getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    fx = require(\"../../animation/fx\"),\r\n    positionUtils = require(\"../../animation/position\"),\r\n    devices = require(\"../../core/devices\"),\r\n    eventUtils = require(\"../../events/utils\"),\r\n    Overlay = require(\"../overlay\"),\r\n    MenuBase = require(\"./ui.menu_base\"),\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_MENU_PHONE_CLASS = \"dx-menu-phone-overlay\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_WRAPPER_CLASS = DX_MENU_ITEM_CLASS + \"-wrapper\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_HAS_CONTEXT_MENU_CLASS = \"dx-has-context-menu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    FOCUS_FIRST = \"first\",\r\n    FOCUS_LAST = \"last\",\r\n    ACTIONS = [\"onShowing\", \"onShown\", \"onSubmenuCreated\", \"onHiding\", \"onHidden\", \"onPositioning\", \"onLeftFirstItem\", \"onLeftLastItem\", \"onCloseRootSubmenu\", \"onExpandLastSubmenu\"],\r\n    LOCAL_SUBMENU_DIRECTIONS = [FOCUS_UP, FOCUS_DOWN, FOCUS_FIRST, FOCUS_LAST],\r\n    DEFAULT_SHOW_EVENT = \"dxcontextmenu\";\r\nvar ContextMenu = MenuBase.inherit(function() {\r\n    var getShowEvent = function(that) {\r\n            var result = null,\r\n                optionValue = that.option(\"showEvent\");\r\n            if (typeUtils.isObject(optionValue)) {\r\n                if (null !== optionValue.name) {\r\n                    result = optionValue.name || DEFAULT_SHOW_EVENT\r\n                }\r\n            } else {\r\n                result = optionValue\r\n            }\r\n            return result\r\n        },\r\n        getShowDelay = function(that) {\r\n            var optionValue = that.option(\"showEvent\");\r\n            return typeUtils.isObject(optionValue) && optionValue.delay\r\n        };\r\n    return {\r\n        _getDefaultOptions: function() {\r\n            return extend(this.callBase(), {\r\n                showEvent: DEFAULT_SHOW_EVENT,\r\n                closeOnOutsideClick: true,\r\n                position: {\r\n                    at: \"top left\",\r\n                    my: \"top left\"\r\n                },\r\n                onShowing: null,\r\n                onShown: null,\r\n                onSubmenuCreated: null,\r\n                onHiding: null,\r\n                onHidden: null,\r\n                onPositioning: null,\r\n                submenuDirection: \"auto\",\r\n                visible: false,\r\n                target: void 0,\r\n                onLeftFirstItem: null,\r\n                onLeftLastItem: null,\r\n                onCloseRootSubmenu: null,\r\n                onExpandLastSubmenu: null\r\n            })\r\n        },\r\n        _defaultOptionsRules: function() {\r\n            return this.callBase().concat([{\r\n                device: function() {\r\n                    return !windowUtils.hasWindow()\r\n                },\r\n                options: {\r\n                    animation: null\r\n                }\r\n            }])\r\n        },\r\n        _initActions: function() {\r\n            this._actions = {};\r\n            each(ACTIONS, function(index, action) {\r\n                this._actions[action] = this._createActionByOption(action) || noop\r\n            }.bind(this))\r\n        },\r\n        _setOptionsByReference: function() {\r\n            this.callBase();\r\n            extend(this._optionsByReference, {\r\n                animation: true,\r\n                selectedItem: true\r\n            })\r\n        },\r\n        _focusInHandler: noop,\r\n        _itemContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : $()\r\n        },\r\n        _eventBindingTarget: function() {\r\n            return this._itemContainer()\r\n        },\r\n        itemsContainer: function() {\r\n            return this._overlay ? this._overlay.$content() : void 0\r\n        },\r\n        _supportedKeys: function() {\r\n            var selectItem = function() {\r\n                var $item = $(this.option(\"focusedElement\"));\r\n                this.hide();\r\n                if (!$item.length || !this._isSelectionEnabled()) {\r\n                    return\r\n                }\r\n                this.selectItem($item[0])\r\n            };\r\n            return extend(this.callBase(), {\r\n                space: selectItem,\r\n                esc: this.hide\r\n            })\r\n        },\r\n        _getActiveItem: function() {\r\n            var $items = this._getAvailableItems(),\r\n                $focusedItem = $items.filter(\".dx-state-focused\"),\r\n                $hoveredItem = $items.filter(\".dx-state-hover\"),\r\n                $hoveredItemContainer = $hoveredItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS);\r\n            if ($hoveredItemContainer.find(\".\" + DX_MENU_ITEM_CLASS).index($focusedItem) >= 0) {\r\n                return $focusedItem\r\n            }\r\n            if ($hoveredItem.length) {\r\n                return $hoveredItem\r\n            }\r\n            return this.callBase()\r\n        },\r\n        _moveFocus: function(location) {\r\n            var $newTarget, $items = this._getItemsByLocation(location),\r\n                $oldTarget = this._getActiveItem(true),\r\n                $hoveredItem = this.itemsContainer().find(\".dx-state-hover\"),\r\n                $focusedItem = $(this.option(\"focusedElement\")),\r\n                $activeItemHighlighted = !!($focusedItem.length || $hoveredItem.length);\r\n            switch (location) {\r\n                case FOCUS_UP:\r\n                    $newTarget = $activeItemHighlighted ? this._prevItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.first())) {\r\n                        this._actions.onLeftFirstItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_DOWN:\r\n                    $newTarget = $activeItemHighlighted ? this._nextItem($items) : $oldTarget;\r\n                    if ($oldTarget.is($items.last())) {\r\n                        this._actions.onLeftLastItem($oldTarget)\r\n                    }\r\n                    break;\r\n                case FOCUS_RIGHT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._hideSubmenuHandler() : this._expandSubmenuHandler($items, location);\r\n                    break;\r\n                case FOCUS_LEFT:\r\n                    $newTarget = this.option(\"rtlEnabled\") ? this._expandSubmenuHandler($items, location) : this._hideSubmenuHandler();\r\n                    break;\r\n                case FOCUS_FIRST:\r\n                    $newTarget = $items.first();\r\n                    break;\r\n                case FOCUS_LAST:\r\n                    $newTarget = $items.last();\r\n                    break;\r\n                default:\r\n                    return this.callBase(location)\r\n            }\r\n            if (0 !== $newTarget.length) {\r\n                this.option(\"focusedElement\", getPublicElement($newTarget))\r\n            }\r\n        },\r\n        _getItemsByLocation: function(location) {\r\n            var $items, $activeItem = this._getActiveItem(true);\r\n            if (inArray(location, LOCAL_SUBMENU_DIRECTIONS) >= 0) {\r\n                $items = $activeItem.closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).children().children()\r\n            }\r\n            $items = this._getAvailableItems($items);\r\n            return $items\r\n        },\r\n        _getAriaTarget: function() {\r\n            return this.$element()\r\n        },\r\n        _refreshActiveDescendant: function() {\r\n            if (!this._overlay) {\r\n                return\r\n            }\r\n            var id = this.getFocusedItemId();\r\n            this.setAria(\"activedescendant\", \"\", this._overlay.$content());\r\n            this.setAria(\"activedescendant\", id, this._overlay.$content())\r\n        },\r\n        _hideSubmenuHandler: function() {\r\n            var $curItem = this._getActiveItem(true),\r\n                $parentItem = $curItem.parents(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).first();\r\n            if ($parentItem.length) {\r\n                this._hideSubmenusOnSameLevel($parentItem);\r\n                this._hideSubmenu($curItem.closest(\".\" + DX_SUBMENU_CLASS));\r\n                return $parentItem\r\n            }\r\n            this._actions.onCloseRootSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _expandSubmenuHandler: function($items, location) {\r\n            var $curItem = this._getActiveItem(true),\r\n                itemData = this._getItemData($curItem),\r\n                node = this._dataAdapter.getNodeByItem(itemData),\r\n                isItemHasSubmenu = this._hasSubmenu(node),\r\n                $submenu = $curItem.children(\".\" + DX_SUBMENU_CLASS);\r\n            if (isItemHasSubmenu && !$curItem.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                if (!$submenu.length || \"hidden\" === $submenu.css(\"visibility\")) {\r\n                    this._showSubmenu($curItem)\r\n                }\r\n                return this._nextItem(this._getItemsByLocation(location))\r\n            }\r\n            this._actions.onExpandLastSubmenu($curItem);\r\n            return $curItem\r\n        },\r\n        _clean: function() {\r\n            if (this._overlay) {\r\n                this._overlay.$element().remove();\r\n                this._overlay = null\r\n            }\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this.callBase()\r\n        },\r\n        _initMarkup: function() {\r\n            this.$element().addClass(DX_HAS_CONTEXT_MENU_CLASS);\r\n            this.callBase()\r\n        },\r\n        _render: function() {\r\n            this.callBase();\r\n            this._renderVisibility(this.option(\"visible\"));\r\n            this._addWidgetClass()\r\n        },\r\n        _renderContentImpl: function() {\r\n            this._detachShowContextMenuEvents(this._getTarget());\r\n            this._attachShowContextMenuEvents()\r\n        },\r\n        _attachKeyboardEvents: function() {\r\n            !this._keyboardProcessor && this._focusTarget().length && this.callBase()\r\n        },\r\n        _renderContextMenuOverlay: function() {\r\n            if (this._overlay) {\r\n                return\r\n            }\r\n            var $overlayContent, overlayOptions = this._getOverlayOptions(),\r\n                $overlayElement = $(\"<div>\");\r\n            this._overlay = this._createComponent($overlayElement.appendTo(this._$element), Overlay, overlayOptions);\r\n            $overlayContent = this._overlay.$content();\r\n            $overlayContent.addClass(DX_CONTEXT_MENU_CLASS);\r\n            this._addCustomCssClass($overlayContent);\r\n            this._addPlatformDependentClass($overlayContent);\r\n            this._attachContextMenuEvent()\r\n        },\r\n        _itemContextMenuHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _addPlatformDependentClass: function($element) {\r\n            if (devices.current().phone) {\r\n                $element.addClass(DX_MENU_PHONE_CLASS)\r\n            }\r\n        },\r\n        _detachShowContextMenuEvents: function(target) {\r\n            var eventName, showEvent = getShowEvent(this);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, this.NAME);\r\n            if (this._showContextMenuEventHandler) {\r\n                eventsEngine.off(domAdapter.getDocument(), eventName, target, this._showContextMenuEventHandler)\r\n            } else {\r\n                eventsEngine.off($(target), eventName)\r\n            }\r\n        },\r\n        _attachShowContextMenuEvents: function() {\r\n            var delay, handler, eventName, contextMenuAction, that = this,\r\n                target = that._getTarget(),\r\n                showEvent = getShowEvent(that);\r\n            if (!showEvent) {\r\n                return\r\n            }\r\n            eventName = eventUtils.addNamespace(showEvent, that.NAME);\r\n            contextMenuAction = that._createAction(function(e) {\r\n                delay = getShowDelay(that);\r\n                if (delay) {\r\n                    setTimeout(function() {\r\n                        that._show(e.event)\r\n                    }, delay)\r\n                } else {\r\n                    that._show(e.event)\r\n                }\r\n            }.bind(that), {\r\n                validatingTargetName: \"target\"\r\n            });\r\n            handler = function(e) {\r\n                contextMenuAction({\r\n                    event: e,\r\n                    target: $(e.currentTarget)\r\n                })\r\n            };\r\n            contextMenuAction = that._createAction(contextMenuAction);\r\n            if (typeUtils.isRenderer(target) || target.nodeType || typeUtils.isWindow(target)) {\r\n                that._showContextMenuEventHandler = void 0;\r\n                eventsEngine.on(target, eventName, handler)\r\n            } else {\r\n                that._showContextMenuEventHandler = handler;\r\n                eventsEngine.on(domAdapter.getDocument(), eventName, target, that._showContextMenuEventHandler)\r\n            }\r\n        },\r\n        _hoverEndHandler: function(e) {\r\n            this.callBase(e);\r\n            e.stopPropagation()\r\n        },\r\n        _renderDimensions: noop,\r\n        _renderContainer: function($wrapper, submenuContainer) {\r\n            var $itemsContainer, $holder = submenuContainer || this._itemContainer();\r\n            $wrapper = $(\"<div>\");\r\n            $wrapper.appendTo($holder).addClass(DX_SUBMENU_CLASS).css(\"visibility\", submenuContainer ? \"hidden\" : \"visible\");\r\n            $itemsContainer = this.callBase($wrapper);\r\n            if (submenuContainer) {\r\n                return $itemsContainer\r\n            }\r\n            if (this.option(\"width\")) {\r\n                return $itemsContainer.css(\"minWidth\", this.option(\"width\"))\r\n            }\r\n            if (this.option(\"height\")) {\r\n                return $itemsContainer.css(\"minHeight\", this.option(\"height\"))\r\n            }\r\n            return $itemsContainer\r\n        },\r\n        _renderSubmenuItems: function(node, $itemFrame) {\r\n            this._renderItems(this._getChildNodes(node), $itemFrame);\r\n            this._actions.onSubmenuCreated({\r\n                itemElement: getPublicElement($itemFrame),\r\n                itemData: node.internalFields.item,\r\n                submenuElement: getPublicElement($itemFrame.children(\".\" + DX_SUBMENU_CLASS))\r\n            })\r\n        },\r\n        _getOverlayOptions: function() {\r\n            var position = this.option(\"position\"),\r\n                overlayAnimation = this.option(\"animation\"),\r\n                overlayOptions = {\r\n                    focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n                    animation: overlayAnimation,\r\n                    closeOnOutsideClick: this._closeOnOutsideClickHandler.bind(this),\r\n                    propagateOutsideClick: true,\r\n                    closeOnTargetScroll: true,\r\n                    deferRendering: false,\r\n                    position: {\r\n                        at: position.at,\r\n                        my: position.my,\r\n                        of: this._getTarget(),\r\n                        collision: \"flipfit\"\r\n                    },\r\n                    shading: false,\r\n                    showTitle: false,\r\n                    height: \"auto\",\r\n                    width: \"auto\",\r\n                    onShown: this._overlayShownActionHandler.bind(this),\r\n                    onHiding: this._overlayHidingActionHandler.bind(this),\r\n                    onHidden: this._overlayHiddenActionHandler.bind(this)\r\n                };\r\n            return overlayOptions\r\n        },\r\n        _overlayShownActionHandler: function(arg) {\r\n            this._actions.onShown(arg)\r\n        },\r\n        _overlayHidingActionHandler: function(arg) {\r\n            this._actions.onHiding(arg);\r\n            if (!arg.cancel) {\r\n                this._hideAllShownSubmenus();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n        },\r\n        _overlayHiddenActionHandler: function(arg) {\r\n            this._actions.onHidden(arg)\r\n        },\r\n        _closeOnOutsideClickHandler: function(e) {\r\n            var $clickedItem, $activeItemContainer, $itemContainers, $rootItem, isRootItemClicked, isInnerOverlayClicked, closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n            if (typeUtils.isFunction(closeOnOutsideClick)) {\r\n                return closeOnOutsideClick(e)\r\n            }\r\n            if (!closeOnOutsideClick) {\r\n                return false\r\n            }\r\n            if (domAdapter.isDocument(e.target)) {\r\n                return true\r\n            }\r\n            $activeItemContainer = this._getActiveItemsContainer(e.target);\r\n            $itemContainers = this._getItemsContainers();\r\n            $clickedItem = this._searchActiveItem(e.target);\r\n            $rootItem = this.$element().parents(\".\" + DX_MENU_ITEM_CLASS);\r\n            isRootItemClicked = $clickedItem[0] === $rootItem[0] && $clickedItem.length && $rootItem.length;\r\n            isInnerOverlayClicked = this._isIncludeOverlay($activeItemContainer, $itemContainers) && $clickedItem.length;\r\n            if (isInnerOverlayClicked || isRootItemClicked) {\r\n                if (\"onClick\" === this._getShowSubmenuMode()) {\r\n                    this._hideAllShownChildSubmenus($clickedItem)\r\n                }\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _getActiveItemsContainer: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _getItemsContainers: function() {\r\n            return this._overlay._$content.find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS)\r\n        },\r\n        _searchActiveItem: function(target) {\r\n            return $(target).closest(\".\" + DX_MENU_ITEM_CLASS).eq(0)\r\n        },\r\n        _isIncludeOverlay: function($activeOverlay, $allOverlays) {\r\n            var isSame = false;\r\n            each($allOverlays, function(index, $overlay) {\r\n                if ($activeOverlay.is($overlay) && !isSame) {\r\n                    isSame = true\r\n                }\r\n            });\r\n            return isSame\r\n        },\r\n        _hideAllShownChildSubmenus: function($clickedItem) {\r\n            var $context, that = this,\r\n                $submenuElements = $clickedItem.find(\".\" + DX_SUBMENU_CLASS),\r\n                shownSubmenus = extend([], this._shownSubmenus);\r\n            if ($submenuElements.length > 0) {\r\n                each(shownSubmenus, function(index, $submenu) {\r\n                    $context = that._searchActiveItem($submenu.context).parent();\r\n                    if ($context.parent().is($clickedItem.parent().parent()) && !$context.is($clickedItem.parent())) {\r\n                        that._hideSubmenu($submenu)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _showSubmenu: function($item) {\r\n            var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n            this._hideSubmenusOnSameLevel($item);\r\n            if (!this._hasSubmenu(node)) {\r\n                return\r\n            }\r\n            var $submenu = $item.children(\".\" + DX_SUBMENU_CLASS),\r\n                isSubmenuRendered = $submenu.length;\r\n            this.callBase($item);\r\n            if (!isSubmenuRendered) {\r\n                this._renderSubmenuItems(node, $item)\r\n            }\r\n            if (!this._isSubmenuVisible($submenu)) {\r\n                this._drawSubmenu($item)\r\n            }\r\n        },\r\n        _hideSubmenusOnSameLevel: function($item) {\r\n            var $expandedItems = $item.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS).siblings().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            if ($expandedItems.length) {\r\n                $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                this._hideSubmenu($expandedItems.find(\".\" + DX_SUBMENU_CLASS))\r\n            }\r\n        },\r\n        _hideSubmenuGroup: function($submenu) {\r\n            if (this._isSubmenuVisible($submenu)) {\r\n                this._hideSubmenuCore($submenu)\r\n            }\r\n        },\r\n        _isSubmenuVisible: function($submenu) {\r\n            return \"visible\" === $submenu.css(\"visibility\")\r\n        },\r\n        _drawSubmenu: function($itemElement) {\r\n            var animation = this.option(\"animation\") ? this.option(\"animation\").show : {},\r\n                $submenu = $itemElement.children(\".\" + DX_SUBMENU_CLASS),\r\n                submenuPosition = this._getSubmenuPosition($itemElement);\r\n            if (this._overlay && this._overlay.option(\"visible\")) {\r\n                if (!typeUtils.isDefined(this._shownSubmenus)) {\r\n                    this._shownSubmenus = []\r\n                }\r\n                if (inArray($submenu, this._shownSubmenus)) {\r\n                    this._shownSubmenus.push($submenu)\r\n                }\r\n                if (animation) {\r\n                    fx.stop($submenu)\r\n                }\r\n                positionUtils.setup($submenu, submenuPosition);\r\n                if (animation) {\r\n                    if (typeUtils.isPlainObject(animation.to)) {\r\n                        animation.to.position = submenuPosition\r\n                    }\r\n                    this._animate($submenu, animation)\r\n                }\r\n                $submenu.css(\"visibility\", \"visible\")\r\n            }\r\n        },\r\n        _animate: function($container, options) {\r\n            fx.animate($container, options)\r\n        },\r\n        _getSubmenuPosition: function($rootItem) {\r\n            var submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n                $rootItemWrapper = $rootItem.parent(\".\" + DX_MENU_ITEM_WRAPPER_CLASS),\r\n                position = {\r\n                    collision: \"flip\",\r\n                    of: $rootItemWrapper,\r\n                    offset: {\r\n                        h: 0,\r\n                        v: -1\r\n                    }\r\n                };\r\n            switch (submenuDirection) {\r\n                case \"left\":\r\n                    position.at = \"left top\";\r\n                    position.my = \"right top\";\r\n                    break;\r\n                case \"right\":\r\n                    position.at = \"right top\";\r\n                    position.my = \"left top\";\r\n                    break;\r\n                default:\r\n                    if (this.option(\"rtlEnabled\")) {\r\n                        position.at = \"left top\";\r\n                        position.my = \"right top\"\r\n                    } else {\r\n                        position.at = \"right top\";\r\n                        position.my = \"left top\"\r\n                    }\r\n            }\r\n            return position\r\n        },\r\n        _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n            if (!actionArgs.args.length) {\r\n                return\r\n            }\r\n            var $itemElement = $(actionArgs.args[0].itemElement),\r\n                itemData = actionArgs.args[0].itemData,\r\n                node = this._dataAdapter.getNodeByItem(itemData);\r\n            if (!node) {\r\n                return\r\n            }\r\n            var $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS),\r\n                shouldRenderSubmenu = this._hasSubmenu(node) && !$submenu.length;\r\n            if (shouldRenderSubmenu) {\r\n                this._renderSubmenuItems(node, $itemElement);\r\n                $submenu = $itemElement.find(\".\" + DX_SUBMENU_CLASS)\r\n            }\r\n            if ($itemElement.context === $submenu.context && \"visible\" === $submenu.css(\"visibility\")) {\r\n                return\r\n            }\r\n            var notCloseMenuOnItemClick = itemData && false === itemData.closeMenuOnClick;\r\n            if (!itemData || itemData.disabled || notCloseMenuOnItemClick) {\r\n                return\r\n            }\r\n            this._updateSelectedItemOnClick(actionArgs);\r\n            if (0 === $submenu.length) {\r\n                var $prevSubmenu = $($itemElement.parents(\".\" + DX_SUBMENU_CLASS)[0]);\r\n                this._hideSubmenu($prevSubmenu);\r\n                if (!actionArgs.canceled && this._overlay && this._overlay.option(\"visible\")) {\r\n                    this.option(\"visible\", false)\r\n                }\r\n            } else {\r\n                if (this._shownSubmenus && this._shownSubmenus.length > 0) {\r\n                    if (this._shownSubmenus[0].is($submenu)) {\r\n                        this._hideSubmenu($submenu)\r\n                    }\r\n                }\r\n                this._showSubmenu($itemElement)\r\n            }\r\n        },\r\n        _hideSubmenu: function($curSubmenu) {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus);\r\n            each(shownSubmenus, function(index, $submenu) {\r\n                if ($curSubmenu.is($submenu) || contains($curSubmenu[0], $submenu[0])) {\r\n                    $submenu.parent().removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n                    that._hideSubmenuCore($submenu)\r\n                }\r\n            })\r\n        },\r\n        _hideSubmenuCore: function($submenu) {\r\n            var index = inArray($submenu, this._shownSubmenus),\r\n                animation = this.option(\"animation\") ? this.option(\"animation\").hide : null;\r\n            if (index >= 0) {\r\n                this._shownSubmenus.splice(index, 1)\r\n            }\r\n            this._stopAnimate($submenu);\r\n            animation && this._animate($submenu, animation);\r\n            $submenu.css(\"visibility\", \"hidden\")\r\n        },\r\n        _stopAnimate: function($container) {\r\n            fx.stop($container, true)\r\n        },\r\n        _hideAllShownSubmenus: function() {\r\n            var that = this,\r\n                shownSubmenus = extend([], that._shownSubmenus),\r\n                $expandedItems = this._overlay.$content().find(\".\" + DX_MENU_ITEM_EXPANDED_CLASS);\r\n            $expandedItems.removeClass(DX_MENU_ITEM_EXPANDED_CLASS);\r\n            each(shownSubmenus, function(_, $submenu) {\r\n                that._hideSubmenu($submenu)\r\n            })\r\n        },\r\n        _visibilityChanged: function(visible) {\r\n            if (visible) {\r\n                this._renderContentImpl()\r\n            }\r\n        },\r\n        _optionChanged: function(args) {\r\n            if (this._cancelOptionChange === args.name) {\r\n                return\r\n            }\r\n            if (inArray(args.name, ACTIONS) > -1) {\r\n                this._initActions();\r\n                return\r\n            }\r\n            switch (args.name) {\r\n                case \"visible\":\r\n                    this._renderVisibility(args.value);\r\n                    break;\r\n                case \"showEvent\":\r\n                case \"position\":\r\n                case \"submenuDirection\":\r\n                    this._invalidate();\r\n                    break;\r\n                case \"target\":\r\n                    args.previousValue && this._detachShowContextMenuEvents(args.previousValue);\r\n                    this.option(\"position\").of = null;\r\n                    this._invalidate();\r\n                    break;\r\n                case \"closeOnOutsideClick\":\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        _renderVisibility: function(showing) {\r\n            return showing ? this._show() : this._hide()\r\n        },\r\n        _toggleVisibility: noop,\r\n        _show: function(event) {\r\n            var args = {\r\n                    jQEvent: event\r\n                },\r\n                promise = (new Deferred).reject().promise();\r\n            this._actions.onShowing(args);\r\n            if (args.cancel) {\r\n                return promise\r\n            }\r\n            var position = this._positionContextMenu(event);\r\n            if (position) {\r\n                if (!this._overlay) {\r\n                    this._renderContextMenuOverlay();\r\n                    this._overlay.$content().addClass(this._widgetClass());\r\n                    this._renderFocusState();\r\n                    this._attachHoverEvents();\r\n                    this._attachClickEvent();\r\n                    this._renderItems(this._dataAdapter.getRootNodes())\r\n                }\r\n                this._setOptionSilent(\"visible\", true);\r\n                this._overlay.option(\"position\", position);\r\n                promise = this._overlay.show();\r\n                event && event.stopPropagation();\r\n                var id = \"dx-\" + new Guid;\r\n                this._overlay.$content().attr({\r\n                    id: id,\r\n                    role: \"menu\"\r\n                });\r\n                this.setAria(\"owns\", id)\r\n            }\r\n            return promise\r\n        },\r\n        _getTarget: function() {\r\n            return this.option(\"target\") || this.option(\"position\").of || $(domAdapter.getDocument())\r\n        },\r\n        _getContextMenuPosition: function() {\r\n            return extend({}, this.option(\"position\"), {\r\n                of: this._getTarget()\r\n            })\r\n        },\r\n        _positionContextMenu: function(jQEvent) {\r\n            var actionArgs, position = this._getContextMenuPosition(),\r\n                isInitialPosition = this._isInitialOptionValue(\"position\"),\r\n                positioningAction = this._createActionByOption(\"onPositioning\", actionArgs);\r\n            if (jQEvent && jQEvent.preventDefault && isInitialPosition) {\r\n                position.of = jQEvent\r\n            }\r\n            actionArgs = {\r\n                position: position,\r\n                event: jQEvent\r\n            };\r\n            positioningAction(actionArgs);\r\n            if (actionArgs.cancel) {\r\n                position = null\r\n            } else {\r\n                if (actionArgs.event) {\r\n                    actionArgs.event.cancel = true;\r\n                    jQEvent.preventDefault()\r\n                }\r\n            }\r\n            return position\r\n        },\r\n        _hide: function() {\r\n            var promise;\r\n            if (this._overlay) {\r\n                this._overlay.$content().removeAttr(\"id\");\r\n                promise = this._overlay.hide();\r\n                this._setOptionSilent(\"visible\", false)\r\n            }\r\n            this.setAria(\"owns\", void 0);\r\n            return promise || (new Deferred).reject().promise()\r\n        },\r\n        toggle: function(showing) {\r\n            var visible = this.option(\"visible\");\r\n            showing = void 0 === showing ? !visible : showing;\r\n            return this._renderVisibility(showing)\r\n        },\r\n        show: function() {\r\n            return this.toggle(true)\r\n        },\r\n        hide: function() {\r\n            return this.toggle(false)\r\n        }\r\n    }\r\n}());\r\nregisterComponent(\"dxContextMenu\", ContextMenu);\r\nmodule.exports = ContextMenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.context_menu.js\n// module id = 721\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/context_menu/ui.menu_base.edit.strategy.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar _typeof = \"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator ? function(obj) {\r\n    return typeof obj\r\n} : function(obj) {\r\n    return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj\r\n};\r\nvar $ = require(\"../../core/renderer\"),\r\n    map = require(\"../../core/utils/iterator\").map,\r\n    PlainEditStrategy = require(\"../collection/ui.collection_widget.edit.strategy.plain\");\r\nvar MenuBaseEditStrategy = PlainEditStrategy.inherit({\r\n    _getPlainItems: function() {\r\n        return map(this._collectionWidget.option(\"items\"), function getMenuItems(item) {\r\n            return item.items ? [item].concat(map(item.items, getMenuItems)) : item\r\n        })\r\n    },\r\n    _stringifyItem: function(item) {\r\n        var that = this;\r\n        return JSON.stringify(item, function(key, value) {\r\n            if (\"template\" === key) {\r\n                return that._getTemplateString(value)\r\n            }\r\n            return value\r\n        })\r\n    },\r\n    _getTemplateString: function(template) {\r\n        var result;\r\n        if (\"object\" === (\"undefined\" === typeof template ? \"undefined\" : _typeof(template))) {\r\n            result = $(template).text()\r\n        } else {\r\n            result = template.toString()\r\n        }\r\n        return result\r\n    }\r\n});\r\nmodule.exports = MenuBaseEditStrategy;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/context_menu/ui.menu_base.edit.strategy.js\n// module id = 722\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nmodule.exports = require(\"./menu/ui.menu\");\r\nmodule.exports.default = module.exports;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu.js\n// module id = 723\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu/ui.menu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    eventsEngine = require(\"../../events/core/events_engine\"),\r\n    registerComponent = require(\"../../core/component_registrator\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    getElementMaxHeightByWindow = require(\"../overlay/utils\").getElementMaxHeightByWindow,\r\n    eventUtils = require(\"../../events/utils\"),\r\n    pointerEvents = require(\"../../events/pointer\"),\r\n    hoverEvents = require(\"../../events/hover\"),\r\n    MenuBase = require(\"../context_menu/ui.menu_base\"),\r\n    Overlay = require(\"../overlay\"),\r\n    Submenu = require(\"./ui.submenu\"),\r\n    Button = require(\"../button\"),\r\n    TreeView = require(\"../tree_view\");\r\nvar DX_MENU_CLASS = \"dx-menu\",\r\n    DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\",\r\n    DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\",\r\n    DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\",\r\n    DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\",\r\n    DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\",\r\n    DX_CONTEXT_MENU_CLASS = \"dx-context-menu\",\r\n    DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\",\r\n    DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\",\r\n    DX_STATE_DISABLED_CLASS = \"dx-state-disabled\",\r\n    DX_STATE_HOVER_CLASS = \"dx-state-hover\",\r\n    DX_STATE_ACTIVE_CLASS = \"dx-state-active\",\r\n    DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\",\r\n    DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\",\r\n    DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\",\r\n    FOCUS_UP = \"up\",\r\n    FOCUS_DOWN = \"down\",\r\n    FOCUS_LEFT = \"left\",\r\n    FOCUS_RIGHT = \"right\",\r\n    SHOW_SUBMENU_OPERATION = \"showSubmenu\",\r\n    NEXTITEM_OPERATION = \"nextItem\",\r\n    PREVITEM_OPERATION = \"prevItem\",\r\n    DEFAULT_DELAY = {\r\n        show: 50,\r\n        hide: 300\r\n    },\r\n    ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\"];\r\nvar Menu = MenuBase.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _itemElements: function() {\r\n        var rootMenuElements = this.callBase(),\r\n            submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    },\r\n    _submenuItemElements: function() {\r\n        var elements = [],\r\n            itemSelector = \".\" + DX_MENU_ITEM_CLASS,\r\n            currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _moveFocus: function(location) {\r\n        var argument, operation, navigationAction, $newTarget, $items = this._getAvailableItems(),\r\n            isMenuHorizontal = this._isMenuHorizontal(),\r\n            $activeItem = this._getActiveItem(true);\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return this.callBase(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    },\r\n    _getItemsNavigationOperation: function(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    },\r\n    _getKeyboardNavigationAction: function(operation, argument) {\r\n        var action = commonUtils.noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    },\r\n    _clean: function() {\r\n        this.callBase();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _isAdaptivityEnabled: function() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _updateItemsWidthCache: function() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\" + DX_MENU_ITEM_CLASS);\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = this.$element().outerWidth();\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this._submenus = []\r\n    },\r\n    _initActions: function() {\r\n        this._actions = {};\r\n        each(ACTIONS, function(index, action) {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }.bind(this))\r\n    },\r\n    _initMarkup: function() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        this.callBase();\r\n        this.setAria(\"role\", \"menubar\")\r\n    },\r\n    _render: function() {\r\n        this.callBase();\r\n        this._initAdaptivity()\r\n    },\r\n    _renderHamburgerButton: function() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    },\r\n    _toggleTreeView: function(state) {\r\n        if (typeUtils.isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    },\r\n    _toggleHamburgerActiveState: function(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    },\r\n    _toggleAdaptiveMode: function(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\" + DX_MENU_HORIZONTAL_CLASS),\r\n            $adaptiveElements = this.$element().find(\".\" + DX_ADAPTIVE_MODE_CLASS);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    },\r\n    _removeAdaptivity: function() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    },\r\n    _treeviewItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    },\r\n    _getAdaptiveOverlayOptions: function() {\r\n        var rtl = this.option(\"rtlEnabled\"),\r\n            position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(this.$element())\r\n            }.bind(this),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            closeOnTargetScroll: true,\r\n            onHidden: function() {\r\n                this._toggleHamburgerActiveState(false)\r\n            }.bind(this),\r\n            height: \"auto\",\r\n            closeOnOutsideClick: function(e) {\r\n                return !!!$(e.target).closest(\".\" + DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS).length\r\n            },\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    },\r\n    _getTreeViewOptions: function() {\r\n        var menuOptions = {},\r\n            that = this,\r\n            optionsToTransfer = [\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"],\r\n            actionsToTransfer = [\"onItemContextMenu\", \"onSelectionChanged\"];\r\n        each(optionsToTransfer, function(_, option) {\r\n            menuOptions[option] = that.option(option)\r\n        });\r\n        each(actionsToTransfer, function(_, actionName) {\r\n            menuOptions[actionName] = function(e) {\r\n                this._actions[actionName](e)\r\n            }.bind(that)\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: that.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: that._treeviewItemClickHandler.bind(that),\r\n            onItemExpanded: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            }.bind(that),\r\n            onItemCollapsed: function(e) {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            }.bind(that),\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    },\r\n    _initAdaptivity: function() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay._wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    },\r\n    _getDelay: function(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!typeUtils.isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return typeUtils.isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    },\r\n    _keyboardHandler: function(e) {\r\n        return this._visibleSubmenu ? true : this.callBase(e)\r\n    },\r\n    _renderContainer: function() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return this.callBase($wrapper)\r\n    },\r\n    _renderSubmenuItems: function(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    },\r\n    _createSubmenu: function(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var childKeyboardProcessor = this._keyboardProcessor && this._keyboardProcessor.attachChildProcessor(),\r\n            items = this._getChildNodes(node),\r\n            result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n                _keyboardProcessor: childKeyboardProcessor,\r\n                _dataAdapter: this._dataAdapter,\r\n                _parentKey: node.internalFields.key,\r\n                items: items,\r\n                onHoverStart: this._clearTimeouts.bind(this),\r\n                position: this.getSubmenuPosition($rootItem)\r\n            }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    },\r\n    _getSubmenuOptions: function() {\r\n        var $submenuTarget = $(\"<div>\"),\r\n            isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: function(e) {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            }.bind(this),\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this.option(\"onItemRendered\"),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    },\r\n    _getShowFirstSubmenuMode: function() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return typeUtils.isObject(optionValue) ? optionValue.name : optionValue\r\n    },\r\n    _moveMainMenuFocus: function(direction) {\r\n        var $items = this._getAvailableItems(),\r\n            itemCount = $items.length,\r\n            $currentItem = $items.filter(\".\" + DX_MENU_ITEM_EXPANDED_CLASS).eq(0),\r\n            itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else {\r\n            if (itemIndex < 0) {\r\n                itemIndex = itemCount - 1\r\n            }\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    },\r\n    _nestedItemOnSelectionChangedHandler: function(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0],\r\n            submenu = Submenu.getInstance(args.element),\r\n            onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionSilent(\"selectedItem\", selectedItem)\r\n    },\r\n    _clearSelectionInSubmenus: function(item, targetSubmenu) {\r\n        var that = this,\r\n            cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, function(index, submenu) {\r\n            var $submenu = submenu._itemContainer(),\r\n                isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer()),\r\n                $selectedItem = $submenu.find(\".\" + that._selectedItemClass());\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                var selectedItemData;\r\n                $selectedItem.removeClass(that._selectedItemClass());\r\n                selectedItemData = that._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    },\r\n    _clearRootSelection: function() {\r\n        var $prevSelectedItem = this.$element().find(\".\" + DX_MENU_ITEMS_CONTAINER_CLASS).first().children().children().filter(\".\" + this._selectedItemClass());\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData;\r\n            prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    },\r\n    _nestedItemOnItemClickHandler: function(e) {\r\n        this._actions.onItemClick(e)\r\n    },\r\n    _attachSubmenuHandlers: function($rootItem, submenu) {\r\n        var that = this,\r\n            $submenuOverlayContent = submenu.getOverlayContent(),\r\n            submenus = $submenuOverlayContent.find(\".\" + DX_SUBMENU_CLASS),\r\n            submenuMouseLeaveName = eventUtils.addNamespace(hoverEvents.end, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, function(index, submenu) {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, that._submenuMouseLeaveHandler.bind(that, $rootItem))\r\n        })\r\n    },\r\n    _submenuOnShowingHandler: function($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS);\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    },\r\n    _submenuOnShownHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuOnHidingHandler: function($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\" + DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS),\r\n            args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    },\r\n    _submenuOnHiddenHandler: function($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    },\r\n    _submenuMouseLeaveHandler: function($rootItem, eventArgs) {\r\n        var that = this,\r\n            target = $(eventArgs.relatedTarget).parents(\".\" + DX_CONTEXT_MENU_CLASS)[0],\r\n            contextMenu = that._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            that._clearTimeouts();\r\n            setTimeout(that._hideSubmenuAfterTimeout.bind(that), that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideSubmenuAfterTimeout: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS),\r\n            isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\" + DX_STATE_HOVER_CLASS).length;\r\n        if (!isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    },\r\n    _getSubmenuByRootElement: function($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\" + DX_CONTEXT_MENU_CLASS);\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    },\r\n    getSubmenuPosition: function($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal(),\r\n            submenuDirection = this.option(\"submenuDirection\").toLowerCase(),\r\n            rtlEnabled = this.option(\"rtlEnabled\"),\r\n            submenuPosition = {\r\n                collision: \"flip\",\r\n                of: $rootItem\r\n            };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    },\r\n    _renderBorderElement: function($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    },\r\n    _itemPointerDownHandler: function(e) {\r\n        var $target = $(e.target),\r\n            $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var mouseMoveEventName = eventUtils.addNamespace(pointerEvents.move, this.NAME),\r\n            $item = this._getItemElementByEventArgs(e),\r\n            node = this._dataAdapter.getNodeByItem(this._getItemData($item)),\r\n            isSelectionActive = typeUtils.isDefined(e.buttons) && 1 === e.buttons || !typeUtils.isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    },\r\n    _hoverEndHandler: function(eventArg) {\r\n        var that = this,\r\n            $item = that._getItemElementByEventArgs(eventArg),\r\n            relatedTarget = $(eventArg.relatedTarget);\r\n        that.callBase(eventArg);\r\n        that._clearTimeouts();\r\n        if (that._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (that.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            that._hideSubmenuTimer = setTimeout(function() {\r\n                that._hideSubmenuAfterTimeout()\r\n            }, that._getDelay(\"hide\"))\r\n        }\r\n    },\r\n    _hideVisibleSubmenu: function() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    },\r\n    _showSubmenu: function($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    },\r\n    _hideSubmenu: function(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    },\r\n    _itemMouseMoveHandler: function(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var that = this,\r\n            $item = $(e.currentTarget);\r\n        if (!typeUtils.isDefined(that._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        that._clearTimeouts();\r\n        that._showSubmenuTimer = setTimeout(function() {\r\n            var submenu = that._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                that._showSubmenu($item)\r\n            }\r\n        }, that._getDelay(\"show\"))\r\n    },\r\n    _clearTimeouts: function() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    },\r\n    _getSubmenuByElement: function($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    },\r\n    _updateSubmenuVisibilityOnClick: function(actionArgs) {\r\n        var currentSubmenu, args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    },\r\n    _optionChanged: function(args) {\r\n        if (this._cancelOptionChange === args.name) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"onSubmenuShowing\":\r\n            case \"onSubmenuShown\":\r\n            case \"onSubmenuHiding\":\r\n            case \"onSubmenuHidden\":\r\n                this._initActions();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value)\r\n                }\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _changeSubmenusOption: function(name, value) {\r\n        each(this._submenus, function(index, submenu) {\r\n            submenu.option(name, value)\r\n        })\r\n    },\r\n    selectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    },\r\n    unselectItem: function(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        this.callBase(itemElement)\r\n    }\r\n});\r\nregisterComponent(\"dxMenu\", Menu);\r\nmodule.exports = Menu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.menu.js\n// module id = 724\n// module chunks = 1 7 8","/**\r\n * DevExtreme (ui/menu/ui.submenu.js)\r\n * Version: 18.2.5\r\n * Build date: Wed Jan 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    getPublicElement = require(\"../../core/utils/dom\").getPublicElement,\r\n    positionUtils = require(\"../../animation/position\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    ContextMenu = require(\"../context_menu\");\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\",\r\n    DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar Submenu = ContextMenu.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    },\r\n    _initDataAdapter: function() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            this.callBase()\r\n        }\r\n    },\r\n    _renderContentImpl: function() {\r\n        this._renderContextMenuOverlay();\r\n        this.callBase();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    },\r\n    _renderDelimiter: function() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    },\r\n    _getOverlayOptions: function() {\r\n        return extend(this.callBase(), {\r\n            closeOnTargetScroll: false,\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    },\r\n    _overlayPositionedActionHandler: function(arg) {\r\n        this._showDelimiter(arg)\r\n    },\r\n    _hoverEndHandler: function(e) {\r\n        this.callBase(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    },\r\n    _isMenuHorizontal: function() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    },\r\n    _hoverStartHandler: function(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        this.callBase(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    },\r\n    _drawSubmenu: function($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _hideSubmenu: function($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        this.callBase($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    },\r\n    _showDelimiter: function(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\" + DX_SUBMENU_CLASS).eq(0),\r\n            $rootItem = this.option(\"position\").of,\r\n            position = {\r\n                of: $submenu\r\n            },\r\n            containerOffset = arg.position,\r\n            vLocation = containerOffset.v.location,\r\n            hLocation = containerOffset.h.location,\r\n            rootOffset = $rootItem.offset(),\r\n            offsetLeft = Math.round(rootOffset.left),\r\n            offsetTop = Math.round(rootOffset.top),\r\n            rootWidth = $rootItem.width(),\r\n            rootHeight = $rootItem.height(),\r\n            submenuWidth = $submenu.width(),\r\n            submenuHeight = $submenu.height();\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        this.$contentDelimiter.width(this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        this.$contentDelimiter.height(this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                this.$contentDelimiter.height(5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else {\r\n            if (hLocation > offsetLeft) {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"-1 1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"left bottom\"\r\n                }\r\n            } else {\r\n                if (Math.round(vLocation) === offsetTop) {\r\n                    position.offset = \"1 1\";\r\n                    position.at = position.my = \"right top\"\r\n                } else {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        }\r\n        positionUtils.setup(this.$contentDelimiter, position)\r\n    },\r\n    _getContextMenuPosition: function() {\r\n        return this.option(\"position\")\r\n    },\r\n    isOverlayVisible: function() {\r\n        return this._overlay.option(\"visible\")\r\n    },\r\n    getOverlayContent: function() {\r\n        return this._overlay.$content()\r\n    }\r\n});\r\nmodule.exports = Submenu;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme/ui/menu/ui.submenu.js\n// module id = 725\n// module chunks = 1 7 8","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_1 = require(\"devextreme/ui/menu\");\nvar prop_types_1 = require(\"prop-types\");\nvar component_1 = require(\"./core/component\");\nvar nested_option_1 = require(\"./core/nested-option\");\nvar Menu = /** @class */ (function (_super) {\n    __extends(Menu, _super);\n    function Menu() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._WidgetClass = menu_1.default;\n        _this._defaults = {\n            defaultItems: \"items\",\n            defaultSelectedItem: \"selectedItem\"\n        };\n        _this._expectedChildren = {\n            animation: { optionName: \"animation\", isCollectionItem: false },\n            item: { optionName: \"items\", isCollectionItem: true },\n            showFirstSubmenuMode: { optionName: \"showFirstSubmenuMode\", isCollectionItem: false },\n            showSubmenuMode: { optionName: \"showSubmenuMode\", isCollectionItem: false }\n        };\n        _this._templateProps = [{\n                tmplOption: \"itemTemplate\",\n                render: \"itemRender\",\n                component: \"itemComponent\",\n                keyFn: \"itemKeyFn\"\n            }];\n        return _this;\n    }\n    Object.defineProperty(Menu.prototype, \"instance\", {\n        get: function () {\n            return this._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Menu;\n}(component_1.Component));\nexports.Menu = Menu;\nMenu.propTypes = {\n    accessKey: prop_types_1.PropTypes.string,\n    activeStateEnabled: prop_types_1.PropTypes.bool,\n    adaptivityEnabled: prop_types_1.PropTypes.bool,\n    animation: prop_types_1.PropTypes.object,\n    cssClass: prop_types_1.PropTypes.string,\n    dataSource: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.array,\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.string\n    ]),\n    disabled: prop_types_1.PropTypes.bool,\n    disabledExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    displayExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    elementAttr: prop_types_1.PropTypes.object,\n    focusStateEnabled: prop_types_1.PropTypes.bool,\n    height: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ]),\n    hideSubmenuOnMouseLeave: prop_types_1.PropTypes.bool,\n    hint: prop_types_1.PropTypes.string,\n    hoverStateEnabled: prop_types_1.PropTypes.bool,\n    items: prop_types_1.PropTypes.array,\n    itemsExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onContentReady: prop_types_1.PropTypes.func,\n    onDisposing: prop_types_1.PropTypes.func,\n    onInitialized: prop_types_1.PropTypes.func,\n    onItemClick: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    onItemContextMenu: prop_types_1.PropTypes.func,\n    onItemRendered: prop_types_1.PropTypes.func,\n    onOptionChanged: prop_types_1.PropTypes.func,\n    onSelectionChanged: prop_types_1.PropTypes.func,\n    onSubmenuHidden: prop_types_1.PropTypes.func,\n    onSubmenuHiding: prop_types_1.PropTypes.func,\n    onSubmenuShowing: prop_types_1.PropTypes.func,\n    onSubmenuShown: prop_types_1.PropTypes.func,\n    orientation: prop_types_1.PropTypes.oneOf([\n        \"horizontal\",\n        \"vertical\"\n    ]),\n    rtlEnabled: prop_types_1.PropTypes.bool,\n    selectByClick: prop_types_1.PropTypes.bool,\n    selectedExpr: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.string\n    ]),\n    selectedItem: prop_types_1.PropTypes.object,\n    selectionMode: prop_types_1.PropTypes.oneOf([\n        \"none\",\n        \"single\"\n    ]),\n    showFirstSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    showSubmenuMode: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.object,\n        prop_types_1.PropTypes.oneOf([\n            \"onClick\",\n            \"onHover\"\n        ])\n    ]),\n    submenuDirection: prop_types_1.PropTypes.oneOf([\n        \"auto\",\n        \"leftOrTop\",\n        \"rightOrBottom\"\n    ]),\n    tabIndex: prop_types_1.PropTypes.number,\n    visible: prop_types_1.PropTypes.bool,\n    width: prop_types_1.PropTypes.oneOfType([\n        prop_types_1.PropTypes.func,\n        prop_types_1.PropTypes.number,\n        prop_types_1.PropTypes.string\n    ])\n};\n// tslint:disable:max-classes-per-file\n// owners:\n// Menu\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Animation.OptionName = \"animation\";\n    Animation.ExpectedChildren = {\n        hide: { optionName: \"hide\", isCollectionItem: false },\n        show: { optionName: \"show\", isCollectionItem: false }\n    };\n    return Animation;\n}(nested_option_1.default));\nexports.Animation = Animation;\n// owners:\n// ShowFirstSubmenuMode\n// ShowSubmenuMode\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Delay.OptionName = \"delay\";\n    return Delay;\n}(nested_option_1.default));\nexports.Delay = Delay;\n// owners:\n// Animation\nvar Hide = /** @class */ (function (_super) {\n    __extends(Hide, _super);\n    function Hide() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hide.OptionName = \"hide\";\n    return Hide;\n}(nested_option_1.default));\nexports.Hide = Hide;\n// owners:\n// Menu\nvar Item = /** @class */ (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Item.OptionName = \"items\";\n    Item.IsCollectionItem = true;\n    Item.TemplateProps = [{\n            tmplOption: \"template\",\n            render: \"render\",\n            component: \"component\",\n            keyFn: \"keyFn\"\n        }];\n    return Item;\n}(nested_option_1.default));\nexports.Item = Item;\n// owners:\n// Animation\nvar Show = /** @class */ (function (_super) {\n    __extends(Show, _super);\n    function Show() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Show.OptionName = \"show\";\n    return Show;\n}(nested_option_1.default));\nexports.Show = Show;\n// owners:\n// Menu\nvar ShowFirstSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowFirstSubmenuMode, _super);\n    function ShowFirstSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowFirstSubmenuMode.OptionName = \"showFirstSubmenuMode\";\n    ShowFirstSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowFirstSubmenuMode;\n}(nested_option_1.default));\nexports.ShowFirstSubmenuMode = ShowFirstSubmenuMode;\n// owners:\n// Menu\nvar ShowSubmenuMode = /** @class */ (function (_super) {\n    __extends(ShowSubmenuMode, _super);\n    function ShowSubmenuMode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShowSubmenuMode.OptionName = \"showSubmenuMode\";\n    ShowSubmenuMode.ExpectedChildren = {\n        delay: { optionName: \"delay\", isCollectionItem: false }\n    };\n    return ShowSubmenuMode;\n}(nested_option_1.default));\nexports.ShowSubmenuMode = ShowSubmenuMode;\nexports.default = Menu;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/menu.js\n// module id = 728\n// module chunks = 7 8","/*!\n * devextreme-react\n * Version: 18.2.5\n * Build date: Wed Jan 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @deprecated Use 'devextreme-react/menu' file instead */\n__export(require(\"../menu\"));\nvar menu_1 = require(\"../menu\");\nexports.default = menu_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/devextreme-react/ui/menu.js\n// module id = 778\n// module chunks = 7 8"],"sourceRoot":""}